{
    "HomeLayout": {
        "Support me on Buy me a coffee": "Поддержите меня в Купи мне кофе!",
        "Description": "Многоязычная библиотека, созданная для валидации, различные поля формы, такие как: электронная почта, телефон, пароль, cpf, cnpj, кредитная карта, магические числа для проверки mimetype изображений и многое другое.",
        "Technology": "Технологии",
        "Opengraph description": "Многоязычная библиотека, сделанная для валидации, различные поля формы, такие как: электронная почта, изображение, cpf, cnpj, кредитная карта, магические числа и многое другое.",
        "Classification": "Библиотека валидации",
        "Title": "Многоформный валидатор",
        "Opengraph title": "Multiform Validator - Ваша многоязычная библиотека валидации"
    },
    "DocumentationJs": {
        "By - Gabriel Logan": "Автор: - Габриэль Логан",
        "Installation": "Установка",
        "This package contains various modules for validating different types of data. Below are the available validation modules:": "Этот пакет содержит различные модули для проверки различных типов данных. Ниже приведены доступные модули валидации:",
        "INFO: ": "ИНФОРМАЦИЯ: ",
        "Welcome Introduction Text": "Добро пожаловать на главную страницу Multiform Validator! Здесь вы найдете подробную документацию по различным функциям, предоставляемым Multiform Validator, полезной библиотекой JavaScript для проверки данных. Каждая функция предназначена для помощи в проверке различных типов данных, что делает ваш код более надежным и безопасным. Multiform Validator состоит из ряда специализированных функций, которые позволяют проверять различные типы данных, такие как адреса электронной почты, пароли, имена, фамилии, номера паспортов, номера телефонов и многое другое. Каждая функция имеет настраиваемые параметры и предоставляет настраиваемые сообщения об ошибках в соответствии с потребностями вашего проекта. На каждой странице документации вы найдете подробное описание функции, включая ее назначение, допустимые параметры и примеры использования. Кроме того, у вас будет доступ к сведениям о сообщениях об ошибках по умолчанию и о том, как настроить их в соответствии с вашим приложением. Используя Multiform Validator, вы можете убедиться, что пользовательский ввод в ваши формы является правильным и соответствует установленным правилам. Эта проверка необходима для предотвращения таких проблем, как недопустимые записи, поврежденные данные или уязвимости безопасности. Мы постоянно работаем над улучшением и расширением Multiform Validator новыми функциями и улучшениями, чтобы сделать его еще более мощным и гибким инструментом для ваших потребностей в валидации. Мы надеемся, что эта документация окажется полезной и упростит использование Multiform Validator в ваших проектах. Не стесняйтесь изучать различные доступные функции и не стесняйтесь обращаться к нам, если у вас есть какие-либо вопросы или предложения. Благодарим Вас за то, что Вы выбрали Multiform Validator в качестве инструмента валидации данных, и желаем успехов в Ваших проектах! Команда валидаторов Multiform",
        "if you prefer, you can use importing as:": "При желании вы можете использовать импорт как:",
        "Official documentation": "Официальная документация",
        "Example of use with CDN": "Пример использования с CDN",
        "Data Validator": "Валидатор данных",
        "FirstInfoText": "Все функции с именем \"validate\" возвращают объект с двумя свойствами: isValid: true | false и errorMsg: 'Строка с ошибками'",
        "Feel free to find bugs Text Msg": "Не стесняйтесь находить ошибки и сообщать о них мне. Мы высоко ценим ваши отзывы. Обнимаю Габриэля Логана!",
        "Back to home page": "Вернуться на главную страницу",
        "If you want to help me, you can buy me a coffee (:": "Если вы хотите мне помочь, вы можете купить мне кофе (:",
        "SecondInfoText": "Остальные могут возвращать true|false|string|array, посмотрите doc для каждого из них",
        "Available Validation Modules": "Доступные модули валидации",
        "Feel free to explore msg": "Не стесняйтесь исследовать различные функции и экспериментировать с различными входными данными, чтобы понять их поведение. Если у вас возникнут какие-либо проблемы или у вас есть предложения, не стесняйтесь обращаться ко мне. Ваши отзывы ценны и помогают улучшить пакет. Удачного программирования!",
        "This npm package provides JavaScript functions to validate various forms fields.": "Этот пакет npm предоставляет функции JavaScript для проверки различных полей форм."
    },
    "DocumentationLayout": {
        "Documentation": "Документация",
        "Documentation for the Multiform Validator library.": "Документация по библиотеке Multiform Validator."
    },
    "Terms": {
        "Terms and Conditions": "Правила и условия",
        "Unauthorized use of this website is strictly prohibited.": "Несанкционированное использование данного веб-сайта строго запрещено.",
        "Terms and Conditions of Multiform Validator library": "Правила и условия библиотеки Multiform Validator",
        "Welcome to Gabriel Logan Web Services. By using this website, you agree to the following terms and conditions:": "Добро пожаловать в веб-сервисы Габриэля Логана. Используя этот веб-сайт, вы соглашаетесь со следующими условиями и положениями:",
        "We do not collect any personal data through this website, and your privacy is important to us.": "Мы не собираем никаких персональных данных через этот веб-сайт, и ваша конфиденциальность важна для нас.",
        "Your use of this website and any disputes arising are subject to the laws of [Your Country/Region].": "Использование вами данного веб-сайта и любые возникающие споры регулируются законодательством [Вашей страны/региона].",
        "The content provided on this website is for general information purposes only, and we make no warranties or representations regarding its accuracy or completeness.": "Контент, представленный на этом веб-сайте, предназначен только для общих информационных целей, и мы не даем никаких гарантий или заявлений относительно его точности или полноты.",
        "We use the \"multiform-validator\" library, licensed under the MIT License, to enhance form field validation. However, we are not responsible for its usage or any consequences resulting from third-party use of the library.": "Мы используем библиотеку \"multiform-validator\", лицензируемую под лицензией MIT, для улучшения валидации полей формы. Тем не менее, мы не несем ответственности за ее использование или любые последствия, возникшие в результате использования библиотеки третьими лицами.",
        "Thank you for visiting our website and using our services. If you have any questions or concerns, please don’t hesitate to contact us.": "Благодарим Вас за посещение нашего сайта и использование наших услуг. Если у вас есть какие-либо вопросы или проблемы, пожалуйста, не стесняйтесь обращаться к нам."
    },
    "PrivacyPolices": {
        "privacy_questions": "Если у вас есть какие-либо вопросы или опасения по поводу нашей политики конфиденциальности или использования библиотеки \"multiform-validator\", пожалуйста, не стесняйтесь обращаться к нам. Мы здесь, чтобы ответить на любые вопросы и обеспечить ваше спокойствие.",
        "privacy_intro": "В Gabriel Logan Web Services мы серьезно относимся к вашей конфиденциальности. Мы хотим заверить вас, что мы не собираем никаких данных на нашем веб-сайте, и мы не используем какие-либо данные через библиотеку \"multiform-validator\". Ваша информация остается полностью конфиденциальной, и ваша конфиденциальность имеет для нас первостепенное значение.",
        "Privacy Policy": "Политика конфиденциальности",
        "validator_local": "Библиотека \"multiform-validator\" предназначена для валидации полей форм в ваших веб-приложениях без доступа или передачи каких-либо данных на внешние серверы. Вся проверка выполняется локально в вашем браузере, гарантируя, что ваша конфиденциальная информация никогда не покинет ваше устройство.",
        "privacy_thanks": "Благодарим вас за выбор веб-сервисов Gabriel Logan. Мы с нетерпением ждем возможности предоставить вам исключительные решения, защищая вашу конфиденциальность на каждом этапе пути.",
        "privacy_title": "Политика конфиденциальности - С нами ваши данные в безопасности",
        "validator_secure": "Мы понимаем важность безопасности данных, и именно поэтому мы тщательно разработали библиотеку \"multiform-validator\", чтобы быть на 100% безопасной. Ваши данные остаются под вашим контролем, и мы не имеем доступа к какой-либо информации, обрабатываемой библиотекой.",
        "privacy_no_personal_data": "Когда вы посещаете наш веб-сайт, будьте уверены, что никакие персональные данные, такие как ваше имя, адрес электронной почты или контактная информация, не собираются и не хранятся. Мы верим в то, что предоставляем вам безопасный и анонимный опыт просмотра.",
        "privacy_trust": "Ваше доверие ценно для нас, и мы хотим, чтобы вы чувствовали себя уверенно, пользуясь нашими услугами и библиотекой \"multiform-validator\". Наша приверженность вашей конфиденциальности непоколебима, и мы будем продолжать уделять приоритетное внимание безопасности и защите ваших данных во всех аспектах нашей работы."
    },
    "Info": {
        "info_intro": "Представляем multiform-validator, мощную мультибиблиотеку, разработанную Габриэлем Логаном. Эта универсальная библиотека предназначена для проверки многочисленных полей форм, включая адреса электронной почты, номера телефонов, пароли, CPF (бразильские индивидуальные регистрационные номера налогоплательщиков), номера кредитных карт и многое другое.",
        "info_conclusion": "Поэтому, если вы ищете комплексное решение для проверки полей формы, обратите внимание на multiform-validator. Воспользуйтесь возможностями этой библиотеки и будьте уверены, что ваш процесс сбора данных будет оптимизирован, точен и безопасен.",
        "info_title": "multiform-validator - Мультибиблиотека для валидации полей формы",
        "info_performance": "Габриэль Логан гордится тем, что разрабатывает библиотеку мультиформ-валидаторов с акцентом на производительность, эффективность и надежность. Библиотека оптимизирована для различных браузеров, что обеспечивает бесшовную совместимость для вашей разнообразной аудитории.",
        "info_prebuilt_rules": "Библиотека multiform-validator поставляется с обширным набором встроенных правил валидации и настраиваемых параметров. Вы можете легко интегрировать его в свои веб-приложения и пользоваться преимуществами проверки на стороне клиента, уменьшая количество недопустимых отправок форм и улучшая общий пользовательский опыт.",
        "info_flexibility": "Что отличает multiform-validator, так это его гибкость и простота использования. Вы можете легко применять правила валидации к различным полям формы, просто добавив несколько строк кода JavaScript. Кроме того, библиотека предоставляет информативные сообщения об ошибках, подсказывающие пользователям, как исправить введенные данные, тем самым снижая уровень разочарования и отказов от формы.",
        "Info_Page": "Информационная страница",
        "info_backend": "Вы также можете использовать multiform-validator для выполнения валидаций в вашем бэкенде, он работает для любого типа валидации форм или функций, использующих javascript, python, поэтому не стесняйтесь использовать его",
        "info_ensure": "С помощью multiform-validator вы можете быть уверены, что данные, отправленные через ваши формы, являются точными и безопасными. Независимо от того, создаете ли вы регистрационную форму, процесс оформления заказа или любую систему ввода данных, эта библиотека поможет вам."
    },
    "Manifest": {
        "Description": "Многоязычная библиотека, созданная для валидации, различные поля формы, такие как: электронная почта, телефон, пароль, cpf, cnpj, кредитная карта, магические числа для проверки mimetype изображений и многое другое.",
        "ShortName": "Многоформный валидатор",
        "Name": "Multiform Validator - Ваша многоязычная библиотека валидации"
    },
    "DocumentationPage": {
        "doc_java_title": "Ява",
        "doc_py_text": "Здесь вы можете найти документацию по языку Python.",
        "doc_title": "Страница документации",
        "doc_subtitle": "Вот все языки, которые мы поддерживаем",
        "doc_java_text": "Здесь вы можете найти документацию по языку Java.",
        "doc_py_title": "Питон",
        "doc_js_title": "Код JavaScript",
        "doc_intro": "Добро пожаловать на страницу документации. Здесь вы можете найти все языки, которые мы поддерживаем, и документацию по каждому из них.",
        "doc_js_text": "Здесь вы можете найти документацию по языку JavaScript.",
        "doc_java_coming": "В грядущем..."
    },
    "About": {
        "about_backend": "Но на этом мои навыки не заканчиваются. Я одинаково хорошо разбираюсь в бэкенд-разработке, а также в таких языках, как Python, Java и JavaScript (Node.js). Создание надежных и безопасных веб-приложений — моя сильная сторона, так как я понимаю тонкости серверной логики. Мои решения ориентированы на эффективность, надежность и масштабируемость, гарантируя, что даже в периоды пиковой нагрузки мои приложения обеспечивают бесперебойную работу пользователей.",
        "about_frontend": "Как фронтенд-разработчик, я очень хорошо разбираюсь в пользовательском опыте и дизайне интерфейсов. Мне нравится превращать творческие концепции в визуально увлекательные и интерактивные веб-приложения с помощью React и Nextjs с машинописным текстом. От бесшовной навигации до плавной анимации, я уделяю внимание каждой детали, чтобы мои фронтенд-проекты излучали элегантность и функциональность.",
        "About_Page": "Страница «О нас»",
        "about_achievement": "Одним из моих самых больших достижений является создание новаторской веб-страницы, которая упрощает и ускоряет проверку форм. Это гениальное решение призвано помочь людям и компаниям оптимизировать процесс проверки форм. Используя свои обширные знания в области веб-разработки и внедряя передовые технологии, моя страница предлагает молниеносный и СУПЕР эффективный способ проверки форм. Его удобный интерфейс и интуитивно понятные функции делают его незаменимым инструментом для профессионалов, стремящихся повысить свою производительность и точность сбора данных.",
        "about_title": "Здравствуйте, я Габриэль Логан",
        "about_inspiration": "Когда я не погружаюсь в программирование, вы можете обнаружить, что я ищу вдохновение в окружающем мире. Независимо от того, исследую ли я природу, погружаюсь в искусство и культуру или участвую в наводящих на размышления дискуссиях, я опираюсь на разнообразный опыт, который формирует мой подход к программированию и взаимодействию с коллегами и клиентами.",
        "About_Page_Description": "Познакомьтесь с Габриэлем Логаном, создателем библиотеки multiform-validator, и узнайте о его страсти к веб-разработке, инновационным решениям и преданности пользовательскому опыту.",
        "about_creative": "Помимо технических навыков, я преуспеваю в творческом подходе к решению проблем. Мне нравится решать задачи с инновационным мышлением, и я всегда нахожусь в поиске способов улучшить пользовательский опыт. Моя способность мыслить нестандартно и предлагать изобретательные решения выделяет меня как настоящего лидера в области веб-разработки.",
        "about_conclusion": "В заключение, я Габриэль Логан, страстный программист, который органично сочетает в себе навыки фронтенда и бэкенда для создания исключительного веб-опыта. Мое инновационное мышление, внимание к деталям и стремление к эффективности привели меня к созданию новаторской страницы, которая, по моему мнению, окажет значительное влияние на мир валидации форм. По мере того, как цифровой ландшафт продолжает развиваться, я нахожусь на переднем крае, готовый принять новые вызовы и изменить мир к лучшему благодаря своей исключительной работе в области веб-разработки.",
        "about_intro": "Я считаю себя разносторонним программистом со страстью как к front-end, так и к back-end разработке. Создание исключительного веб-опыта — это то, что движет мной, и я безмерно горжусь своей работой."
    },
    "HomePage": {
        "HelpMsg": "Вы также можете помочь программисту, купив кофе по ссылке ниже, заранее спасибо (:",
        "SeeThePypiPage": "Смотрите страницу pypi",
        "Intro": "Используя мою библиотеку, вы можете преобразовать множество строк кода в очень небольшое количество строк, и в результате у вас будет более чистый, сильный и безопасный код, у вас будет несколько инструментов и функций, которые будут выполнять несколько валидаций форм",
        "Hello": "Привет",
        "Documentation": "Документация",
        "FollowThe": "Следуйте инструкциям",
        "Welcome": "Добро пожаловать на сайт multiform-validator",
        "SeeTheGithubSourceCode": "Смотрите исходный код github",
        "ForMoreInfo": "Дополнительная информация",
        "SeeTheNpmPage": "Смотрите страницу npm"
    },
    "DocumentationJsFunctions": {
        "Alternatively, you can import the function using CommonJS syntax with": "Кроме того, вы можете импортировать функцию, используя синтаксис CommonJS с помощью",
        "if the input value matches any of the supported postal code formats, and": "если входное значение соответствует любому из поддерживаемых форматов почтовых индексов, и",
        "The function takes two parameters:": "Функция принимает два параметра:",
        "containing the default error message 'Unknown error'.": "содержащее сообщение об ошибке по умолчанию 'Unknown error'.",
        "If the conversion is successful (resulting in a valid integer), the function checks if the integer is within the valid port range (1 to 65535). If the value is within this range and it is an integer, the function returns true, indicating that the input value represents a valid port number. Otherwise, it returns false.": "Если преобразование прошло успешно (в результате получилось допустимое целое число), функция проверяет, находится ли целое число в допустимом диапазоне портов (от 1 до 65535). Если значение находится в пределах этого диапазона и является целым числом, функция возвращает true, указывая, что входное значение представляет допустимый номер порта. В противном случае возвращается false.",
        "The function can be imported using ES6 syntax from the \"multiform-validator\" package:": "Функция может быть импортирована с помощью синтаксиса ES6 из пакета \"multiform-validator\":",
        "Brazil: 9 digits (e.g., '123456789')": "Бразилия: 9 цифр (например, '123456789')",
        "The US phone number to be validated.": "Номер телефона в США, который необходимо подтвердить.",
        "if the input string is a valid MD5 hash and follows the supported format, and": "если входная строка является допустимым хешем MD5 и соответствует поддерживаемому формату, и",
        "parameter (non-array), or if an error occurs during the validation process, the function will return an object with": "(не массив), или если в процессе валидации возникнет ошибка, функция вернет объект с",
        "Note:": "Заметка:",
        "function checks if the input string is a valid MAC address. It returns": "проверяет, является ли входная строка допустимым MAC-адресом. Он возвращает",
        "[optional] - The maximum length allowed for the email address. If not provided, the default value is 400.": "[необязательно] - Максимально допустимая длина адреса электронной почты. Если не указано, значение по умолчанию равно 400.",
        "Parameters": "Параметры",
        "The password to be validated.": "Пароль, который необходимо проверить.",
        "This function just checks the syntax of the email to see if it's valid or not, if you need a stronger validation, use: ": "Эта функция просто проверяет синтаксис письма, чтобы увидеть, является ли оно действительным или нет, если вам нужна более строгая проверка, используйте: ",
        "function is used to validate Brazilian phone numbers. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"errorMsg\" property will contain the error message if the phone number is invalid, or it will be null if the phone number is valid.": "используется для проверки бразильских телефонных номеров. Он возвращает объект с двумя свойствами: \"isValid\" (логическое значение) и \"errorMsg\" (строка). Свойство \"errorMsg\" будет содержать сообщение об ошибке, если номер телефона недействителен, или оно будет иметь значение null, если номер телефона действителен.",
        "if the input string is empty or consists of only whitespace characters, and": "если входная строка пуста или состоит только из пробельных символов, и",
        "The CPF number to be validated.": "Номер CPF, который необходимо проверить.",
        "The function first checks if the input value is either a string or a number. If the value is a string, it is converted to an integer using": "Сначала функция проверяет, является ли входное значение строкой или числом. Если значение является строкой, оно преобразуется в целое число с помощью",
        "Supported Passport Formats": "Поддерживаемые форматы паспортов",
        "Default Error Messages": "Сообщения об ошибках по умолчанию",
        "optional array": "Необязательный массив",
        "Whether the password requires at least one number. Default value: false.": "Требуется ли для пароля хотя бы одна цифра. Значение по умолчанию: false.",
        "The function is a text area validation utility that checks the validity of a given textarea string based on certain criteria.": "Функция представляет собой утилиту проверки текстовой области, которая проверяет допустимость заданной строки textarea на основе определенных критериев.",
        "The input string to check if it is a valid Brazilian ZIP Code (CEP).": "Входная строка для проверки действительного почтового индекса Бразилии (CEP).",
        "The input text from which emails will be extracted.": "Входной текст, из которого будут извлечены электронные письма.",
        "function is used to validate passport numbers. It returns an object with two properties: 'isValid' (boolean) and 'country' (string). The 'isValid' property will be true if the passport number matches the supported formats, and 'country' property will indicate the country associated with the passport number. If the passport number does not match any supported format, 'isValid' will be false, and 'country' will be null.": "используется для проверки номеров паспортов. Он возвращает объект с двумя свойствами: 'isValid' (логическое значение) и 'country' (строка). Свойство 'isValid' будет иметь значение true, если номер паспорта соответствует поддерживаемым форматам, а свойство 'country' укажет страну, связанную с номером паспорта. Если номер паспорта не соответствует ни одному из поддерживаемых форматов, 'isValid' будет иметь значение false, а 'country' будет иметь значение null.",
        "How to use the isValidVideo function": "Как использовать функцию isValidVideo",
        "function is used to validate surnames. It returns an object with two properties: 'isValid' (boolean) and 'errorMsg' (string). The 'isValid' property will be true if the surname meets the specified criteria, and 'errorMsg' will contain the error message if the surname is invalid, or it will be null if the surname is valid.": "используется для валидации фамилий. Он возвращает объект с двумя свойствами: 'isValid' (логическое значение) и 'errorMsg' (строка). Свойство 'isValid' будет иметь значение true, если фамилия соответствует указанным критериям, и 'errorMsg' будет содержать сообщение об ошибке, если фамилия недействительна, или будет иметь значение null, если фамилия действительна.",
        "The surname to be validated.": "Фамилия, подлежащая валидации.",
        "Contains the corresponding error message, if any, based on the validation result.": "Содержит соответствующее сообщение об ошибке, если таковое имеется, на основе результата проверки.",
        "You can also pass an options object as a second argument to exclude a specific type.": "Вы также можете передать объект options в качестве второго аргумента, чтобы исключить определенный тип.",
        "Australia: 1 uppercase letter followed by 7 digits (e.g., 'A1234567')": "Австралия: 1 заглавная буква, за которой следуют 7 цифр (например, 'A1234567')",
        "United States: 9 digits (e.g., '123456789')": "США: 9 цифр (например, '123456789')",
        "function is used to validate email addresses. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"errorMsg\" property will contain the error message if the email address is invalid, or it will be null if the email address is valid.": "используется для проверки адресов электронной почты. Он возвращает объект с двумя свойствами: \"isValid\" (логическое значение) и \"errorMsg\" (строка). Свойство \"errorMsg\" будет содержать сообщение об ошибке, если адрес электронной почты недействителен, или будет иметь значение null, если адрес электронной почты действителен.",
        "The": "Тем",
        "The function expects the input value to be passed as a string. It checks each character of the string, and if any character has a character code greater than 127 (non-ASCII), the function returns": "Функция ожидает, что входное значение будет передано в виде строки. Она проверяет каждый символ строки, и если какой-либо символ имеет код символа больше 127 (не ASCII), функция возвращает",
        "The input string to check if it is a valid Base64 string.": "Входная строка, чтобы проверить, является ли она допустимой строкой Base64.",
        "The maximum length of the surname. Default is 25.": "Максимальная длина фамилии. По умолчанию 25.",
        "[optional] - The minimum length of the username. Default is 1.": "[optional] - Минимальная длина имени пользователя. По умолчанию 1.",
        "If the input is not a string or an empty string, it throws an error.": "Если входные данные не являются строкой или пустой строкой, выдается ошибка.",
        "The function expects the input value to be passed as a string. It checks if the string is a valid Base64 string using a regular expression. If the input is not a string or an empty string, it throws an error.": "Функция ожидает, что входное значение будет передано в виде строки. Он проверяет, является ли строка допустимой строкой Base64, используя регулярное выражение. Если входные данные не являются строкой или пустой строкой, выдается ошибка.",
        "'veryWeak' - Password with less than 6 characters, consisting only of numbers": "'veryWeak' - Пароль длиной менее 6 символов, состоящий только из цифр",
        "if the credit card number is valid, and": "если номер кредитной карты действителен, и",
        "The function expects the input value to be passed as a string representing a credit card number. It removes any non-digit characters and applies the Luhn algorithm to validate the credit card number. If the input is not a string, the function throws an error.": "Функция ожидает, что входное значение будет передано в виде строки, представляющей номер кредитной карты. Он удаляет все нецифровые символы и применяет алгоритм Луна для проверки номера кредитной карты. Если входные данные не являются строкой, функция выдает ошибку.",
        "function from 'multiform-validator'. Then, define the path to the image you want to check. Call the": "из 'multiform-validator'. Затем определите путь к изображению, которое вы хотите проверить. Вызовите",
        "function checks if the input string is a valid date.": "проверяет, является ли входная строка допустимой датой.",
        "The input string to check if it is empty or contains only whitespace characters.": "Входная строка, чтобы проверить, является ли она пустой или содержит только пробельные символы.",
        "function checks if the input string is a valid email address. It returns": "проверяет, является ли входная строка действительным адресом электронной почты. Он возвращает",
        "Whether the password requires at least one special character": "Требуется ли для пароля хотя бы один специальный символ",
        "The passport number to be validated.": "Номер паспорта, подлежащего проверке.",
        "The function returns an object with two properties:": "Функция возвращает объект с двумя свойствами:",
        "The function expects the input to be passed as a string.": "Функция ожидает, что входные данные будут переданы в виде строки.",
        "if the value is a valid port number (within the range 1 to 65535), and": "если значение является допустимым номером порта (в диапазоне от 1 до 65535), и",
        "The email address to be validated.": "Адрес электронной почты, который необходимо подтвердить.",
        "'regular' - Password greater than 10 and has characters that are repeated more than 5 times in sequence": "'regular' - Пароль больше 10 и содержит символы, которые повторяются более 5 раз подряд",
        "function evaluates the strength of a given password and returns the type of password strength as a string. The possible strength types are: \"veryWeak\", \"weak\", \"regular\", \"strong\", or \"veryStrong\", based on specific criteria.": "Функция оценивает надежность заданного пароля и возвращает тип надежности пароля в виде строки. Возможные типы силы: \"оченьСлабый\", \"слабый\", \"обычный\", \"сильный\" или \"очень сильный\", в зависимости от определенных критериев.",
        "which means it won't clean the email addresses after default domains ['.br', '.io', '.pt', '.us', '.org', '.com'];. If set to": "Это означает, что он не будет очищать адреса электронной почты после доменов по умолчанию ['.br', '.io', '.pt', '.us', '.org', '.com'];. Если установлено значение",
        "Using": "Использование",
        "postalCode": "почтовый индекс",
        "The postal code to be checked for validity.": "Почтовый индекс, который необходимо проверить на действительность.",
        "or not provided, it will return only the first email address found as a string.": "или не указано, он вернет только первый найденный адрес электронной почты в виде строки.",
        "Function is used to validate phone numbers. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"isValid\" property will be true if the phone number meets the specified criteria, and \"errorMsg\" will contain the error message if the phone number is invalid, or it will be null if the phone number is valid.": "Функция используется для валидации телефонных номеров. Он возвращает объект с двумя свойствами: \"isValid\" (логическое значение) и \"errorMsg\" (строка). Свойство \"isValid\" будет иметь значение true, если номер телефона соответствует указанным критериям, и \"errorMsg\" будет содержать сообщение об ошибке, если номер телефона недействителен, или будет иметь значение null, если номер телефона действителен.",
        "otherwise.": "иначе.",
        "[optional] - An object with the following optional properties:": "[optional] - Объект со следующими необязательными свойствами:",
        "If no email address is found in the input text, the function will return the string 'No email found'.": "Если во входном тексте адрес электронной почты не найден, функция вернет строку 'No email found'.",
        "function extracts email addresses from a given text. If the optional": "извлекает адреса электронной почты из заданного текста. Если необязательный параметр",
        "Brazil": "Бразилия",
        "The input value to check if it represents a valid decimal number.": "Входное значение, чтобы проверить, представляет ли оно допустимое десятичное число.",
        "Usage Examples": "Примеры использования",
        "Index 2: \"Unknown error\"": "Индекс 2: \"Неизвестная ошибка\"",
        "The function expects the input value to be passed as a string.": "Функция ожидает, что входное значение будет передано в виде строки.",
        "the function will return an array with all the email addresses found. If set to": "Функция вернет массив со всеми найденными адресами электронной почты. Если установлено значение",
        "The input string to check for ASCII characters.": "Входная строка для проверки символов ASCII.",
        "function checks if the input value represents a valid postal code for supported countries. It returns": "Функция проверяет, является ли входное значение допустимым почтовым индексом для поддерживаемых стран. Он возвращает",
        "The input string representing the credit card number to validate.": "Строка ввода, представляющая номер кредитной карты для проверки.",
        "method and checks if the resulting string is empty (i.e., has a length of 0). If the input string consists of only whitespace characters, the function also returns.": "и проверяет, является ли результирующая строка пустой (т.е. имеет длину 0). Если входная строка состоит только из пробельных символов, функция также возвращает значение.",
        "function is used to check whether an image file is valid or not. It accepts a Buffer as an argument.": "используется для проверки того, является ли файл изображения валидным или нет. Он принимает Buffer в качестве аргумента.",
        "The function expects the input value to be passed as a string or a number representing a decimal number. If the input is not a string or number, or an empty string, the function throws an error. It uses a regular expression to validate decimal numbers, supports both dot (.) and comma (,) as decimal separators, and checks for multiple decimal separators. Additionally, it performs checks for the negative sign to ensure it is only at the beginning of the value.": "Функция ожидает, что входное значение будет передано в виде строки или числа, представляющего десятичное число. Если входные данные не являются строкой, числом или пустой строкой, функция выдает ошибку. Он использует регулярное выражение для проверки десятичных чисел, поддерживает точки (.) и запятые (,) в качестве десятичных разделителей и проверяет наличие нескольких десятичных разделителей. Кроме того, он проверяет отрицательный знак, чтобы убедиться, что он находится только в начале значения.",
        "Italy": "Италия",
        "function checks if the input string contains only ASCII characters. It returns": "проверяет, содержит ли входная строка только символы ASCII. Он возвращает",
        "[optional] - The country code to check if the email ends with it. If not provided, no country code check will be performed.": "[необязательно] - Код страны, чтобы проверить, заканчивается ли письмо на него. Если это не указано, проверка кода страны выполняться не будет.",
        "India: 1 uppercase letter followed by 7 digits (e.g., 'A1234567')": "Индия: 1 заглавная буква, за которой следуют 7 цифр (например, 'A1234567')",
        "function checks if the input value is a valid number. It returns": "проверяет, является ли входное значение допустимым числом. Он возвращает",
        "[optional] - An array of error messages to customize the response. If not provided, the function will use default error messages.": "[необязательно] - Массив сообщений об ошибках для настройки ответа. Если это не указано, функция будет использовать сообщения об ошибках по умолчанию.",
        "'veryStrong' - Password longer than 16 characters": "'veryStrong' - Пароль длиннее 16 символов",
        "function is used to identify the credit card flag based on the first digits of the card number. It returns the name of the card flag as a string.": "используется для идентификации флага кредитной карты по первым цифрам номера карты. Он возвращает имя флага карты в виде строки.",
        "United Kingdom: 2 uppercase letters followed by 6 digits (e.g., 'AB123456')": "Великобритания: 2 прописные буквы, за которыми следуют 6 цифр (например, 'AB123456')",
        "How to use the isValidAudio function": "Как использовать функцию isValidAudio",
        "First, import the": "Во-первых, импортируйте файл",
        "if the image is valid and": "Если изображение допустимо и",
        "[optional] The minimum length allowed for the name. Default value: 1.": "[дополнительный] Минимально допустимая длина имени. Значение по умолчанию: 1.",
        "the function will remove duplicate emails from the output list. If set to": "Функция удалит дубликаты писем из списка вывода. Если установлено значение",
        "as it considers such strings to be empty.": "так как он считает такие строки пустыми.",
        "Netherlands": "Нидерланды",
        "or not provided, it will keep the duplicate emails in the output list.": "или не указано, он сохранит дубликаты писем в списке вывода.",
        "[optional] - The maximum length of the username. Default is Infinity.": "[optional] - Максимальная длина имени пользователя. Значение по умолчанию - Infinity.",
        "Germany: 2 uppercase letters followed by 8 digits (e.g., 'AB12345678')": "Германия: 2 прописные буквы, за которыми следуют 8 цифр (например, 'AB12345678')",
        "'regular' - Password greater than or equal to 6 and less than 8 characters, containing at least one number and one letter": "'regular' - Пароль больше или равен 6 и менее 8 символов, содержащий хотя бы одну цифру и одну букву",
        "'veryStrong' - Password with 8 or more characters, containing at least one uppercase letter, one number, one special character and one lowercase letter": "'veryStrong' - Пароль из 8 или более символов, содержащий как минимум одну заглавную букву, одну цифру, один специальный символ и одну строчную букву",
        "Default value: false.": "Значение по умолчанию: false.",
        "The input textarea string to be validated.": "Входная строка textarea, подлежащая проверке.",
        "function checks if the input string is a valid MD5 hash. It returns": "проверяет, является ли входная строка допустимым хешем MD5. Он возвращает",
        "if it is not.": "если это не так.",
        "Notes": "Примечания",
        "Return Value": "Возвращаемое значение",
        "false": "ложный",
        "The examples provided demonstrate how to use the function with different parameters and show the expected return values.": "В приведенных примерах показано, как использовать функцию с различными параметрами, и показаны ожидаемые возвращаемые значения.",
        "Canada: 1 uppercase letter followed by 7 digits (e.g., 'A1234567')": "Канада: 1 заглавная буква, за которой следуют 7 цифр (например, 'A1234567')",
        "function is used to validate US phone numbers. It supports various formats, including \"XXX-XXX-XXXX\", \"(XXX) XXX-XXXX\", and \"1 (XXX) XXX-XXXX\". It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"isValid\" property will be true if the phone number is valid, and \"errorMsg\" will contain the error message if the phone number is invalid, or it will be null if the phone number is valid.": "используется для проверки телефонных номеров в США. Он поддерживает различные форматы, включая \"XXX-XXX-XXXX\", \"(XXX) XXX-XXXX\" и \"1 (XXX) XXX-XXXX\". Он возвращает объект с двумя свойствами: \"isValid\" (логическое значение) и \"errorMsg\" (строка). Свойство \"isValid\" будет иметь значение true, если номер телефона действителен, а \"errorMsg\" будет содержать сообщение об ошибке, если номер телефона недействителен, или будет иметь значение null, если номер телефона действителен.",
        "The function expects the credit card number to be passed as a string. It uses the first digits of the card number to identify the card flag and returns the corresponding flag name as a string. If the card flag cannot be identified or the input is not a string, it returns 'Unknown'.": "Функция ожидает, что номер кредитной карты будет передан в виде строки. Он использует первые цифры номера карты для идентификации флага карты и возвращает соответствующее имя флага в виде строки. Если флаг карты не может быть идентифицирован или входные данные не являются строкой, возвращается 'Unknown'.",
        "function with the image path as an argument. The function will return": "с путем к изображению в качестве аргумента. Функция вернет",
        "Whether the password requires at least one letter. Default value: false.": "Требуется ли в пароле хотя бы одна буква. Значение по умолчанию: false.",
        "function checks if the input string or number represents a valid decimal number. It returns": "проверяет, представляет ли входная строка или число допустимое десятичное число. Он возвращает",
        "'regular' - Password between 9 and 12 characters": "'regular' - Пароль от 9 до 12 символов",
        "if the value matches the postal code format for any of the supported countries, and": "если значение соответствует формату почтового индекса для любой из поддерживаемых стран, и",
        "The function can be imported using ES6 syntax from the \"validateBRPhoneNumber\" package:": "Функция может быть импортирована с использованием синтаксиса ES6 из пакета \"validateBRPhoneNumber\":",
        "How to use the isValidTxt function": "Как использовать функцию isValidTxt",
        "set to": "Установите значение",
        "if the MAC address is valid and follows the supported formats, and": "если MAC-адрес действителен и соответствует поддерживаемым форматам, и",
        "'weak' - Password that repeats the same character more than 3 times in a row and is less than 10 characters long": "'weak' - Пароль, который повторяет один и тот же символ более 3 раз подряд и имеет длину менее 10 символов",
        "This function is a text area validation utility that checks the validity of a given textarea string based on certain criteria.": "Эта функция представляет собой утилиту проверки текстовой области, которая проверяет допустимость заданной строки textarea на основе определенных критериев.",
        "The minimum length of the surname. Default is 1.": "Минимальная длина фамилии. По умолчанию 1.",
        "if the input value matches any of the supported formats, and": "если входное значение соответствует любому из поддерживаемых форматов, и",
        "Passing options to the": "Передача параметров в",
        "The name to be validated.": "Имя, подлежащее проверке.",
        "function checks if the input string is a valid Brazilian ZIP Code (CEP). It returns": "проверяет, является ли входная строка действительным почтовым индексом Бразилии (CEP). Он возвращает",
        "The function takes one parameter, which must be a string representing the password to be evaluated.": "Функция принимает один параметр, который должен быть строкой, представляющей вычисляемый пароль.",
        "function is used to validate passwords. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"isValid\" property will be true if the password meets the specified criteria, and \"errorMsg\" will contain the error message if the password is invalid, or it will be null if the password is valid.": "используется для проверки паролей. Он возвращает объект с двумя свойствами: \"isValid\" (логическое значение) и \"errorMsg\" (строка). Свойство \"isValid\" будет иметь значение true, если пароль соответствует указанным критериям, а \"errorMsg\" будет содержать сообщение об ошибке, если пароль недействителен, или будет иметь значение null, если пароль действителен.",
        "France: 2 uppercase letters followed by 7 digits (e.g., 'AB1234567')": "Франция: 2 прописные буквы, за которыми следуют 7 цифр (например, 'AB1234567')",
        "Example": "Пример",
        "[optional]": "[дополнительный]",
        "the function will use a default list of valid domains. If set to": "Функция будет использовать список допустимых доменов по умолчанию. Если установлено значение",
        "Default list of valid domains": "Список допустимых доменов по умолчанию",
        "The input string representing the MD5 hash to validate. The MD5 hash should be a 32-character string consisting of hexadecimal digits (0-9, A-F, a-f).": "Входная строка, представляющая хэш MD5 для проверки. Хэш MD5 должен представлять собой строку из 32 символов, состоящую из шестнадцатеричных цифр (0-9, A-F, a-f).",
        "if the email address is valid and follows the supported format, and": "если адрес электронной почты действителен и соответствует поддерживаемому формату, и",
        "properties, indicating whether the CPF is valid and, in case of an error, the corresponding error message.": ", указывающие, является ли CPF допустимым, и, в случае ошибки, соответствующее сообщение об ошибке.",
        "function checks if the input string is empty or contains only whitespace characters. It returns": "проверяет, является ли входная строка пустой или содержит только пробельные символы. Он возвращает",
        "The maximum length allowed for the password. Default value: Infinity.": "Максимально допустимая длина пароля. Значение по умолчанию: Бесконечность.",
        "Index 1: \"Can not be empty\"": "Индекс 1: «Не может быть пустым»",
        "Canada": "Канада",
        "(optional boolean) - If set to": "(необязательное логическое значение) - Если установлено значение",
        "The input string representing the date": "Входная строка, представляющая дату",
        "[optional] The maximum length allowed for the name. Default value: 20.": "[дополнительный] Максимально допустимая длина имени. Значение по умолчанию: 20.",
        "The credit card number for which to identify the flag based on the first digits.": "Номер кредитной карты, для которой флаг идентифицируется по первым цифрам.",
        "The phone number to be validated.": "Номер телефона, который необходимо подтвердить.",
        "The maximum allowed length for the textarea.": "Максимально допустимая длина текстовой области.",
        "if the value is a valid decimal number and follows one of the supported formats, and": "если значение является допустимым десятичным числом и соответствует одному из поддерживаемых форматов, и",
        "South Africa": "Южная Африка",
        "The minimum length allowed for the password. Default value: 1.": "Минимально допустимая длина пароля. Значение по умолчанию: 1.",
        "Examples": "Примеры",
        "Germany": "Германия",
        "How to use the isValidImage function": "Как использовать функцию isValidImage",
        "Function Signature": "Сигнатура функции",
        "An array of error messages to customize the response. If not provided, the function will use default error messages.": "Массив сообщений об ошибках для настройки ответа. Если это не указано, функция будет использовать сообщения об ошибках по умолчанию.",
        "The value to be checked if it represents a valid number.": "Значение, которое необходимо проверить, если оно представляет собой допустимое число.",
        "The function takes one parameter, which must be a string representing the time to be checked.": "Функция принимает один параметр, который должен быть строкой, представляющей проверяемое время.",
        "function checks if the input string represents a valid credit card number using the Luhn algorithm. It returns": "проверяет, представляет ли входная строка действительный номер кредитной карты с помощью алгоритма Луна. Он возвращает",
        "if the string is a valid Base64, and": "если строка является допустимым Base64, и",
        "The username to be validated.": "Имя пользователя, которое необходимо проверить.",
        "'weak' - Password between 5 and 8 characters, consisting only of numbers": "'weak' - Пароль от 5 до 8 символов, состоящий только из цифр",
        "China: 1 uppercase letter followed by 8 digits (e.g., 'A12345678')": "Китай: 1 заглавная буква, за которой следуют 8 цифр (например, 'A12345678')",
        "Whether the password requires at least one uppercase letter. Default value: false.": "Требуется ли в пароле хотя бы одна заглавная буква. Значение по умолчанию: false.",
        "Function Documentation": "Документация по функциям",
        "The function expects the input value to be passed as a string. If the input is not a string, the function throws a TypeError. It removes any leading and trailing whitespace from the input string using the.": "Функция ожидает, что входное значение будет передано в виде строки. Если входные данные не являются строкой, функция выдает ошибку TypeError. Он удаляет все начальные и конечные пробелы из входной строки с помощью .",
        "The function uses regular expressions to check the input postal code against supported 'countries' postal code formats. It returns": "Функция использует регулярные выражения для проверки входного почтового индекса на соответствие поддерживаемым форматам почтовых индексов стран. Он возвращает",
        "'strong' - Password with 8 or more characters, containing at least one uppercase letter, one number and one lowercase letter": "'strong' - Пароль, состоящий из 8 или более символов, содержащий как минимум одну заглавную букву, одну цифру и одну строчную букву",
        "function is used to validate a Brazilian CNPJ (National Registry of Legal Entities) number. It returns an object containing the": "используется для проверки бразильского номера CNPJ (Национальный реестр юридических лиц). Он возвращает объект, содержащий",
        "The value to be checked if it represents a valid port number.": "Значение, которое необходимо проверить, если оно представляет допустимый номер порта.",
        "United Kingdom": "Великобритания",
        "isEmail just does simple validations like checking if the string has the formatting of an email like several validators out there,": "isEmail просто выполняет простые проверки, такие как проверка того, имеет ли строка форматирование электронной почты, как некоторые валидаторы,",
        "Switzerland": "Швейцария",
        "if the value is a valid number, and": "если значение является допустимым числом, и",
        "Spain": "Испания",
        "The input string representing the email address to validate.": "Входная строка, представляющая адрес электронной почты для проверки.",
        "The function checks the length of the password and applies certain criteria to classify the password strength. The returned strength type is based on the following criteria:": "Функция проверяет длину пароля и применяет определенные критерии для классификации надежности пароля. Возвращаемый тип прочности основан на следующих критериях:",
        "What is the difference between": "В чем разница между",
        "The input string representing the MAC address to validate. The MAC address can be in the following formats: \"001A2B3C4D5E\", \"00:1A:2B:3C:4D:5E\", or \"00-1A-2B-3C-4D-5E\".": "Входная строка, представляющая MAC-адрес для проверки. MAC-адрес может быть в следующих форматах: «001A2B3C4D5E», «00:1A:2B:3C:4D:5E» или «00-1A-2B-3C-4D-5E».",
        "function checks if the input value represents a valid time in the format \"hh:mm\" or \"hh:mm AM/PM\" or \"hh:mm:ss\" or \"hh:mm:ss AM/PM\". It returns": "проверяет, представляет ли входное значение допустимое время в формате \"чч:мм\" или \"чч:мм AM/PM\" или \"чч:мм:сс\" или \"чч:мм:сс AM/PM\". Он возвращает",
        "Index 0: \"This textarea is too big\"": "Индекс 0: \"Эта текстовая область слишком большая\"",
        "The function uses a regular expression to check if the input time string matches any of the supported time formats. It returns": "Функция использует регулярное выражение для проверки того, соответствует ли входная строка времени какому-либо из поддерживаемых форматов времени. Он возвращает",
        "[optional] - This parameter determines whether to check for specific valid email domains or not. If set to": "[optional] - Этот параметр определяет, следует ли проверять наличие определенных действительных доменов электронной почты или нет. Если установлено значение",
        "it will clean after default domains. If set to an array of strings, it will clean after the specified custom domains.": "Он будет очищаться после доменов по умолчанию. Если задано значение массива строк, он будет очищаться после указанных пользовательских доменов.",
        "The time to be checked for validity. It must be in one of the supported formats: \"hh:mm\", \"hh:mm AM/PM\", \"hh:mm:ss\", or \"hh:mm:ss AM/PM\".": "Время, которое необходимо проверить на действительность. Он должен быть в одном из поддерживаемых форматов: \"чч:мм\", \"чч:мм AM/PM\", \"чч:мм:сс\" или \"чч:мм:сс AM/PM\".",
        "Supported Countries": "Поддерживаемые страны",
        "no domain check will be performed. Alternatively, you can pass an array of custom valid domains to perform the check against a specific list.": "Проверка домена производиться не будет. Кроме того, вы можете передать массив пользовательских допустимых доменов для выполнения проверки по определенному списку.",
        "it returns an array with all the email addresses found. Otherwise, it returns only the first email address found as a string.": "Он возвращает массив со всеми найденными адресами электронной почты. В противном случае он возвращает только первый найденный адрес электронной почты в виде строки.",
        "The function takes one parameter that can be either a string or a number: ": "Функция принимает один параметр, который может быть как строкой, так и числом: ",
        "The default error messages are as follows:": "Сообщения об ошибках по умолчанию выглядят следующим образом:",
        "How to use the isValidPdf function": "Как использовать функцию isValidPdf",
        "function is used to validate usernames. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"isValid\" property will be true if the username meets the specified criteria, and \"errorMsg\" will contain the error message if the username is invalid, or it will be null if the username is valid.": "используется для проверки имен пользователей. Он возвращает объект с двумя свойствами: \"isValid\" (логическое значение) и \"errorMsg\" (строка). Свойство \"isValid\" будет иметь значение true, если имя пользователя соответствует указанным критериям, а \"errorMsg\" будет содержать сообщение об ошибке, если имя пользователя недопустимо, или будет иметь значение null, если имя пользователя допустимо.",
        "if the string is composed of ASCII characters, and": "если строка состоит из символов ASCII, и",
        "In this example it only allocates 4 bytes for performance reasons, but you can pass the entire file.": "В этом примере он выделяет только 4 байта из соображений производительности, но вы можете передать весь файл.",
        "The Brazilian phone number to be validated.": "Бразильский номер телефона, который необходимо подтвердить.",
        "'weak' - Password with less than 6 characters, consisting of numbers and letters": "'weak' - Пароль длиной менее 6 символов, состоящий из цифр и букв",
        "Japan": "Япония",
        "function checks if the input string is a valid Base64 string. It returns": "проверяет, является ли входная строка допустимой строкой Base64. Он возвращает",
        "A flag to determine if the textarea is required.": "Флаг, определяющий, является ли textarea обязательным.",
        "'strong' - Password between 13 and 16 characters": "'strong' - Пароль от 13 до 16 символов",
        "(optional boolean | string[]) - Either a boolean value indicating whether to clean after default domains or an array of custom domains to clean after. Default is": "(опционально boolean | string[]) - Либо логическое значение, указывающее, следует ли очищать после доменов по умолчанию, либо массив пользовательских доменов для очистки. Значение по умолчанию",
        "true": "истинный",
        "The function takes one parameter, which must be a string representing the postal code to be checked.": "Функция принимает один параметр, который должен быть строкой, представляющей проверяемый почтовый индекс.",
        "function checks if the input value represents a valid port number. It returns": "проверяет, представляет ли входное значение допустимый номер порта. Он возвращает",
        "function is used to validate a Brazilian CPF (Individual Taxpayer Identification) number. It returns an object containing the": "используется для проверки бразильского номера CPF (Individual Taxpayer Identification). Он возвращает объект, содержащий",
        "The function expects the input MD5 hash to be passed as a string. If the input is not a string, the function throws a TypeError. It removes leading and trailing whitespace from the input string and checks if the resulting string has a valid length (exactly 32 characters). Then, it uses a regular expression to verify if the cleaned MD5 hash consists only of hexadecimal digits. Additionally, the function checks if the MD5 hash is not a known weak hash, such as \"d41d8cd98f00b204e9800998ecf8427e\". If any of the checks fail, the function returns false; otherwise, it returns true, indicating that the input string is a valid MD5 hash.": "Функция ожидает, что входной хэш MD5 будет передан в виде строки. Если входные данные не являются строкой, функция выдает ошибку TypeError. Он удаляет начальные и конечные пробелы из входной строки и проверяет, имеет ли результирующая строка допустимую длину (ровно 32 символа). Затем он использует регулярное выражение, чтобы проверить, состоит ли очищенный хэш MD5 только из шестнадцатеричных цифр. Кроме того, функция проверяет, не является ли хэш MD5 известным слабым хешем, например \"d41d8cd98f00b204e9800998ecf8427e\". Если какая-либо из проверок не удалась, функция возвращает false; в противном случае он возвращает true, указывая, что входная строка является допустимым хэшем MD5.",
        "if the value matches any of these formats, and": "если значение соответствует какому-либо из этих форматов, и",
        "The function takes one parameter:": "Функция принимает один параметр:",
        "The function expects the input MAC address to be passed as a string. If the input is not a string, the function throws a TypeError. It removes all non-alphanumeric characters from the input string using a regular expression and checks if the resulting string has a valid length (exactly 12 characters). Then, it uses another regular expression to verify if the cleaned MAC address matches the supported pattern. The supported pattern is a 12-character string consisting of hexadecimal digits (0-9, A-F, a-f), with optional separators (\":\", \"-\") between pairs of hexadecimal digits.": "Функция ожидает, что входной MAC-адрес будет передан в виде строки. Если входные данные не являются строкой, функция выдает ошибку TypeError. Он удаляет все небуквенно-цифровые символы из входной строки с помощью регулярного выражения и проверяет, имеет ли результирующая строка допустимую длину (ровно 12 символов). Затем он использует другое регулярное выражение, чтобы проверить, соответствует ли очищенный MAC-адрес поддерживаемому шаблону. Поддерживаемый шаблон представляет собой 12-символьную строку, состоящую из шестнадцатеричных цифр (0-9, A-F, a-f), с необязательными разделителями (\":\", \"-\") между парами шестнадцатеричных цифр.",
        "function to convert the value to a floating-point number. If the conversion results in a valid number and the value is finite (not infinity or NaN), the function returns true, indicating that the input value is a valid number. Otherwise, it returns false.": "для преобразования значения в число с плавающей запятой. Если в результате преобразования получается допустимое число, а значение является конечным (а не бесконечным или NaN), функция возвращает true, указывая, что входное значение является допустимым числом. В противном случае возвращается false.",
        "United States of America": "Соединенные Штаты Америки",
        "Function is used to validate names. It returns an object with two properties: 'isValid' (boolean) and 'errorMsg' (string). The 'errorMsg' property will contain the error message if the name is invalid, or it will be null if the name is valid.": "Функция используется для проверки имен. Он возвращает объект с двумя свойствами: 'isValid' (логическое значение) и 'errorMsg' (строка). Свойство 'errorMsg' будет содержать сообщение об ошибке, если имя недопустимо, или null, если имя допустимо.",
        "The function expects the input email to be passed as a string. If the input is not a string, it will throw an error. If the email passed is an invalid email, it will return.": "Функция ожидает, что входной адрес электронной почты будет передан в виде строки. Если входные данные не являются строкой, он выдаст ошибку. Если переданное письмо является недействительным, оно вернется.",
        "The function checks if the input value is not null, undefined, or a boolean type. If any of these conditions are met, the function returns false since these values cannot represent valid numbers. For all other types, the function uses the.": "Функция проверяет, не является ли входное значение нулевым, неопределенным или логическим типом. Если выполняется какое-либо из этих условий, функция возвращает false, так как эти значения не могут представлять допустимые числа. Для всех остальных типов функция использует .",
        "function is used to check whether an txt file is valid or not. It accepts a Buffer as an argument.": "используется для проверки того, является ли txt-файл валидным или нет. Он принимает Buffer в качестве аргумента.",
        "The password to be evaluated for strength.": "Пароль, который необходимо проверить на надежность.",
        "Indicates if the textarea is valid based on the given criteria.": "Указывает, является ли текстовое поле допустимым на основе заданных критериев.",
        "if the CEP is valid, and": "если CEP действителен, и",
        "function is used to check whether an audio file is valid or not. It accepts a Buffer as an argument.": "используется для проверки того, является ли аудиофайл валидным или нет. Он принимает Buffer в качестве аргумента.",
        "and": "и",
        "does not, it does complex validations and better than that, you can customize the validations passing the information in the parameters.": "Нет, он выполняет сложные проверки, и, что более важно, вы можете настроить проверки, передавая информацию в параметрах.",
        "If the function is called with an invalid value for the": "Если функция вызывается с недопустимым значением для",
        "function is used to check whether an video file is valid or not. It accepts a Buffer as an argument.": "используется для проверки валидности видеофайла или нет. Он принимает Buffer в качестве аргумента.",
        "France": "Франция",
        "parameter is set to": "имеет значение",
        "There are two ways to import the function:": "Импортировать функцию можно двумя способами:",
        "An array of custom error messages for different validation conditions. The array should contain three elements corresponding to different error scenarios. If not provided, default error messages will be used. Default Error Messages:": "Массив пользовательских сообщений об ошибках для различных условий проверки. Массив должен содержать три элемента, соответствующих различным сценариям ошибок. Если не указано, будут использоваться сообщения об ошибках по умолчанию. Сообщения об ошибках по умолчанию:",
        "Italy: 1 uppercase letter followed by 7 digits (e.g., 'A1234567')": "Италия: 1 заглавная буква, за которой следуют 7 цифр (например, 'A1234567')",
        "The function can be imported using ES6 syntax from the \"password-strength-tester\" package:": "Функция может быть импортирована с использованием синтаксиса ES6 из пакета \"password-strength-tester\":",
        "Types that are validated": "Проверяемые типы",
        "A list of custom error messages. If not provided, it uses a default list of error messages.": "Список пользовательских сообщений об ошибках. Если он не указан, используется список сообщений об ошибках по умолчанию.",
        "The CNPJ number to be validate.": "Номер CNPJ для проверки.",
        "Example Usage with Nestjs and Multer": "Пример использования с Nestjs и Multer",
        "properties, indicating whether the CNPJ is valid and, in case of an error, the corresponding error message.": ", указывающие, является ли CNPJ допустимым, и, в случае ошибки, соответствующее сообщение об ошибке.",
        "The function supports postal codes for the following countries:": "Функция поддерживает почтовые индексы для следующих стран:",
        "function is used to check whether an pdf file is valid or not. It accepts a Buffer as an argument.": "используется для проверки того, является ли PDF-файл действительным или нет. Он принимает Buffer в качестве аргумента."
    },
    "Header": {
        "header_docs": "Документация",
        "header_already_here": "Вы уже здесь (:",
        "header_title": "Многоформный валидатор",
        "header_buy_coffee": "купите мне кофе ?",
        "header_github": "Мой github",
        "header_home": "Дом",
        "header_go_home": "Идите домой",
        "header_info": "Информация"
    },
    "Footer": {
        "Services": "Услуги",
        "Terms": "Условия",
        "Privacy Policy": "Политика конфиденциальности",
        "CopyRightMsg": "Валидатор © Multiform 2023 - Габриэль Логан",
        "Home": "Дом",
        "About": "Около"
    },
    "SidebarWrapperJs": {
        "Documentation": "Документация",
        "Home": "Дом"
    },
    "DocumentationPython": {
        "Back to home": "Вернуться на главную страницу",
        "Installation": "Установка",
        "Install the package using pip: ": "Установите пакет с помощью pip: ",
        "Functions signature": "Сигнатура функций",
        "All params with default values are optional.": "Все параметры со значениями по умолчанию являются необязательными.",
        "Methods": "Методика"
    },
    "NotFound": {
        "Msg": "Эту страницу найти не удалось.",
        "Status": "404"
    },
    "News": {
        "News Ad Page": "Страница новостной рекламы",
        "News Ad Page for the Multiform Validator library.": "Новостная рекламная страница для библиотеки Multiform Validator."
    }
}