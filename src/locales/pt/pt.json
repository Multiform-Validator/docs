{
	"Header": {
		"header_title": "Multiform Validator",
		"header_home": "Início",
		"header_already_here": "Você já está aqui (:",
		"header_go_home": "Ir para o início",
		"header_buy_coffee": "me compre um café ?",
		"header_github": "Meu github",
		"header_docs": "Documentação",
		"header_info": "Informações"
},
	"Footer": {
		"Home": "Início",
		"Services": "Serviços",
		"About": "Sobre",
		"Terms": "Termos",
		"Privacy Policy": "Política de Privacidade",
		"CopyRightMsg": "Multiform Validator © 2023 - Gabriel Logan"
	},
	"HomePage": {
    "Welcome": "Bem-vindo ao site multiform-validator",
    "Intro": "Usando minha biblioteca, você pode transformar muitas linhas de código em pouquíssimas e, como resultado, ter um código mais limpo, robusto e seguro. Você terá várias ferramentas e funções que farão várias validações de formulários.",
    "Hello": "Olá",
    "FollowThe": "Siga o",
    "Documentation": "Documentação",
    "ForMoreInfo": "Para mais informações",
    "SeeTheGithubSourceCode": "Veja o código-fonte no GitHub",
    "SeeTheNpmPage": "Veja a página no NPM",
    "SeeThePypiPage": "Veja a página no PyPI",
    "HelpMsg": "Você também pode ajudar o programador comprando um café no link abaixo, desde já agradeço (:"
	},
	"HomeLayout": {
    "Title": "Multiform Validator",
    "Opengraph title": "Multiform Validator - Sua lib de Validação Multilíngue",
    "Opengraph description": "Biblioteca multilíngue feita para validação de vários campos de formulário, como: email, imagem, CPF, CNPJ, cartão de crédito, números mágicos e muito mais.",
    "Description": "Biblioteca multilíngue feita para validação de vários campos de formulário, como: email, telefone, senha, CPF, CNPJ, cartão de crédito, números mágicos para validação de mimetype de imagem e muito mais.",
    "Classification": "Biblioteca de Validação",
    "Support me on Buy me a coffee": "Apoie-me no Buy me a coffee!",
		"Technology": "tecnologia"
	},
	"About": {
		"About_Page": "Página Sobre",
		"About_Page_Description": "Conheça Gabriel Logan, o criador da biblioteca multiform-validator, e saiba mais sobre sua paixão pelo desenvolvimento web, soluções inovadoras e dedicação à experiência do usuário.",
    "about_title": "Olá, eu sou Gabriel Logan",
    "about_intro": "Me considero um programador versátil com paixão tanto pelo desenvolvimento front-end quanto pelo back-end. Criar experiências web excepcionais é o que me motiva, e tenho muito orgulho do trabalho que produzo.",
    "about_frontend": "Como desenvolvedor front-end, tenho um olhar atento para a experiência do usuário e o design de interface. Adoro transformar conceitos criativos em aplicativos web visualmente cativantes e interativos usando HTML, CSS e JavaScript. Da navegação perfeita às animações suaves, presto atenção em cada detalhe para garantir que meus projetos front-end exibam elegância e funcionalidade.",
    "about_backend": "Mas minhas habilidades não param por aí. Sou igualmente proficiente no desenvolvimento back-end, com expertise em linguagens como Python, Java e JavaScript (Node.js). Construir aplicativos web robustos e seguros é minha especialidade, pois entendo as complexidades da lógica do servidor. Minhas soluções são voltadas para eficiência, confiabilidade e escalabilidade, garantindo que mesmo durante os horários de pico, meus aplicativos ofereçam uma experiência de usuário suave.",
    "about_achievement": "Uma das minhas maiores conquistas é a criação de uma página web inovadora que simplifica e acelera a validação de formulários. Essa solução engenhosa foi projetada para ajudar pessoas e empresas a otimizar seu processo de validação de formulários. Ao aproveitar meu amplo conhecimento em desenvolvimento web e incorporar tecnologias de ponta, minha página oferece uma maneira ultrarrápida e SUPER eficiente de validar formulários. Sua interface amigável e funcionalidades intuitivas a tornam uma ferramenta indispensável para profissionais que buscam aumentar sua produtividade e precisão na coleta de dados.",
    "about_creative": "Além das minhas habilidades técnicas, prospero como solucionador criativo de problemas. Adoro enfrentar desafios com uma mentalidade inovadora e estou sempre em busca de maneiras de aprimorar a experiência do usuário. Minha capacidade de pensar fora da caixa e oferecer soluções inventivas me destaca como um verdadeiro líder no campo do desenvolvimento web.",
    "about_inspiration": "Quando não estou imerso em código, você pode me encontrar buscando inspiração no mundo ao meu redor. Seja explorando a natureza, mergulhando em arte e cultura ou participando de discussões instigantes, tiro proveito de uma ampla gama de experiências que moldam minha abordagem à programação e minhas interações com colegas e clientes.",
    "about_conclusion": "Em conclusão, sou Gabriel Logan, um programador apaixonado que mescla habilidades front-end e back-end para criar experiências web excepcionais. Minha mentalidade inovadora, atenção aos detalhes e dedicação à eficiência me levaram a desenvolver uma página inovadora que acredito que terá um impacto significativo no mundo da validação de formulários. À medida que o cenário digital continua a evoluir, estou na vanguarda, pronto para abraçar novos desafios e fazer a diferença por meio do meu trabalho excepcional em desenvolvimento web."
	},
	"Info": {
		"Info_Page": "Página de Informações",
    "info_title": "multiform-validator - Biblioteca Multi para Validação de Campos de Formulário",
    "info_intro": "Apresentando multiform-validator, uma poderosa Biblioteca Multi desenvolvida por Gabriel Logan. Esta biblioteca versátil é projetada para validar inúmeros campos de formulário, incluindo endereços de e-mail, números de telefone, senhas, CPF (Cadastro de Pessoa Física), números de cartão de crédito e muito mais.",
    "info_ensure": "Com o multiform-validator, você pode garantir que os dados enviados por meio de seus formulários sejam precisos e seguros. Esteja você criando um formulário de registro, processo de checkout ou qualquer sistema de entrada de dados, esta biblioteca tem tudo o que você precisa.",
    "info_prebuilt_rules": "A biblioteca multiform-validator vem com um conjunto extenso de regras de validação pré-definidas e opções personalizáveis. Você pode integrá-la facilmente em suas aplicações web e desfrutar dos benefícios da validação no lado do cliente, reduzindo o número de envios de formulários inválidos e aprimorando a experiência geral do usuário.",
    "info_backend": "Você também pode usar o multiform-validator para fazer validações em seu backend, ele funciona para qualquer tipo de validação de formulário ou funções que usem JavaScript, Python, então sinta-se à vontade para usá-lo",
    "info_flexibility": "O que diferencia o multiform-validator é sua flexibilidade e facilidade de uso. Você pode aplicar regras de validação a diferentes campos de formulário facilmente adicionando algumas linhas de código JavaScript. Além disso, a biblioteca fornece mensagens de erro informativas, orientando os usuários sobre como corrigir suas entradas, reduzindo assim a frustração e as taxas de abandono de formulários.",
    "info_performance": "Gabriel Logan se orgulha de desenvolver a biblioteca multiform-validator com foco em desempenho, eficiência e confiabilidade. A biblioteca é otimizada para diversos navegadores, garantindo compatibilidade perfeita para seu público diversificado.",
    "info_conclusion": "Portanto, se você está procurando uma solução abrangente para validação de campos de formulário, não procure mais do que o multiform-validator. Aproveite o poder desta biblioteca e tenha a certeza de que seu processo de coleta de dados será simplificado, preciso e seguro."
	},
	"PrivacyPolices": {
		"Privacy Policy": "Política de Privacidade",
    "privacy_title": "Políticas de Privacidade - Seus Dados Estão Seguros Conosco",
    "privacy_intro": "Levamos sua privacidade a sério. Queremos assegurar que não coletamos nenhum dado em nosso site, e não utilizamos nenhum dado através da biblioteca \"multiform-validator\". Suas informações permanecem totalmente confidenciais, e sua privacidade é primordial para nós.",
    "privacy_no_personal_data": "Ao visitar nosso site, fique tranquilo que nenhum dado pessoal, como seu nome, endereço de e-mail ou informações de contato, é coletado ou armazenado. Acreditamos em fornecer uma experiência de navegação segura e anônima para você.",
    "validator_local": "A biblioteca \"multiform-validator\" é projetada para validar campos de formulário em suas aplicações web sem acessar ou transmitir qualquer dado para servidores externos. Toda validação ocorre localmente dentro do seu navegador, garantindo que suas informações sensíveis nunca saiam do seu dispositivo.",
    "validator_secure": "Entendemos a importância da segurança de dados, e é por isso que desenvolvemos meticulosamente a biblioteca \"multiform-validator\" para ser 100% segura. Seus dados permanecem sob seu controle, e não temos acesso a nenhuma informação processada pela biblioteca.",
    "privacy_trust": "Sua confiança é valiosa para nós, e queremos que você se sinta confiante ao usar nossos serviços e a biblioteca \"multiform-validator\". Nosso compromisso com sua privacidade é inabalável, e continuaremos a priorizar a segurança e proteção de seus dados em todos os aspectos de nosso trabalho.",
    "privacy_questions": "Se você tiver alguma dúvida ou preocupação sobre nossas políticas de privacidade ou o uso da biblioteca \"multiform-validator\", não hesite em nos contatar. Estamos aqui para responder a qualquer pergunta e garantir sua tranquilidade.",
    "privacy_thanks": "Obrigado por escolher os Serviços Web Gabriel Logan. Estamos ansiosos para fornecer soluções excepcionais enquanto protegemos sua privacidade em cada etapa do caminho."
	},
	"Terms": {
    "Terms and Conditions": "Termos e Condições",
    "Welcome to Gabriel Logan Web Services. By using this website, you agree to the following terms and conditions:": "Bem-vindo aos Serviços Web Gabriel Logan. Ao usar este site, você concorda com os seguintes termos e condições:",
    "The content provided on this website is for general information purposes only, and we make no warranties or representations regarding its accuracy or completeness.": "O conteúdo fornecido neste site é apenas para fins de informação geral, e não fazemos garantias ou representações sobre sua precisão ou completude.",
    "We use the \"multiform-validator\" library, licensed under the MIT License, to enhance form field validation. However, we are not responsible for its usage or any consequences resulting from third-party use of the library.": "Usamos a biblioteca \"multiform-validator\", licenciada sob a Licença MIT, para aprimorar a validação de campos de formulário. No entanto, não somos responsáveis por seu uso ou quaisquer consequências resultantes do uso de terceiros da biblioteca.",
    "We do not collect any personal data through this website, and your privacy is important to us.": "Não coletamos nenhum dado pessoal por meio deste site, e sua privacidade é importante para nós.",
    "Unauthorized use of this website is strictly prohibited.": "O uso não autorizado deste site é estritamente proibido.",
    "Your use of this website and any disputes arising are subject to the laws of [Your Country/Region].": "Seu uso deste site e quaisquer disputas que surgirem estão sujeitos às leis de [Seu País/Região].",
    "Thank you for visiting our website and using our services. If you have any questions or concerns, please don’t hesitate to contact us.": "Obrigado por visitar nosso site e usar nossos serviços. Se você tiver alguma dúvida ou preocupação, não hesite em nos contatar.",
		"Terms and Conditions of Multiform Validator library": "Termos e Condições da biblioteca Multiform Validator"
	},
	"Manifest": {
    "Name": "Multiform Validator - Sua Biblioteca de Validação Multilíngue",
    "ShortName": "Multiform Validator",
    "Description": "Biblioteca multilíngue feita para validação de vários campos de formulário, como: email, telefone, senha, cpf, cnpj, cartão de crédito, números mágicos para validação de tipo MIME de imagem e muito mais."
	},
	"NotFound": {
			"Msg": "Esta página não pôde ser encontrada.",
			"Status": "404"
	},
	"DocumentationLayout": {
			"Documentation": "Documentação",
			"Documentation for the Multiform Validator library.": "Documentação para a biblioteca Multiform Validator."
	},
	"DocumentationPage": {
			"doc_title": "Página de Documentação",
			"doc_intro": "Bem-vindo à página de documentação. Aqui você pode encontrar todas as linguagens que suportamos e a documentação para cada um deles.",
			"doc_subtitle": "Aqui estão todos as linguagens que suportamos",
			"doc_js_title": "JavaScript",
			"doc_js_text": "Aqui você pode encontrar a documentação para a linguagem JavaScript.",
			"doc_py_title": "Python",
			"doc_py_text": "Aqui você pode encontrar a documentação para a linguagem Python.",
			"doc_java_title": "Java",
			"doc_java_text": "Aqui você pode encontrar a documentação para a linguagem Java.",
			"doc_java_coming": "Em breve ..."
	},
	"SidebarWrapperJs": {
			"Documentation": "Documentação",
			"Home": "Início"
	},
	"DocumentationPython": {
    "Back to home": "Voltar para o início",
    "Installation": "Instalação",
    "Install the package using pip: ": "Instale o pacote usando o pip:",
    "Methods": "Métodos",
		"Functions signature": "Assinatura das funções",
    "All params with default values are optional.": "Todos os parâmetros com valores padrão são opcionais."
	},
	"DocumentationJs": {
    "Back to home page": "Voltar para a página inicial",
    "Official documentation": "Documentação oficial",
    "Welcome Introduction Text": "Bem-vindo à página principal do Multiform Validator! Aqui, você encontrará uma documentação detalhada para várias funções fornecidas pelo Multiform Validator, uma útil biblioteca JavaScript para validação de dados. Cada função é projetada para ajudar na validação de diferentes tipos de dados, tornando seu código mais robusto e seguro. O Multiform Validator consiste em uma série de funções especializadas que permitem validar vários tipos de dados, como emails, senhas, nomes, sobrenomes, números de passaporte, números de telefone e muito mais. Cada função possui parâmetros configuráveis e fornece mensagens de erro personalizáveis para atender às necessidades do seu projeto. Em cada página de documentação, você encontrará uma descrição abrangente da função, incluindo seu propósito, parâmetros aceitos e exemplos de uso. Além disso, você terá acesso a detalhes sobre mensagens de erro padrão e como personalizá-las para se adequarem à sua aplicação. Usando o Multiform Validator, você pode garantir que a entrada do usuário em seus formulários esteja correta e em conformidade com as regras estabelecidas. Essa validação é essencial para evitar problemas como entradas inválidas, dados corrompidos ou vulnerabilidades de segurança. Estamos trabalhando continuamente para aprimorar e expandir o Multiform Validator com novos recursos e melhorias para torná-lo uma ferramenta ainda mais poderosa e flexível para suas necessidades de validação. Esperamos que estas documentações sejam úteis e simplifiquem o uso do Multiform Validator em seus projetos. Sinta-se à vontade para explorar as diversas funções disponíveis e não hesite em nos contatar se tiver alguma dúvida ou sugestão. Obrigado por escolher o Multiform Validator como sua ferramenta de validação de dados, e desejamos sucesso em seus projetos! Equipe Multiform Validator",
    "This npm package provides JavaScript functions to validate various forms fields.": "Este pacote npm fornece funções JavaScript para validar vários campos de formulário.",
    "If you want to help me, you can buy me a coffee (:": "Se você quiser me ajudar, pode me comprar um café (:",
    "INFO: ": "INFO: ",
    "FirstInfoText": "Todas as funções que têm o nome \"validate\" retornam um objeto com duas propriedades, isValid: true | false e errorMsg: 'String com erros'",
    "SecondInfoText": "As restantes podem retornar true | false | string | array, veja a documentação de cada uma",
    "Feel free to find bugs Text Msg": "Sinta-se à vontade para encontrar bugs e reportá-los para mim. Seu feedback é muito apreciado. Abraços de Gabriel Logan!",
    "Example of use with CDN": "Exemplo de uso com CDN",
    "Installation": "Instalação",
    "Data Validator": "Validador de Dados",
    "This package contains various modules for validating different types of data. Below are the available validation modules:": "Este pacote contém vários módulos para validar diferentes tipos de dados. Abaixo estão os módulos de validação disponíveis:",
    "Available Validation Modules": "Módulos de Validação Disponíveis",
    "if you prefer, you can use importing as:": "se preferir, você pode importar como:",
    "Feel free to explore msg": "Sinta-se à vontade para explorar as diversas funções e experimentar diferentes entradas para entender seu comportamento. Se encontrar algum problema ou tiver sugestões, não hesite em me contatar. Seu feedback é valioso e ajuda a melhorar o pacote. Boa codificação!",
    "By - Gabriel Logan": "Por - Gabriel Logan"
	},
	"DocumentationJsFunctions": {
		"Function Documentation": "Documentação da Função",
		"The": "O",
		"function is used to validate a Brazilian CNPJ (National Registry of Legal Entities) number. It returns an object containing the": "função é usada para validar um número de CNPJ brasileiro (Cadastro Nacional de Pessoas Jurídicas). Ela retorna um objeto contendo o",
		"and": "e",
		"properties, indicating whether the CNPJ is valid and, in case of an error, the corresponding error message.": "propriedades, indicando se o CNPJ é válido e, em caso de erro, a mensagem de erro correspondente.",
		"The function can be imported using ES6 syntax from the \"multiform-validator\" package:": "A função pode ser importada usando a sintaxe ES6 do pacote \"multiform-validator\":",
		"Parameters": "Parâmetros",
		"The function takes two parameters:": "A função recebe dois parâmetros:",
		"The CNPJ number to be validate.": "O número de CNPJ a ser validado.",
		"optional array": "array opcional",
		"A list of custom error messages. If not provided, it uses a default list of error messages.": "Uma lista de mensagens de erro personalizadas. Se não fornecido, ele usa uma lista padrão de mensagens de erro.",
		"Examples": "Exemplos",
		"Notes": "Notas",
		"If the function is called with an invalid value for the": "Se a função for chamada com um valor inválido para o",
		"parameter (non-array), or if an error occurs during the validation process, the function will return an object with": "parâmetro (não-array), ou se ocorrer um erro durante o processo de validação, a função retornará um objeto com",
		"set to": "definido como",
		"containing the default error message 'Unknown error'.": "contendo a mensagem de erro padrão 'Erro desconhecido'.",

		"function is used to validate a Brazilian CPF (Individual Taxpayer Identification) number. It returns an object containing the": "função é usada para validar um número de CPF brasileiro (Cadastro de Pessoa Física). Ela retorna um objeto contendo o",
		"properties, indicating whether the CPF is valid and, in case of an error, the corresponding error message.": "propriedades, indicando se o CPF é válido e, em caso de erro, a mensagem de erro correspondente.",
		"There are two ways to import the function:": "Existem duas maneiras de importar a função:",
		"Using": "Usando",
		"The CPF number to be validated.": "O número de CPF a ser validado.",
		"function extracts email addresses from a given text. If the optional": "função extrai endereços de e-mail de um texto fornecido. Se o parâmetro opcional for definido como",
		"parameter is set to": "parâmetro for definido como",
		"it returns an array with all the email addresses found. Otherwise, it returns only the first email address found as a string.": "ele retorna um array com todos os endereços de e-mail encontrados. Caso contrário, ele retorna apenas o primeiro endereço de e-mail encontrado como uma string.",

		"Alternatively, you can import the function using CommonJS syntax with": "Alternativamente, você pode importar a função usando a sintaxe CommonJS com",
		"The input text from which emails will be extracted.": "O texto de entrada do qual os e-mails serão extraídos.",
		"the function will return an array with all the email addresses found. If set to": "a função retornará um array com todos os endereços de e-mail encontrados. Se definido como",
		"or not provided, it will return only the first email address found as a string.": "ou não fornecido, ela retornará apenas o primeiro endereço de e-mail encontrado como uma string.",
		"(optional boolean | string[]) - Either a boolean value indicating whether to clean after default domains or an array of custom domains to clean after. Default is": "(booleano opcional | string[]) - Um valor booleano indicando se deve limpar após domínios padrão ou uma matriz de domínios personalizados para limpar após. O padrão é",
		"which means it won't clean the email addresses after default domains ['.br', '.io', '.pt', '.us', '.org', '.com'];. If set to": "o que significa que não limpará os endereços de e-mail após os domínios padrão ['.br', '.io', '.pt', '.us', '.org', '.com'];. Se definido como",
		"it will clean after default domains. If set to an array of strings, it will clean after the specified custom domains.": "ele limpará após os domínios padrão. Se definido como uma matriz de strings, ele limpará após os domínios personalizados especificados.",
		"(optional boolean) - If set to": "(booleano opcional) - Se definido como",
		"the function will remove duplicate emails from the output list. If set to": "a função removerá e-mails duplicados da lista de saída. Se definido como",
		"or not provided, it will keep the duplicate emails in the output list.": "ou não fornecido, ele manterá os e-mails duplicados na lista de saída.",
		"If no email address is found in the input text, the function will return the string 'No email found'.": "Se nenhum endereço de e-mail for encontrado no texto de entrada, a função retornará a string 'Nenhum e-mail encontrado'.",

		"function is used to identify the credit card flag based on the first digits of the card number. It returns the name of the card flag as a string.": "a função é usada para identificar a bandeira do cartão de crédito com base nos primeiros dígitos do número do cartão. Ela retorna o nome da bandeira do cartão como uma string.",
		"The function takes one parameter:": "A função recebe um parâmetro:",
		"The credit card number for which to identify the flag based on the first digits.": "O número do cartão de crédito para o qual identificar a bandeira com base nos primeiros dígitos.",
		"Example": "Exemplo",
		"The function expects the credit card number to be passed as a string. It uses the first digits of the card number to identify the card flag and returns the corresponding flag name as a string. If the card flag cannot be identified or the input is not a string, it returns 'Unknown'.": "A função espera que o número do cartão de crédito seja passado como uma string. Ela usa os primeiros dígitos do número do cartão para identificar a bandeira do cartão e retorna o nome da bandeira correspondente como uma string. Se a bandeira do cartão não puder ser identificada ou se a entrada não for uma string, ela retorna 'Desconhecido'.",

		"function checks if the input string contains only ASCII characters. It returns": "a função verifica se a string de entrada contém apenas caracteres ASCII. Ela retorna",
		"if the string is composed of ASCII characters, and": "se a string é composta por caracteres ASCII, e",
		"otherwise.": "caso contrário.",
		"The input string to check for ASCII characters.": "A string de entrada para verificar os caracteres ASCII.",
		"The function expects the input value to be passed as a string. It checks each character of the string, and if any character has a character code greater than 127 (non-ASCII), the function returns": "A função espera que o valor de entrada seja passado como uma string. Ela verifica cada caractere da string e, se algum caractere tiver um código de caractere maior que 127 (não ASCII), a função retorna",
		"If the input is not a string or an empty string, it throws an error.": "Se a entrada não for uma string ou uma string vazia, ela lança um erro.",

		"function checks if the input string is a valid Base64 string. It returns": "a função verifica se a string de entrada é uma string Base64 válida. Ela retorna",
		"if the string is a valid Base64, and": "se a string é uma Base64 válida e",
		"The input string to check if it is a valid Base64 string.": "A string de entrada para verificar se é uma string Base64 válida.",
		"The function expects the input value to be passed as a string. It checks if the string is a valid Base64 string using a regular expression. If the input is not a string or an empty string, it throws an error.": "A função espera que o valor de entrada seja passado como uma string. Ela verifica se a string é uma string Base64 válida usando uma expressão regular. Se a entrada não for uma string ou uma string vazia, ela lança um erro.",

		"function checks if the input string is a valid Brazilian ZIP Code (CEP). It returns": "a função verifica se a string de entrada é um CEP brasileiro válido. Ela retorna",
		"if the CEP is valid, and": "se o CEP é válido e",
		"The input string to check if it is a valid Brazilian ZIP Code (CEP).": "A string de entrada para verificar se é um CEP brasileiro válido.",
		"The function expects the input to be passed as a string.": "A função espera que a entrada seja passada como uma string.",

		"function checks if the input string represents a valid credit card number using the Luhn algorithm. It returns": "a função verifica se a string de entrada representa um número de cartão de crédito válido usando o algoritmo de Luhn. Ela retorna",
		"if the credit card number is valid, and": "se o número do cartão de crédito é válido e",
		"The input string representing the credit card number to validate.": "A string de entrada representando o número do cartão de crédito a ser validado.",
		"The function expects the input value to be passed as a string representing a credit card number. It removes any non-digit characters and applies the Luhn algorithm to validate the credit card number. If the input is not a string, the function throws an error.": "A função espera que o valor de entrada seja passado como uma string representando um número de cartão de crédito. Ela remove quaisquer caracteres que não sejam dígitos e aplica o algoritmo de Luhn para validar o número do cartão de crédito. Se a entrada não for uma string, a função lança um erro.",

		"function checks if the input string is a valid date.": "a função verifica se a string de entrada é uma data válida.",
		"The input string representing the date": "A string de entrada representando a data",
		"The function expects the input value to be passed as a string.": "A função espera que o valor de entrada seja passado como uma string.",

		"function checks if the input string or number represents a valid decimal number. It returns": "a função verifica se a string de entrada ou número representa um número decimal válido. Ela retorna",
		"if the value is a valid decimal number and follows one of the supported formats, and": "se o valor é um número decimal válido e segue um dos formatos suportados, e",
		"The input value to check if it represents a valid decimal number.": "O valor de entrada para verificar se representa um número decimal válido.",
		"The function expects the input value to be passed as a string or a number representing a decimal number. If the input is not a string or number, or an empty string, the function throws an error. It uses a regular expression to validate decimal numbers, supports both dot (.) and comma (,) as decimal separators, and checks for multiple decimal separators. Additionally, it performs checks for the negative sign to ensure it is only at the beginning of the value.": "A função espera que o valor de entrada seja passado como uma string ou número representando um número decimal. Se a entrada não for uma string ou número, ou uma string vazia, a função lança um erro. Ela usa uma expressão regular para validar números decimais, suporta tanto o ponto (.) quanto a vírgula (,) como separadores decimais, e verifica múltiplos separadores decimais. Além disso, ela realiza verificações para o sinal negativo para garantir que esteja apenas no início do valor.",

		"function checks if the input string is a valid email address. It returns": "a função verifica se a string de entrada é um endereço de e-mail válido. Ela retorna",
		"if the email address is valid and follows the supported format, and": "se o endereço de e-mail é válido e segue o formato suportado, e",
		"This function just checks the syntax of the email to see if it's valid or not, if you need a stronger validation, use: ": "Esta função apenas verifica a sintaxe do e-mail para ver se é válido ou não, se você precisa de uma validação mais forte, use: ",
		"The input string representing the email address to validate.": "A string de entrada representando o endereço de e-mail a ser validado.",
		"The function expects the input email to be passed as a string. If the input is not a string, it will throw an error. If the email passed is an invalid email, it will return.": "A função espera que o e-mail de entrada seja passado como uma string. Se a entrada não for uma string, ela lançará um erro. Se o e-mail passado for um e-mail inválido, ele será retornado.",

		"function checks if the input string is empty or contains only whitespace characters. It returns": "a função verifica se a string de entrada está vazia ou contém apenas caracteres de espaço em branco. Ela retorna",
		"if the input string is empty or consists of only whitespace characters, and": "se a string de entrada está vazia ou consiste apenas em caracteres de espaço em branco, e",
		"The input string to check if it is empty or contains only whitespace characters.": "A string de entrada para verificar se está vazia ou contém apenas caracteres de espaço em branco.",
		"The function expects the input value to be passed as a string. If the input is not a string, the function throws a TypeError. It removes any leading and trailing whitespace from the input string using the.": "A função espera que o valor de entrada seja passado como uma string. Se a entrada não for uma string, a função lançará um TypeError. Ela remove quaisquer espaços em branco iniciais e finais da string de entrada usando o.",
		"method and checks if the resulting string is empty (i.e., has a length of 0). If the input string consists of only whitespace characters, the function also returns.": "método e verifica se a string resultante está vazia (ou seja, tem um comprimento de 0). Se a string de entrada consistir apenas em caracteres de espaço em branco, a função também retornará.",
		"as it considers such strings to be empty.": "pois considera essas strings como vazias.",

		"function checks if the input string is a valid MAC address. It returns": "A função verifica se a string de entrada é um endereço MAC válido. Ela retorna",
		"if the MAC address is valid and follows the supported formats, and": "se o endereço MAC é válido e segue os formatos suportados, e",
		"The input string representing the MAC address to validate. The MAC address can be in the following formats: \"001A2B3C4D5E\", \"00:1A:2B:3C:4D:5E\", or \"00-1A-2B-3C-4D-5E\".": "A string de entrada representando o endereço MAC a ser validado. O endereço MAC pode estar nos seguintes formatos: \"001A2B3C4D5E\", \"00:1A:2B:3C:4D:5E\" ou \"00-1A-2B-3C-4D-5E\".",
		"The function expects the input MAC address to be passed as a string. If the input is not a string, the function throws a TypeError. It removes all non-alphanumeric characters from the input string using a regular expression and checks if the resulting string has a valid length (exactly 12 characters). Then, it uses another regular expression to verify if the cleaned MAC address matches the supported pattern. The supported pattern is a 12-character string consisting of hexadecimal digits (0-9, A-F, a-f), with optional separators (\":\", \"-\") between pairs of hexadecimal digits.": "A função espera que o endereço MAC de entrada seja passado como uma string. Se a entrada não for uma string, a função lançará um TypeError. Ela remove todos os caracteres não alfanuméricos da string de entrada usando uma expressão regular e verifica se a string resultante tem um comprimento válido (exatamente 12 caracteres). Em seguida, ela usa outra expressão regular para verificar se o endereço MAC limpo corresponde ao padrão suportado. O padrão suportado é uma string de 12 caracteres consistindo em dígitos hexadecimais (0-9, A-F, a-f), com separadores opcionais (\":\", \"-\") entre pares de dígitos hexadecimais.",

		"function checks if the input string is a valid MD5 hash. It returns": "A função verifica se a string de entrada é um hash MD5 válido. Ela retorna",
		"if the input string is a valid MD5 hash and follows the supported format, and": "se a string de entrada é um hash MD5 válido e segue o formato suportado, e",
		"The input string representing the MD5 hash to validate. The MD5 hash should be a 32-character string consisting of hexadecimal digits (0-9, A-F, a-f).": "A string de entrada representando o hash MD5 a ser validado. O hash MD5 deve ser uma string de 32 caracteres consistindo em dígitos hexadecimais (0-9, A-F, a-f).",
		"The function expects the input MD5 hash to be passed as a string. If the input is not a string, the function throws a TypeError. It removes leading and trailing whitespace from the input string and checks if the resulting string has a valid length (exactly 32 characters). Then, it uses a regular expression to verify if the cleaned MD5 hash consists only of hexadecimal digits. Additionally, the function checks if the MD5 hash is not a known weak hash, such as \"d41d8cd98f00b204e9800998ecf8427e\". If any of the checks fail, the function returns false; otherwise, it returns true, indicating that the input string is a valid MD5 hash.": "A função espera que o hash MD5 de entrada seja passado como uma string. Se a entrada não for uma string, a função lançará um TypeError. Ela remove espaços em branco iniciais e finais da string de entrada e verifica se a string resultante tem um comprimento válido (exatamente 32 caracteres). Em seguida, ela usa uma expressão regular para verificar se o hash MD5 limpo consiste apenas em dígitos hexadecimais. Além disso, a função verifica se o hash MD5 não é um hash fraco conhecido, como \"d41d8cd98f00b204e9800998ecf8427e\". Se alguma das verificações falhar, a função retorna false; caso contrário, ela retorna true, indicando que a string de entrada é um hash MD5 válido.",

		"function checks if the input value is a valid number. It returns": "A função verifica se o valor de entrada é um número válido. Ela retorna",
		"if the value is a valid number, and": "se o valor é um número válido, e",
		"The value to be checked if it represents a valid number.": "O valor a ser verificado se representa um número válido.",
		"The function checks if the input value is not null, undefined, or a boolean type. If any of these conditions are met, the function returns false since these values cannot represent valid numbers. For all other types, the function uses the.": "A função verifica se o valor de entrada não é nulo, indefinido ou do tipo booleano. Se alguma dessas condições for atendida, a função retorna false, pois esses valores não podem representar números válidos. Para todos os outros tipos, a função usa o.",
		"function to convert the value to a floating-point number. If the conversion results in a valid number and the value is finite (not infinity or NaN), the function returns true, indicating that the input value is a valid number. Otherwise, it returns false.": "função para converter o valor em um número de ponto flutuante. Se a conversão resultar em um número válido e o valor for finito (não infinito ou NaN), a função retorna true, indicando que o valor de entrada é um número válido. Caso contrário, ela retorna false.",

		"function checks if the input value represents a valid port number. It returns": "A função verifica se o valor de entrada representa um número de porta válido. Ela retorna",
		"if the value is a valid port number (within the range 1 to 65535), and": "se o valor é um número de porta válido (dentro da faixa de 1 a 65535), e",
		"The function takes one parameter that can be either a string or a number: ": "A função recebe um parâmetro que pode ser uma string ou um número: ",
		"The value to be checked if it represents a valid port number.": "O valor a ser verificado se representa um número de porta válido.",
		"The function first checks if the input value is either a string or a number. If the value is a string, it is converted to an integer using": "A função primeiro verifica se o valor de entrada é uma string ou um número. Se for uma string, ela é convertida em um número inteiro usando",
		"If the conversion is successful (resulting in a valid integer), the function checks if the integer is within the valid port range (1 to 65535). If the value is within this range and it is an integer, the function returns true, indicating that the input value represents a valid port number. Otherwise, it returns false.": "Se a conversão for bem-sucedida (resultando em um número inteiro válido), a função verifica se o número inteiro está dentro da faixa de porta válida (de 1 a 65535). Se o valor estiver dentro dessa faixa e for um número inteiro, a função retorna true, indicando que o valor de entrada representa um número de porta válido. Caso contrário, ela retorna false.",

    "function checks if the input value represents a valid postal code for supported countries. It returns": "função verifica se o valor de entrada representa um código postal válido para os países suportados. Ela retorna",
    "true": "true",
    "if the value matches the postal code format for any of the supported countries, and": "se o valor corresponde ao formato do código postal de qualquer um dos países suportados, e",
    "false": "false",
    "The function takes one parameter, which must be a string representing the postal code to be checked.": "A função recebe um parâmetro, que deve ser uma string representando o código postal a ser verificado.",
    "postalCode": "código postal",
    "The postal code to be checked for validity.": "O código postal a ser verificado quanto à validade.",
    "Supported Countries": "Países Suportados",
    "The function supports postal codes for the following countries:": "A função suporta códigos postais para os seguintes países:",
    "United States of America": "Estados Unidos da América",
    "Canada": "Canadá",
    "United Kingdom": "Reino Unido",
    "France": "França",
    "Netherlands": "Países Baixos",
    "Japan": "Japão",
    "Spain": "Espanha",
    "South Africa": "África do Sul",
    "Germany": "Alemanha",
    "Switzerland": "Suíça",
    "Brazil": "Brasil",
    "Italy": "Itália",
    "The function uses regular expressions to check the input postal code against supported 'countries' postal code formats. It returns": "A função usa expressões regulares para verificar o código postal de entrada contra os formatos de código postal 'countries' suportados. Ela retorna",
    "if the input value matches any of the supported postal code formats, and": "se o valor de entrada corresponde a qualquer um dos formatos de código postal suportados, e",

		"function checks if the input value represents a valid time in the format \"hh:mm\" or \"hh:mm AM/PM\" or \"hh:mm:ss\" or \"hh:mm:ss AM/PM\". It returns": "função verifica se o valor de entrada representa um horário válido no formato \"hh:mm\" ou \"hh:mm AM/PM\" ou \"hh:mm:ss\" ou \"hh:mm:ss AM/PM\". Ela retorna",
		"The time to be checked for validity. It must be in one of the supported formats: \"hh:mm\", \"hh:mm AM/PM\", \"hh:mm:ss\", or \"hh:mm:ss AM/PM\".": "O horário a ser verificado quanto à validade. Deve estar em um dos formatos suportados: \"hh:mm\", \"hh:mm AM/PM\", \"hh:mm:ss\" ou \"hh:mm:ss AM/PM\".",
		"if the value matches any of these formats, and": "se o valor corresponde a qualquer um desses formatos, e",
		"The function takes one parameter, which must be a string representing the time to be checked.": "A função recebe um parâmetro, que deve ser uma string representando o horário a ser verificado.",
		"The function uses a regular expression to check if the input time string matches any of the supported time formats. It returns": "A função usa uma expressão regular para verificar se a string de horário de entrada corresponde a algum dos formatos de horário suportados. Ela retorna",
		"if the input value matches any of the supported formats, and": "se o valor de entrada corresponde a qualquer um dos formatos suportados, e",

		"How to use the isValidAudio function": "Como usar a função isValidAudio",
		"function is used to check whether an audio file is valid or not. It accepts a Buffer as an argument.": "A função é usada para verificar se um arquivo de áudio é válido ou não. Ela aceita um Buffer como argumento.",
		"Types that are validated": "Tipos que são validados",
		"You can also pass an options object as a second argument to exclude a specific type.": "Você também pode passar um objeto de opções como segundo argumento para excluir um tipo específico.",

		"How to use the isValidImage function": "Como usar a função isValidImage",
		"function is used to check whether an image file is valid or not. It accepts a Buffer as an argument.": "A função é usada para verificar se um arquivo de imagem é válido ou não. Ela aceita um Buffer como argumento.",
		"Passing options to the": "Passando opções para o",
		"Example Usage with Nestjs and Multer": "Exemplo de uso com Nestjs e Multer",
		"In this example it only allocates 4 bytes for performance reasons, but you can pass the entire file.": "Neste exemplo, ele aloca apenas 4 bytes por motivos de desempenho, mas você pode passar o arquivo inteiro.",
		"First, import the": "Primeiro, importe a",
		"function from 'multiform-validator'. Then, define the path to the image you want to check. Call the": "função de 'multiform-validator'. Em seguida, defina o caminho para a imagem que você deseja verificar. Chame a",
		"function with the image path as an argument. The function will return": "função com o caminho da imagem como argumento. A função retornará",
		"if the image is valid and": "se a imagem for válida e",
		"if it is not.": "se não for.",

    "How to use the isValidPdf function": "Como usar a função isValidPdf",
    "function is used to check whether an pdf file is valid or not. It accepts a Buffer as an argument.": "A função é usada para verificar se um arquivo PDF é válido ou não. Ela aceita um Buffer como argumento.",

    "How to use the isValidTxt function": "Como usar a função isValidTxt",
    "function is used to check whether an txt file is valid or not. It accepts a Buffer as an argument.": "A função é usada para verificar se um arquivo de texto é válido ou não. Ela aceita um Buffer como argumento.",

    "How to use the isValidVideo function": "Como usar a função isValidVideo",
    "function is used to check whether an video file is valid or not. It accepts a Buffer as an argument.": "A função é usada para verificar se um arquivo de vídeo é válido ou não. Ela aceita um Buffer como argumento.",

		"function evaluates the strength of a given password and returns the type of password strength as a string. The possible strength types are: \"veryWeak\", \"weak\", \"regular\", \"strong\", or \"veryStrong\", based on specific criteria.": "A função avalia a força de uma senha fornecida e retorna o tipo de força da senha como uma string. Os possíveis tipos de força são: \"muitoFraca\", \"fraca\", \"regular\", \"forte\" ou \"muitoForte\", com base em critérios específicos.",
		"The function can be imported using ES6 syntax from the \"password-strength-tester\" package:": "A função pode ser importada usando a sintaxe ES6 do pacote \"password-strength-tester\":",
		"The function takes one parameter, which must be a string representing the password to be evaluated.": "A função recebe um parâmetro, que deve ser uma string representando a senha a ser avaliada.",
		"The password to be evaluated for strength.": "A senha a ser avaliada quanto à força.",
		"The function checks the length of the password and applies certain criteria to classify the password strength. The returned strength type is based on the following criteria:": "A função verifica o comprimento da senha e aplica certos critérios para classificar a força da senha. O tipo de força retornado é baseado nos seguintes critérios:",
		"'veryWeak' - Password with less than 6 characters, consisting only of numbers": "'muitoFraca' - Senha com menos de 6 caracteres, consistindo apenas de números",
		"'weak' - Password with less than 6 characters, consisting of numbers and letters": "'fraca' - Senha com menos de 6 caracteres, consistindo de números e letras",
		"'weak' - Password that repeats the same character more than 3 times in a row and is less than 10 characters long": "'fraca' - Senha que repete o mesmo caractere mais de 3 vezes seguidas e tem menos de 10 caracteres",
		"'weak' - Password between 5 and 8 characters, consisting only of numbers": "'fraca' - Senha entre 5 e 8 caracteres, consistindo apenas de números",
		"'regular' - Password between 9 and 12 characters": "'regular' - Senha entre 9 e 12 caracteres",
		"'regular' - Password greater than or equal to 6 and less than 8 characters, containing at least one number and one letter": "'regular' - Senha maior ou igual a 6 e menor que 8 caracteres, contendo pelo menos um número e uma letra",
		"'regular' - Password greater than 10 and has characters that are repeated more than 5 times in sequence": "'regular' - Senha maior que 10 e tem caracteres que se repetem mais de 5 vezes em sequência",
		"'strong' - Password between 13 and 16 characters": "'forte' - Senha entre 13 e 16 caracteres",
		"'strong' - Password with 8 or more characters, containing at least one uppercase letter, one number and one lowercase letter": "'forte' - Senha com 8 ou mais caracteres, contendo pelo menos uma letra maiúscula, um número e uma letra minúscula",
		"'veryStrong' - Password longer than 16 characters": "'muitoForte' - Senha com mais de 16 caracteres",
		"'veryStrong' - Password with 8 or more characters, containing at least one uppercase letter, one number, one special character and one lowercase letter": "'muitoForte' - Senha com 8 ou mais caracteres, contendo pelo menos uma letra maiúscula, um número, um caractere especial e uma letra minúscula",

    "function is used to validate Brazilian phone numbers. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"errorMsg\" property will contain the error message if the phone number is invalid, or it will be null if the phone number is valid.": "A função é usada para validar números de telefone brasileiros. Ela retorna um objeto com duas propriedades: \"isValid\" (booleano) e \"errorMsg\" (string). A propriedade \"errorMsg\" conterá a mensagem de erro se o número de telefone for inválido, ou será nula se o número de telefone for válido.",
    "The Brazilian phone number to be validated.": "O número de telefone brasileiro a ser validado.",
    "[optional] - An array of error messages to customize the response. If not provided, the function will use default error messages.": "[opcional] - Um array de mensagens de erro para personalizar a resposta. Se não fornecido, a função usará mensagens de erro padrão.",
    "Default Error Messages": "Mensagens de Erro Padrão",
		"The function can be imported using ES6 syntax from the \"validateBRPhoneNumber\" package:": "A função pode ser importada usando a sintaxe ES6 do pacote \"validateBRPhoneNumber\":",
    "The default error messages are as follows:": "As mensagens de erro padrão são as seguintes:",

    "function is used to validate email addresses. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"errorMsg\" property will contain the error message if the email address is invalid, or it will be null if the email address is valid.": "A função é usada para validar endereços de e-mail. Ela retorna um objeto com duas propriedades: \"isValid\" (booleano) e \"errorMsg\" (string). A propriedade \"errorMsg\" conterá a mensagem de erro se o endereço de e-mail for inválido, ou será nula se o endereço de e-mail for válido.",
    "What is the difference between": "Qual é a diferença entre",
    "isEmail just does simple validations like checking if the string has the formatting of an email like several validators out there,": "isEmail faz apenas validações simples, como verificar se a string tem a formatação de um e-mail, como vários validadores por aí,",
    "does not, it does complex validations and better than that, you can customize the validations passing the information in the parameters.": "não, ele faz validações complexas e melhor do que isso, você pode personalizar as validações passando as informações nos parâmetros.",
    "Function Signature": "Assinatura da Função",
    "The email address to be validated.": "O endereço de e-mail a ser validado.",
    "[optional] - The maximum length allowed for the email address. If not provided, the default value is 400.": "[opcional] - O comprimento máximo permitido para o endereço de e-mail. Se não fornecido, o valor padrão é 400.",
    "[optional] - The country code to check if the email ends with it. If not provided, no country code check will be performed.": "[opcional] - O código do país para verificar se o e-mail termina com ele. Se não fornecido, nenhuma verificação de código do país será realizada.",
    "[optional] - This parameter determines whether to check for specific valid email domains or not. If set to": "[opcional] - Este parâmetro determina se deve ou não verificar domínios de e-mail específicos válidos. Se definido como",
    "the function will use a default list of valid domains. If set to": "a função usará uma lista padrão de domínios válidos. Se definido como",
    "no domain check will be performed. Alternatively, you can pass an array of custom valid domains to perform the check against a specific list.": "nenhuma verificação de domínio será realizada. Alternativamente, você pode passar uma matriz de domínios válidos personalizados para realizar a verificação em uma lista específica.",
    "Default list of valid domains": "Lista padrão de domínios válidos",

    "Function is used to validate names. It returns an object with two properties: 'isValid' (boolean) and 'errorMsg' (string). The 'errorMsg' property will contain the error message if the name is invalid, or it will be null if the name is valid.": "A função é usada para validar nomes. Ela retorna um objeto com duas propriedades: 'isValid' (booleano) e 'errorMsg' (string). A propriedade 'errorMsg' conterá a mensagem de erro se o nome for inválido, ou será nula se o nome for válido.",
    "The name to be validated.": "O nome a ser validado.",
    "[optional] The minimum length allowed for the name. Default value: 1.": "[opcional] O comprimento mínimo permitido para o nome. Valor padrão: 1.",
    "[optional] The maximum length allowed for the name. Default value: 20.": "[opcional] O comprimento máximo permitido para o nome. Valor padrão: 20.",

    "function is used to validate passport numbers. It returns an object with two properties: 'isValid' (boolean) and 'country' (string). The 'isValid' property will be true if the passport number matches the supported formats, and 'country' property will indicate the country associated with the passport number. If the passport number does not match any supported format, 'isValid' will be false, and 'country' will be null.": "A função é usada para validar números de passaporte. Ela retorna um objeto com duas propriedades: 'isValid' (booleano) e 'country' (string). A propriedade 'isValid' será verdadeira se o número do passaporte corresponder aos formatos suportados, e a propriedade 'country' indicará o país associado ao número do passaporte. Se o número do passaporte não corresponder a nenhum formato suportado, 'isValid' será falso e 'country' será nulo.",
    "The passport number to be validated.": "O número do passaporte a ser validado.",
    "Supported Passport Formats": "Formatos de Passaporte Suportados",
    "United States: 9 digits (e.g., '123456789')": "Estados Unidos: 9 dígitos (exemplo: '123456789')",
    "United Kingdom: 2 uppercase letters followed by 6 digits (e.g., 'AB123456')": "Reino Unido: 2 letras maiúsculas seguidas por 6 dígitos (exemplo: 'AB123456')",
    "Germany: 2 uppercase letters followed by 8 digits (e.g., 'AB12345678')": "Alemanha: 2 letras maiúsculas seguidas por 8 dígitos (exemplo: 'AB12345678')",
    "Canada: 1 uppercase letter followed by 7 digits (e.g., 'A1234567')": "Canadá: 1 letra maiúscula seguida por 7 dígitos (exemplo: 'A1234567')",
    "Australia: 1 uppercase letter followed by 7 digits (e.g., 'A1234567')": "Austrália: 1 letra maiúscula seguida por 7 dígitos (exemplo: 'A1234567')",
    "Brazil: 9 digits (e.g., '123456789')": "Brasil: 9 dígitos (exemplo: '123456789')",
    "France: 2 uppercase letters followed by 7 digits (e.g., 'AB1234567')": "França: 2 letras maiúsculas seguidas por 7 dígitos (exemplo: 'AB1234567')",
    "Italy: 1 uppercase letter followed by 7 digits (e.g., 'A1234567')": "Itália: 1 letra maiúscula seguida por 7 dígitos (exemplo: 'A1234567')",
    "India: 1 uppercase letter followed by 7 digits (e.g., 'A1234567')": "Índia: 1 letra maiúscula seguida por 7 dígitos (exemplo: 'A1234567')",
    "China: 1 uppercase letter followed by 8 digits (e.g., 'A12345678')": "China: 1 letra maiúscula seguida por 8 dígitos (exemplo: 'A12345678')",

    "function is used to validate passwords. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"isValid\" property will be true if the password meets the specified criteria, and \"errorMsg\" will contain the error message if the password is invalid, or it will be null if the password is valid.": "A função é usada para validar senhas. Ela retorna um objeto com duas propriedades: \"isValid\" (booleano) e \"errorMsg\" (string). A propriedade \"isValid\" será verdadeira se a senha atender aos critérios especificados, e \"errorMsg\" conterá a mensagem de erro se a senha for inválida, ou será nula se a senha for válida.",
    "The password to be validated.": "A senha a ser validada.",
    "[optional]": "[opcional]",
    "The minimum length allowed for the password. Default value: 1.": "O comprimento mínimo permitido para a senha. Valor padrão: 1.",
    "The maximum length allowed for the password. Default value: Infinity.": "O comprimento máximo permitido para a senha. Valor padrão: Infinito.",
    "[optional] - An object with the following optional properties:": "[opcional] - Um objeto com as seguintes propriedades opcionais:",
    "Whether the password requires at least one uppercase letter. Default value: false.": "Se a senha requer pelo menos uma letra maiúscula. Valor padrão: false.",
    "Whether the password requires at least one special character": "Se a senha requer pelo menos um caractere especial",
    "Default value: false.": "Valor padrão: false.",
    "Whether the password requires at least one number. Default value: false.": "Se a senha requer pelo menos um número. Valor padrão: false.",
    "Whether the password requires at least one letter. Default value: false.": "Se a senha requer pelo menos uma letra. Valor padrão: false.",

    "Function is used to validate phone numbers. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"isValid\" property will be true if the phone number meets the specified criteria, and \"errorMsg\" will contain the error message if the phone number is invalid, or it will be null if the phone number is valid.": "A função é usada para validar números de telefone. Ela retorna um objeto com duas propriedades: \"isValid\" (booleano) e \"errorMsg\" (string). A propriedade \"isValid\" será verdadeira se o número de telefone atender aos critérios especificados, e \"errorMsg\" conterá a mensagem de erro se o número de telefone for inválido, ou será nula se o número de telefone for válido.",
    "The phone number to be validated.": "O número de telefone a ser validado.",
    "An array of error messages to customize the response. If not provided, the function will use default error messages.": "Uma matriz de mensagens de erro para personalizar a resposta. Se não fornecida, a função usará mensagens de erro padrão.",

    "function is used to validate surnames. It returns an object with two properties: 'isValid' (boolean) and 'errorMsg' (string). The 'isValid' property will be true if the surname meets the specified criteria, and 'errorMsg' will contain the error message if the surname is invalid, or it will be null if the surname is valid.": "A função é usada para validar sobrenomes. Ela retorna um objeto com duas propriedades: 'isValid' (booleano) e 'errorMsg' (string). A propriedade 'isValid' será verdadeira se o sobrenome atender aos critérios especificados, e 'errorMsg' conterá a mensagem de erro se o sobrenome for inválido, ou será nula se o sobrenome for válido.",
    "The surname to be validated.": "O sobrenome a ser validado.",
    "The minimum length of the surname. Default is 1.": "O comprimento mínimo do sobrenome. O padrão é 1.",
    "The maximum length of the surname. Default is 25.": "O comprimento máximo do sobrenome. O padrão é 25.",

    "The input textarea string to be validated.": "A string da área de texto de entrada a ser validada.",
    "A flag to determine if the textarea is required.": "Uma bandeira para determinar se a área de texto é obrigatória.",
    "The maximum allowed length for the textarea.": "O comprimento máximo permitido para a área de texto.",
    "An array of custom error messages for different validation conditions. The array should contain three elements corresponding to different error scenarios. If not provided, default error messages will be used. Default Error Messages:": "Uma matriz de mensagens de erro personalizadas para diferentes condições de validação. A matriz deve conter três elementos correspondentes a diferentes cenários de erro. Se não fornecido, serão usadas mensagens de erro padrão. Mensagens de Erro Padrão:",
    "Index 0: \"This textarea is too big\"": "Índice 0: \"Esta área de texto é muito grande\"",
    "Index 1: \"Can not be empty\"": "Índice 1: \"Não pode estar vazio\"",
    "Index 2: \"Unknown error\"": "Índice 2: \"Erro desconhecido\"",
    "Return Value": "Valor de Retorno",
    "The function returns an object with two properties:": "A função retorna um objeto com duas propriedades:",
    "Indicates if the textarea is valid based on the given criteria.": "Indica se a área de texto é válida com base nos critérios fornecidos.",
    "Contains the corresponding error message, if any, based on the validation result.": "Contém a mensagem de erro correspondente, se houver, com base no resultado da validação.",
    "This function is a text area validation utility that checks the validity of a given textarea string based on certain criteria.": "Esta função é uma utilidade de validação de área de texto que verifica a validade de uma determinada string de área de texto com base em certos critérios.",
		"Usage Examples": "Exemplos de Uso",
		"Note:": "Nota:",
		"The examples provided demonstrate how to use the function with different parameters and show the expected return values.": "Os exemplos fornecidos demonstram como usar a função com diferentes parâmetros e mostram os valores de retorno esperados.",

    "The function is a text area validation utility that checks the validity of a given textarea string based on certain criteria.": "A função é uma utilidade de validação de área de texto que verifica a validade de uma determinada string de área de texto com base em certos critérios.",
    "The username to be validated.": "O nome de usuário a ser validado.",
    "[optional] - The minimum length of the username. Default is 1.": "[opcional] - O comprimento mínimo do nome de usuário. O padrão é 1.",
    "[optional] - The maximum length of the username. Default is Infinity.": "[opcional] - O comprimento máximo do nome de usuário. O padrão é Infinito.",
		"function is used to validate usernames. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"isValid\" property will be true if the username meets the specified criteria, and \"errorMsg\" will contain the error message if the username is invalid, or it will be null if the username is valid.": "A função é usada para validar nomes de usuário. Ela retorna um objeto com duas propriedades: \"isValid\" (booleano) e \"errorMsg\" (string). A propriedade \"isValid\" será verdadeira se o nome de usuário atender aos critérios especificados, e \"errorMsg\" conterá a mensagem de erro se o nome de usuário for inválido, ou será nula se o nome de usuário for válido.",

    "function is used to validate US phone numbers. It supports various formats, including \"XXX-XXX-XXXX\", \"(XXX) XXX-XXXX\", and \"1 (XXX) XXX-XXXX\". It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"isValid\" property will be true if the phone number is valid, and \"errorMsg\" will contain the error message if the phone number is invalid, or it will be null if the phone number is valid.": "A função é usada para validar números de telefone dos EUA. Ela suporta vários formatos, incluindo \"XXX-XXX-XXXX\", \"(XXX) XXX-XXXX\" e \"1 (XXX) XXX-XXXX\". Ela retorna um objeto com duas propriedades: \"isValid\" (booleano) e \"errorMsg\" (string). A propriedade \"isValid\" será verdadeira se o número de telefone for válido, e \"errorMsg\" conterá a mensagem de erro se o número de telefone for inválido, ou será nula se o número de telefone for válido.",
    "The US phone number to be validated.": "O número de telefone dos EUA a ser validado."
	},

	"News": {
		"News Ad Page": "Página de Anúncio de Notícias",
		"News Ad Page for the Multiform Validator library." : "Página de Anúncio de Notícias para a biblioteca Multiform Validator."
	}
}
