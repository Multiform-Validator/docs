{
    "HomeLayout": {
        "Support me on Buy me a coffee": "Bana bir kahve ısmarla!",
        "Description": "Doğrulama için yapılmış çok dilli kitaplık, e-posta, telefon, şifre, cpf, cnpj, kredi kartı, görüntü mime tipi doğrulaması için sihirli sayılar ve çok daha fazlası gibi çeşitli form alanları.",
        "Technology": "Teknoloji",
        "Opengraph description": "Doğrulama için yapılmış çok dilli kitaplık, e-posta, resim, cpf, cnpj, kredi kartı, sihirli sayılar ve çok daha fazlası gibi çeşitli form alanları.",
        "Classification": "Doğrulama Kitaplığı",
        "Title": "Çok Biçimli Doğrulayıcı",
        "Opengraph title": "Çok Biçimli Doğrulayıcı - Çok Dilli Doğrulama Kitaplığınız"
    },
    "DocumentationJs": {
        "By - Gabriel Logan": "Yazan - Gabriel Logan",
        "Installation": "Kurma",
        "This package contains various modules for validating different types of data. Below are the available validation modules:": "Bu paket, farklı veri türlerini doğrulamak için çeşitli modüller içerir. Aşağıda mevcut doğrulama modülleri verilmiştir:",
        "INFO: ": "BİLGİ: ",
        "Welcome Introduction Text": "Multiform Validator'ın ana sayfasına hoş geldiniz! Burada, veri doğrulama için kullanışlı bir JavaScript kitaplığı olan Multiform Validator tarafından sağlanan çeşitli işlevler için ayrıntılı belgeler bulacaksınız. Her işlev, farklı veri türlerinin doğrulanmasına yardımcı olmak için tasarlanmıştır ve kodunuzu daha sağlam ve güvenli hale getirir. Multiform Validator, e-postalar, şifreler, adlar, soyadlar, pasaport numaraları, telefon numaraları ve daha fazlası gibi çeşitli veri türlerini doğrulamanıza olanak tanıyan bir dizi özel işlevden oluşur. Her işlevin yapılandırılabilir parametreleri vardır ve projenizin ihtiyaçlarına göre özelleştirilebilir hata mesajları sağlar. Her dokümantasyon sayfasında, amacı, kabul edilen parametreler ve kullanım örnekleri dahil olmak üzere işlevin kapsamlı bir açıklamasını bulacaksınız. Ek olarak, varsayılan hata mesajlarıyla ilgili ayrıntılara ve bunları uygulamanıza uyacak şekilde nasıl özelleştireceğinize erişebileceksiniz. Multiform Validator'ı kullanarak, formlarınızdaki kullanıcı girişinin doğru ve belirlenen kurallara uygun olmasını sağlayabilirsiniz. Bu doğrulama, geçersiz girişler, bozuk veriler veya güvenlik açıkları gibi sorunları önlemek için gereklidir. Multiform Validator'ı doğrulama ihtiyaçlarınız için daha da güçlü ve esnek bir araç haline getirmek için yeni özellikler ve iyileştirmelerle geliştirmek ve genişletmek için sürekli çalışıyoruz. Bu belgelerin yardımcı olacağını ve projelerinizde Multiform Validator'ın kullanımını basitleştireceğini umuyoruz. Mevcut çeşitli işlevleri keşfetmekten çekinmeyin ve herhangi bir sorunuz veya öneriniz varsa bizimle iletişime geçmekten çekinmeyin. Veri doğrulama aracınız olarak Multiform Validator'ı seçtiğiniz için teşekkür eder, projelerinizde başarılar dileriz! Çok Biçimli Doğrulayıcı Ekibi",
        "if you prefer, you can use importing as:": "İsterseniz içe aktarmayı şu şekilde kullanabilirsiniz:",
        "Official documentation": "Resmi belgeler",
        "Example of use with CDN": "CDN ile kullanım örneği",
        "Data Validator": "Veri Doğrulayıcı",
        "FirstInfoText": "\"validate\" adlı tüm işlevler iki özelliğe sahip bir nesne döndürür, isValid: true | false ve errorMsg: 'Hatalı dize'",
        "Feel free to find bugs Text Msg": "Hataları bulmaktan ve bana bildirmekten çekinmeyin. Geri bildiriminiz çok takdir edilmektedir. Gabriel Logan'dan kucaklaşmalar!",
        "Back to home page": "Ana sayfaya geri dön",
        "If you want to help me, you can buy me a coffee (:": "Bana yardım etmek istersen, bana bir kahve ısmarlayabilirsin (:",
        "SecondInfoText": "Kalanlar true|false|string|array döndürebilir, her biri için belgeye bakın",
        "Available Validation Modules": "Mevcut Doğrulama Modülleri",
        "Feel free to explore msg": "Davranışlarını anlamak için çeşitli işlevleri keşfetmekten ve farklı girdilerle denemeler yapmaktan çekinmeyin. Herhangi bir sorunla karşılaşırsanız veya önerileriniz varsa, bana ulaşmaktan çekinmeyin. Geri bildiriminiz değerlidir ve paketin geliştirilmesine yardımcı olur. Mutlu kodlamalar!",
        "This npm package provides JavaScript functions to validate various forms fields.": "Bu npm paketi, çeşitli form alanlarını doğrulamak için JavaScript işlevleri sağlar."
    },
    "DocumentationLayout": {
        "Documentation": "Belge",
        "Documentation for the Multiform Validator library.": "Çok Biçimli Doğrulayıcı kitaplığı için belgeler."
    },
    "Terms": {
        "Terms and Conditions": "Şartlar ve koşullar",
        "Unauthorized use of this website is strictly prohibited.": "Bu web sitesinin izinsiz kullanımı kesinlikle yasaktır.",
        "Terms and Conditions of Multiform Validator library": "Multiform Validator kütüphanesinin Hüküm ve Koşulları",
        "Welcome to Gabriel Logan Web Services. By using this website, you agree to the following terms and conditions:": "Gabriel Logan Web Hizmetleri'ne hoş geldiniz. Bu web sitesini kullanarak, aşağıdaki hüküm ve koşulları kabul etmiş olursunuz:",
        "We do not collect any personal data through this website, and your privacy is important to us.": "Bu web sitesi aracılığıyla herhangi bir kişisel veri toplamıyoruz ve gizliliğiniz bizim için önemlidir.",
        "Your use of this website and any disputes arising are subject to the laws of [Your Country/Region].": "Bu web sitesini kullanımınız ve ortaya çıkan herhangi bir anlaşmazlık, [Ülkeniz/Bölgeniz] yasalarına tabidir.",
        "The content provided on this website is for general information purposes only, and we make no warranties or representations regarding its accuracy or completeness.": "Bu web sitesinde sağlanan içerik yalnızca genel bilgi amaçlıdır ve doğruluğu veya eksiksizliği konusunda hiçbir garanti veya beyanda bulunmuyoruz.",
        "We use the \"multiform-validator\" library, licensed under the MIT License, to enhance form field validation. However, we are not responsible for its usage or any consequences resulting from third-party use of the library.": "Form alanı doğrulamasını geliştirmek için MIT Lisansı altında lisanslanan \"multiform validator\" kütüphanesini kullanıyoruz. Ancak, kullanımından veya kitaplığın üçüncü şahıslar tarafından kullanılmasından kaynaklanan sonuçlardan sorumlu değiliz.",
        "Thank you for visiting our website and using our services. If you have any questions or concerns, please don’t hesitate to contact us.": "Web sitemizi ziyaret ettiğiniz ve hizmetlerimizi kullandığınız için teşekkür ederiz. Herhangi bir sorunuz veya endişeniz varsa, lütfen bizimle iletişime geçmekten çekinmeyin."
    },
    "PrivacyPolices": {
        "privacy_questions": "Gizlilik politikalarımız veya \"multiform-validator\" kütüphanesinin kullanımı hakkında herhangi bir sorunuz veya endişeniz varsa, lütfen bizimle iletişime geçmekten çekinmeyin. Her türlü sorunuzu yanıtlamak ve içinizin rahat etmesini sağlamak için buradayız.",
        "privacy_intro": "Gabriel Logan Web Services olarak gizliliğinizi ciddiye alıyoruz. Web sitemizde herhangi bir veri toplamadığımızdan ve \"multiform-validator\" kütüphanesi aracılığıyla herhangi bir veri kullanmadığımızdan emin olmak istiyoruz. Bilgileriniz tamamen gizli kalır ve gizliliğiniz bizim için çok önemlidir.",
        "Privacy Policy": "Gizlilik Politikası",
        "validator_local": "\"Multiform validator\" kütüphanesi, harici sunuculara herhangi bir veriye erişmeden veya iletmeden web uygulamalarınızdaki form alanlarını doğrulamak için tasarlanmıştır. Tüm doğrulamalar tarayıcınızda yerel olarak gerçekleşir ve hassas bilgilerinizin cihazınızdan asla ayrılmamasını sağlar.",
        "privacy_thanks": "Gabriel Logan Web Services'i seçtiğiniz için teşekkür ederiz. Her adımda gizliliğinizi korurken size olağanüstü çözümler sunmak için sabırsızlanıyoruz.",
        "privacy_title": "Gizlilik Politikaları - Verileriniz Bizimle Güvende",
        "validator_secure": "Veri güvenliğinin önemini anlıyoruz ve bu nedenle \"multiform validator\" kütüphanesini %100 güvenli olacak şekilde titizlikle geliştirdik. Verileriniz sizin kontrolünüz altındadır ve kütüphane tarafından işlenen hiçbir bilgiye erişimimiz yoktur.",
        "privacy_no_personal_data": "Web sitemizi ziyaret ettiğinizde, adınız, e-posta adresiniz veya iletişim bilgileriniz gibi hiçbir kişisel verinin toplanmadığından veya saklanmadığından emin olabilirsiniz. Size güvenli ve anonim bir tarama deneyimi sunmaya inanıyoruz.",
        "privacy_trust": "Güveniniz bizim için değerlidir ve hizmetlerimizi ve \"multiform validator\" kütüphanesini kullanırken kendinizi güvende hissetmenizi istiyoruz. Gizliliğinize olan bağlılığımız sarsılmazdır ve işimizin her alanında verilerinizin güvenliğine ve korunmasına öncelik vermeye devam edeceğiz."
    },
    "Info": {
        "info_intro": "Gabriel Logan tarafından geliştirilen güçlü bir Çoklu Kitaplık olan çok biçimli doğrulayıcı ile tanışın. Bu çok yönlü kitaplık, e-posta adresleri, telefon numaraları, parolalar, CPF (Brezilya bireysel vergi mükellefi sicil numaraları), kredi kartı numaraları ve daha fazlası dahil olmak üzere çok sayıda form alanını doğrulamak için tasarlanmıştır.",
        "info_conclusion": "Bu nedenle, form alanı doğrulaması için kapsamlı bir çözüm arıyorsanız, çok biçimli doğrulayıcıdan başkasına bakmayın. Bu kitaplığın gücünü benimseyin ve veri toplama sürecinizin akıcı, doğru ve güvenli olacağından emin olun.",
        "info_title": "multiform-validator - Form Alanı Doğrulaması için Çoklu Kitaplık",
        "info_performance": "Gabriel Logan, performans, verimlilik ve güvenilirliğe odaklanarak çok biçimli doğrulayıcı kitaplığını geliştirmekten gurur duymaktadır. Kitaplık, çeşitli tarayıcılar için optimize edilmiştir ve farklı hedef kitleniz için sorunsuz uyumluluk sağlar.",
        "info_prebuilt_rules": "Çok biçimli doğrulayıcı kitaplığı, önceden oluşturulmuş kapsamlı bir doğrulama kuralları seti ve özelleştirilebilir seçeneklerle birlikte gelir. Bunu web uygulamalarınıza kolayca entegre edebilir ve istemci tarafı doğrulamanın avantajlarından yararlanarak geçersiz form gönderimlerinin sayısını azaltabilir ve genel kullanıcı deneyimini geliştirebilirsiniz.",
        "info_flexibility": "Multiform validator'ı diğerlerinden ayıran şey, esnekliği ve kullanım kolaylığıdır. Yalnızca birkaç satır JavaScript kodu ekleyerek doğrulama kurallarını farklı form alanlarına zahmetsizce uygulayabilirsiniz. Ek olarak, kitaplık, kullanıcılara girdilerini nasıl düzeltecekleri konusunda rehberlik eden bilgilendirici hata mesajları sağlar, böylece hayal kırıklığını ve terk etme oranlarını azaltır.",
        "Info_Page": "Bilgi Sayfası",
        "info_backend": "Arka ucunuzda doğrulamalar yapmak için çok biçimli doğrulayıcıyı da kullanabilirsiniz, javascript, python kullanan her türlü form doğrulama veya işlev için çalışır, bu yüzden kullanmaktan çekinmeyin",
        "info_ensure": "Multiform validator ile formlarınız aracılığıyla gönderilen verilerin doğru ve güvenli olmasını sağlayabilirsiniz. İster bir kayıt formu, ister ödeme işlemi veya herhangi bir veri giriş sistemi oluşturuyor olun, bu kitaplık size yardımcı olur."
    },
    "Manifest": {
        "Description": "Doğrulama için yapılmış çok dilli kitaplık, e-posta, telefon, şifre, cpf, cnpj, kredi kartı, görüntü mime tipi doğrulaması için sihirli sayılar ve çok daha fazlası gibi çeşitli form alanları.",
        "ShortName": "Çok Biçimli Doğrulayıcı",
        "Name": "Çok Biçimli Doğrulayıcı - Çok Dilli Doğrulama Kitaplığınız"
    },
    "DocumentationPage": {
        "doc_java_title": "Java",
        "doc_py_text": "Burada Python dili için belgeleri bulabilirsiniz.",
        "doc_title": "Dokümantasyon Sayfası",
        "doc_subtitle": "Desteklediğimiz tüm diller şunlardır",
        "doc_java_text": "Burada Java dili için belgeleri bulabilirsiniz.",
        "doc_py_title": "Piton",
        "doc_js_title": "JavaScript (İngilizce)",
        "doc_intro": "Dokümantasyon sayfasına hoş geldiniz. Burada desteklediğimiz tüm dilleri ve her birinin belgelerini bulabilirsiniz.",
        "doc_js_text": "Burada JavaScript dilinin belgelerini bulabilirsiniz.",
        "doc_java_coming": "Geliyor ..."
    },
    "About": {
        "about_backend": "Ama becerilerim burada bitmiyor. Python, Java ve JavaScript (Node.js) gibi dillerde uzmanlığa sahip arka uç geliştirme konusunda eşit derecede yetkinim. Sunucu tarafı mantığının inceliklerini anladığım için sağlam ve güvenli web uygulamaları oluşturmak benim güçlü noktam. Çözümlerim verimlilik, güvenilirlik ve ölçeklenebilirliğe yöneliktir ve uygulamalarımın en yoğun zamanlarda bile sorunsuz bir kullanıcı deneyimi sunmasını sağlar.",
        "about_frontend": "Bir front-end geliştirici olarak, kullanıcı deneyimi ve arayüz tasarımı konusunda keskin bir gözüm var. Typescript ile React ve Nextjs kullanarak yaratıcı kavramları görsel olarak büyüleyici ve etkileşimli web uygulamalarına dönüştürmeyi seviyorum. Kesintisiz gezinmeden pürüzsüz animasyonlara kadar, ön uç projelerimin zarafet ve işlevsellik yaymasını sağlamak için her ayrıntıya dikkat ediyorum.",
        "About_Page": "Sayfa Hakkında",
        "about_achievement": "En gurur duyduğum başarılarımdan biri, form doğrulamayı basitleştiren ve hızlandıran çığır açan bir web sayfasının oluşturulmasıdır. Bu dahiyane çözüm, insanların ve işletmelerin form doğrulama süreçlerini kolaylaştırmalarına yardımcı olmak için tasarlanmıştır. Web geliştirme konusundaki kapsamlı bilgimden yararlanarak ve en son teknolojileri dahil ederek, sayfam formları doğrulamak için yıldırım hızında ve SÜPER verimli bir yol sunuyor. Kullanıcı dostu arayüzü ve sezgisel işlevleri, onu veri toplamada üretkenliklerini ve doğruluklarını artırmak isteyen profesyoneller için vazgeçilmez bir araç haline getirir.",
        "about_title": "Merhaba, ben Gabriel Logan",
        "about_inspiration": "Kodla meşgul olmadığımda, beni çevremdeki dünyadan ilham alırken bulabilirsiniz. İster dış mekanı keşfediyor olayım, ister kendimi sanat ve kültüre kaptırıyor olayım, ister düşündürücü tartışmalara katılıyor olayım, programlamaya yaklaşımımı ve meslektaşlarım ve müşterilerimle olan etkileşimlerimi şekillendiren çok çeşitli deneyimlerden yararlanıyorum.",
        "About_Page_Description": "Çok biçimli doğrulayıcı kitaplığının yaratıcısı Gabriel Logan'ı tanıyın ve web geliştirme, yenilikçi çözümler ve kullanıcı deneyimine olan bağlılığı hakkındaki tutkusu hakkında bilgi edinin.",
        "about_creative": "Teknik becerilerimin yanı sıra, yaratıcı bir problem çözücü olarak gelişiyorum. Yenilikçi bir zihniyetle zorlukların üstesinden gelmeyi seviyorum ve her zaman kullanıcı deneyimini geliştirmenin yollarını arıyorum. Alışılmışın dışında düşünme ve yaratıcı çözümler sunma yeteneğim, beni web geliştirme alanında gerçek bir lider olarak ayırıyor.",
        "about_conclusion": "Sonuç olarak, ben Gabriel Logan, olağanüstü web deneyimleri yaratmak için ön uç ve arka uç becerilerini sorunsuz bir şekilde ören tutkulu bir programcıyım. Yenilikçi zihniyetim, ayrıntılara gösterdiğim özen ve verimliliğe olan bağlılığım, form doğrulama dünyasında önemli bir etki yaratacağına inandığım çığır açan bir sayfa geliştirmeme neden oldu. Dijital manzara gelişmeye devam ettikçe, web geliştirme alanındaki olağanüstü çalışmalarımla yeni zorlukları kucaklamaya ve fark yaratmaya hazır olarak ön saflarda duruyorum.",
        "about_intro": "Kendimi hem ön uç hem de arka uç geliştirme tutkusu olan çok yönlü bir programcı olarak görüyorum. Olağanüstü web deneyimleri oluşturmak beni harekete geçiren şey ve ürettiğim işten büyük gurur duyuyorum."
    },
    "HomePage": {
        "HelpMsg": "Aşağıdaki linkten bir kahve alarak da programcıya yardımcı olabilirsiniz, şimdiden teşekkürler (:",
        "SeeThePypiPage": "pypi sayfasına bakın",
        "Intro": "Kitaplığımı kullanarak, birçok kod satırını çok az satıra dönüştürebilirsiniz ve sonuç olarak daha temiz, daha güçlü ve daha güvenli bir kodunuz olur, çeşitli form doğrulamaları yapacak çeşitli araçlara ve işlevlere sahip olursunuz",
        "Hello": "Merhaba",
        "Documentation": "Belge",
        "FollowThe": "Twitter'da takip edin :",
        "Welcome": "Çok biçimli doğrulayıcı web sitesine hoş geldiniz",
        "SeeTheGithubSourceCode": "Github kaynağına bakın",
        "ForMoreInfo": "Daha fazla bilgi için",
        "SeeTheNpmPage": "npm sayfasına bakın",
        "SeeTheJitPackPage": "Jitpack sayfasına bakın"
    },
    "DocumentationJsFunctions": {
        "Alternatively, you can import the function using CommonJS syntax with": "Alternatif olarak, CommonJS sözdizimini kullanarak işlevi içe aktarabilirsiniz.",
        "if the input value matches any of the supported postal code formats, and": "Giriş değeri desteklenen posta kodu biçimlerinden herhangi biriyle eşleşiyorsa ve",
        "The function takes two parameters:": "İşlev iki parametre alır:",
        "containing the default error message 'Unknown error'.": "varsayılan hata mesajını içeren 'Bilinmeyen hata'.",
        "If the conversion is successful (resulting in a valid integer), the function checks if the integer is within the valid port range (1 to 65535). If the value is within this range and it is an integer, the function returns true, indicating that the input value represents a valid port number. Otherwise, it returns false.": "Dönüştürme başarılı olursa (geçerli bir tamsayıyla sonuçlanırsa), işlev tamsayının geçerli bağlantı noktası aralığında (1 - 65535) olup olmadığını denetler. Değer bu aralıktaysa ve bir tamsayıysa, işlev true değerini döndürerek giriş değerinin geçerli bir bağlantı noktası numarasını temsil ettiğini gösterir. Aksi takdirde, false döndürür.",
        "The function can be imported using ES6 syntax from the \"multiform-validator\" package:": "İşlev, \"multiform-validator\" paketinden ES6 sözdizimi kullanılarak içe aktarılabilir:",
        "Brazil: 9 digits (e.g., '123456789')": "Brezilya: 9 basamaklı (ör. \"123456789\")",
        "The US phone number to be validated.": "Doğrulanacak ABD telefon numarası.",
        "if the input string is a valid MD5 hash and follows the supported format, and": "giriş dizesi geçerli bir MD5 karmasıysa ve desteklenen biçimi izliyorsa ve",
        "parameter (non-array), or if an error occurs during the validation process, the function will return an object with": "parametresi (dizi olmayan) veya doğrulama işlemi sırasında bir hata oluşursa, işlev",
        "Note:": "Not:",
        "function checks if the input string is a valid MAC address. It returns": "işlevi, giriş dizesinin geçerli bir MAC adresi olup olmadığını kontrol eder. Geri döner",
        "[optional] - The maximum length allowed for the email address. If not provided, the default value is 400.": "[isteğe bağlı] - E-posta adresi için izin verilen maksimum uzunluk. Sağlanmazsa, varsayılan değer 400'dür.",
        "Parameters": "Parametre",
        "The password to be validated.": "Doğrulanacak parola.",
        "This function just checks the syntax of the email to see if it's valid or not, if you need a stronger validation, use: ": "Bu işlev, geçerli olup olmadığını görmek için yalnızca e-postanın sözdizimini kontrol eder, daha güçlü bir doğrulamaya ihtiyacınız varsa şunu kullanın: ",
        "function is used to validate Brazilian phone numbers. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"errorMsg\" property will contain the error message if the phone number is invalid, or it will be null if the phone number is valid.": "işlevi, Brezilya telefon numaralarını doğrulamak için kullanılır. İki özelliğe sahip bir nesne döndürür: \"isValid\" (boolean) ve \"errorMsg\" (string). \"errorMsg\" özelliği, telefon numarası geçersizse hata iletisini içerir veya telefon numarası geçerliyse null olur.",
        "if the input string is empty or consists of only whitespace characters, and": "Giriş dizesi boşsa veya yalnızca boşluk karakterlerinden oluşuyorsa ve",
        "The CPF number to be validated.": "Doğrulanacak CPF numarası.",
        "The function first checks if the input value is either a string or a number. If the value is a string, it is converted to an integer using": "İşlev önce giriş değerinin bir dize mi yoksa sayı mı olduğunu kontrol eder. Değer bir dize ise, kullanılarak bir tamsayıya dönüştürülür.",
        "Supported Passport Formats": "Desteklenen Pasaport Formatları",
        "Default Error Messages": "Varsayılan Hata Mesajları",
        "optional array": "isteğe bağlı dizi",
        "Whether the password requires at least one number. Default value: false.": "Parolanın en az bir sayı gerektirip gerektirmediği. Varsayılan değer: false.",
        "The function is a text area validation utility that checks the validity of a given textarea string based on certain criteria.": "İşlev, belirli kriterlere göre belirli bir metin alanı dizesinin geçerliliğini kontrol eden bir metin alanı doğrulama yardımcı programıdır.",
        "The input string to check if it is a valid Brazilian ZIP Code (CEP).": "Geçerli bir Brezilya Posta Kodu (CEP) olup olmadığını kontrol etmek için giriş dizesi.",
        "The input text from which emails will be extracted.": "E-postaların çıkarılacağı giriş metni.",
        "function is used to validate passport numbers. It returns an object with two properties: 'isValid' (boolean) and 'country' (string). The 'isValid' property will be true if the passport number matches the supported formats, and 'country' property will indicate the country associated with the passport number. If the passport number does not match any supported format, 'isValid' will be false, and 'country' will be null.": "İşlevi, pasaport numaralarını doğrulamak için kullanılır. İki özelliğe sahip bir nesne döndürür: 'isValid' (boolean) ve 'country' (string). Pasaport numarası desteklenen biçimlerle eşleşiyorsa 'isValid' özelliği true olur ve 'country' özelliği pasaport numarasıyla ilişkili ülkeyi gösterir. Pasaport numarası desteklenen herhangi bir biçimle eşleşmiyorsa 'isValid' false ve 'country' null olur.",
        "How to use the isValidVideo function": "isValidVideo işlevi nasıl kullanılır?",
        "function is used to validate surnames. It returns an object with two properties: 'isValid' (boolean) and 'errorMsg' (string). The 'isValid' property will be true if the surname meets the specified criteria, and 'errorMsg' will contain the error message if the surname is invalid, or it will be null if the surname is valid.": "işlevi, soyadlarını doğrulamak için kullanılır. İki özelliğe sahip bir nesne döndürür: 'isValid' (boolean) ve 'errorMsg' (dize). Soyadı belirtilen ölçütleri karşılıyorsa 'isValid' özelliği true olur ve soyadı geçersizse 'errorMsg' hata iletisini içerir veya soyadı geçerliyse null olur.",
        "The surname to be validated.": "Doğrulanacak soyadı.",
        "Contains the corresponding error message, if any, based on the validation result.": "Varsa, doğrulama sonucuna bağlı olarak ilgili hata iletisini içerir.",
        "You can also pass an options object as a second argument to exclude a specific type.": "Belirli bir türü dışlamak için bir options nesnesini ikinci bir bağımsız değişken olarak da iletebilirsiniz.",
        "Australia: 1 uppercase letter followed by 7 digits (e.g., 'A1234567')": "Avustralya: 1 büyük harf ve ardından 7 rakam (ör. 'A1234567')",
        "United States: 9 digits (e.g., '123456789')": "Amerika Birleşik Devletleri: 9 basamak (ör. \"123456789\")",
        "function is used to validate email addresses. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"errorMsg\" property will contain the error message if the email address is invalid, or it will be null if the email address is valid.": "işlevi, e-posta adreslerini doğrulamak için kullanılır. İki özelliğe sahip bir nesne döndürür: \"isValid\" (boolean) ve \"errorMsg\" (string). \"errorMsg\" özelliği, e-posta adresi geçersizse hata iletisini içerir veya e-posta adresi geçerliyse null olur.",
        "The": "bu",
        "The function expects the input value to be passed as a string. It checks each character of the string, and if any character has a character code greater than 127 (non-ASCII), the function returns": "İşlev, giriş değerinin bir dize olarak geçirilmesini bekler. Dizenin her karakterini denetler ve herhangi bir karakterin karakter kodu 127'den büyük (ASCII olmayan) ise, işlev",
        "The input string to check if it is a valid Base64 string.": "Geçerli bir Base64 dizesi olup olmadığını kontrol etmek için giriş dizesi.",
        "The maximum length of the surname. Default is 25.": "Soyadının maksimum uzunluğu. Varsayılan değer 25'tir.",
        "[optional] - The minimum length of the username. Default is 1.": "[isteğe bağlı] - Kullanıcı adının minimum uzunluğu. Varsayılan değer 1'dir.",
        "If the input is not a string or an empty string, it throws an error.": "Giriş bir dize veya boş bir dize değilse, bir hata verir.",
        "The function expects the input value to be passed as a string. It checks if the string is a valid Base64 string using a regular expression. If the input is not a string or an empty string, it throws an error.": "İşlev, giriş değerinin bir dize olarak geçirilmesini bekler. Normal bir ifade kullanarak dizenin geçerli bir Base64 dizesi olup olmadığını denetler. Giriş bir dize veya boş bir dize değilse, bir hata verir.",
        "'veryWeak' - Password with less than 6 characters, consisting only of numbers": "'veryWeak' - 6 karakterden az, yalnızca sayılardan oluşan şifre",
        "if the credit card number is valid, and": "kredi kartı numarası geçerliyse ve",
        "The function expects the input value to be passed as a string representing a credit card number. It removes any non-digit characters and applies the Luhn algorithm to validate the credit card number. If the input is not a string, the function throws an error.": "İşlev, giriş değerinin bir kredi kartı numarasını temsil eden bir dize olarak geçirilmesini bekler. Rakam olmayan karakterleri kaldırır ve kredi kartı numarasını doğrulamak için Luhn algoritmasını uygular. Giriş bir dize değilse, işlev bir hata atar.",
        "function from 'multiform-validator'. Then, define the path to the image you want to check. Call the": "'Multiform-Validator' işlevi. Ardından, kontrol etmek istediğiniz görüntünün yolunu tanımlayın. Ara",
        "function checks if the input string is a valid date.": "işlevi, giriş dizesinin geçerli bir tarih olup olmadığını denetler.",
        "The input string to check if it is empty or contains only whitespace characters.": "Boş olup olmadığını veya yalnızca boşluk karakterleri içerip içermediğini kontrol etmek için giriş dizesi.",
        "function checks if the input string is a valid email address. It returns": "işlevi, giriş dizesinin geçerli bir e-posta adresi olup olmadığını kontrol eder. Geri döner",
        "Whether the password requires at least one special character": "Parolanın en az bir özel karakter gerektirip gerektirmediği",
        "The passport number to be validated.": "Doğrulanacak pasaport numarası.",
        "The function returns an object with two properties:": "İşlev, iki özelliğe sahip bir nesne döndürür:",
        "The function expects the input to be passed as a string.": "İşlev, girdinin bir dize olarak iletilmesini bekler.",
        "if the value is a valid port number (within the range 1 to 65535), and": "Değer geçerli bir bağlantı noktası numarasıysa (1 ile 65535 aralığındaysa) ve",
        "The email address to be validated.": "Doğrulanacak e-posta adresi.",
        "'regular' - Password greater than 10 and has characters that are repeated more than 5 times in sequence": "'regular' - Parola 10'dan büyük ve sırayla 5 defadan fazla tekrarlanan karakterler içeriyor",
        "function evaluates the strength of a given password and returns the type of password strength as a string. The possible strength types are: \"veryWeak\", \"weak\", \"regular\", \"strong\", or \"veryStrong\", based on specific criteria.": "işlevi, belirli bir parolanın gücünü değerlendirir ve parola gücünün türünü bir dize olarak döndürür. Olası güç türleri şunlardır: belirli kriterlere göre \"çokZayıf\", \"zayıf\", \"normal\", \"güçlü\" veya \"çok Güçlü\".",
        "which means it won't clean the email addresses after default domains ['.br', '.io', '.pt', '.us', '.org', '.com'];. If set to": "Bu, varsayılan alan adlarından sonra e-posta adreslerini temizlemeyeceği anlamına gelir ['.br', '.io', '.pt', '.us', '.org', '.com'];. Olarak ayarlanırsa",
        "Using": "Kullan -arak",
        "postalCode": "posta kodu",
        "The postal code to be checked for validity.": "Geçerliliği kontrol edilecek posta kodu.",
        "or not provided, it will return only the first email address found as a string.": "veya sağlanmazsa, yalnızca dize olarak bulunan ilk e-posta adresini döndürür.",
        "Function is used to validate phone numbers. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"isValid\" property will be true if the phone number meets the specified criteria, and \"errorMsg\" will contain the error message if the phone number is invalid, or it will be null if the phone number is valid.": "İşlev, telefon numaralarını doğrulamak için kullanılır. İki özelliğe sahip bir nesne döndürür: \"isValid\" (boolean) ve \"errorMsg\" (string). Telefon numarası belirtilen ölçütleri karşılıyorsa \"isValid\" özelliği true olur ve telefon numarası geçersizse \"errorMsg\" hata mesajını içerir veya telefon numarası geçerliyse null olur.",
        "otherwise.": "yoksa.",
        "[optional] - An object with the following optional properties:": "[isteğe bağlı] - Aşağıdaki isteğe bağlı özelliklere sahip bir nesne:",
        "If no email address is found in the input text, the function will return the string 'No email found'.": "Giriş metninde herhangi bir e-posta adresi bulunamazsa, işlev 'E-posta bulunamadı' dizesini döndürür.",
        "function extracts email addresses from a given text. If the optional": "İşlev, belirli bir metinden e-posta adreslerini çıkarır. İsteğe bağlı ise",
        "Brazil": "Brezilya",
        "The input value to check if it represents a valid decimal number.": "Geçerli bir ondalık sayıyı temsil edip etmediğini kontrol etmek için giriş değeri.",
        "Usage Examples": "Kullanım Örnekleri",
        "Index 2: \"Unknown error\"": "Dizin 2: \"Bilinmeyen hata\"",
        "The function expects the input value to be passed as a string.": "İşlev, giriş değerinin bir dize olarak geçirilmesini bekler.",
        "the function will return an array with all the email addresses found. If set to": "İşlev, bulunan tüm e-posta adreslerini içeren bir dizi döndürür. Olarak ayarlanırsa",
        "The input string to check for ASCII characters.": "ASCII karakterlerini kontrol etmek için giriş dizesi.",
        "function checks if the input value represents a valid postal code for supported countries. It returns": "işlevi, giriş değerinin desteklenen ülkeler için geçerli bir posta kodunu temsil edip etmediğini kontrol eder. Geri döner",
        "The input string representing the credit card number to validate.": "Doğrulanacak kredi kartı numarasını temsil eden giriş dizesi.",
        "method and checks if the resulting string is empty (i.e., has a length of 0). If the input string consists of only whitespace characters, the function also returns.": "yöntemini kullanır ve elde edilen dizenin boş olup olmadığını kontrol eder (yani, uzunluğu 0'dır). Giriş dizesi yalnızca boşluk karakterlerinden oluşuyorsa, işlev de döndürülür.",
        "function is used to check whether an image file is valid or not. It accepts a Buffer as an argument.": "işlevi, bir görüntü dosyasının geçerli olup olmadığını kontrol etmek için kullanılır. Bağımsız değişken olarak bir Buffer kabul eder.",
        "The function expects the input value to be passed as a string or a number representing a decimal number. If the input is not a string or number, or an empty string, the function throws an error. It uses a regular expression to validate decimal numbers, supports both dot (.) and comma (,) as decimal separators, and checks for multiple decimal separators. Additionally, it performs checks for the negative sign to ensure it is only at the beginning of the value.": "İşlev, giriş değerinin bir dize veya ondalık sayıyı temsil eden bir sayı olarak iletilmesini bekler. Giriş bir dize veya sayı ya da boş bir dize değilse, işlev bir hata atar. Ondalık sayıları doğrulamak için normal bir ifade kullanır, ondalık ayırıcı olarak hem nokta (.) hem de virgülü (,) destekler ve birden çok ondalık ayırıcı olup olmadığını denetler. Ek olarak, değerin yalnızca başında olduğundan emin olmak için negatif işareti kontrol eder.",
        "Italy": "İtalya",
        "function checks if the input string contains only ASCII characters. It returns": "işlevi, giriş dizesinin yalnızca ASCII karakterleri içerip içermediğini denetler. Geri döner",
        "[optional] - The country code to check if the email ends with it. If not provided, no country code check will be performed.": "[isteğe bağlı] - E-postanın kendisiyle bitip bitmediğini kontrol etmek için ülke kodu. Sağlanmadığı takdirde ülke kodu kontrolü yapılmayacaktır.",
        "India: 1 uppercase letter followed by 7 digits (e.g., 'A1234567')": "Hindistan: 1 büyük harf ve ardından 7 rakam (ör. 'A1234567')",
        "function checks if the input value is a valid number. It returns": "işlevi, giriş değerinin geçerli bir sayı olup olmadığını kontrol eder. Geri döner",
        "[optional] - An array of error messages to customize the response. If not provided, the function will use default error messages.": "[isteğe bağlı] - Yanıtı özelleştirmek için bir dizi hata mesajı. Sağlanmazsa, işlev varsayılan hata mesajlarını kullanır.",
        "'veryStrong' - Password longer than 16 characters": "'veryStrong' - 16 karakterden uzun şifre",
        "function is used to identify the credit card flag based on the first digits of the card number. It returns the name of the card flag as a string.": "işlevi, kart numarasının ilk rakamlarına göre kredi kartı bayrağını tanımlamak için kullanılır. Kart bayrağının adını dize olarak döndürür.",
        "United Kingdom: 2 uppercase letters followed by 6 digits (e.g., 'AB123456')": "Birleşik Krallık: 2 büyük harf ve ardından 6 rakam (ör. 'AB123456')",
        "How to use the isValidAudio function": "isValidAudio işlevi nasıl kullanılır?",
        "First, import the": "İlk olarak,",
        "if the image is valid and": "görüntü geçerliyse ve",
        "[optional] The minimum length allowed for the name. Default value: 1.": "[isteğe bağlı] Ad için izin verilen minimum uzunluk. Varsayılan değer: 1.",
        "the function will remove duplicate emails from the output list. If set to": "İşlev, yinelenen e-postaları çıktı listesinden kaldıracaktır. Olarak ayarlanırsa",
        "as it considers such strings to be empty.": "bu tür dizeleri boş olarak kabul ettiği için.",
        "Netherlands": "Hollanda",
        "or not provided, it will keep the duplicate emails in the output list.": "veya sağlanmadığında, yinelenen e-postaları çıktı listesinde tutacaktır.",
        "[optional] - The maximum length of the username. Default is Infinity.": "[isteğe bağlı] - Kullanıcı adının maksimum uzunluğu. Varsayılan değer Sonsuz'dur.",
        "Germany: 2 uppercase letters followed by 8 digits (e.g., 'AB12345678')": "Almanya: 2 büyük harf ve ardından 8 rakam (ör. 'AB12345678')",
        "'regular' - Password greater than or equal to 6 and less than 8 characters, containing at least one number and one letter": "'regular' - En az bir rakam ve bir harf içeren, 6 karakterden büyük veya buna eşit ve 8 karakterden az şifre",
        "'veryStrong' - Password with 8 or more characters, containing at least one uppercase letter, one number, one special character and one lowercase letter": "'veryStrong' - En az bir büyük harf, bir sayı, bir özel karakter ve bir küçük harf içeren 8 veya daha fazla karakterden oluşan parola",
        "Default value: false.": "Varsayılan değer: false.",
        "The input textarea string to be validated.": "Doğrulanacak giriş textarea dizesi.",
        "function checks if the input string is a valid MD5 hash. It returns": "işlevi, giriş dizesinin geçerli bir MD5 karması olup olmadığını denetler. Geri döner",
        "if it is not.": "değilse.",
        "Notes": "Notlar",
        "Return Value": "Geri dönüş değeri",
        "false": "YANLIŞ",
        "The examples provided demonstrate how to use the function with different parameters and show the expected return values.": "Verilen örnekler, fonksiyonun farklı parametrelerle nasıl kullanılacağını gösterir ve beklenen dönüş değerlerini gösterir.",
        "Canada: 1 uppercase letter followed by 7 digits (e.g., 'A1234567')": "Kanada: 1 büyük harf ve ardından 7 rakam (ör. 'A1234567')",
        "function is used to validate US phone numbers. It supports various formats, including \"XXX-XXX-XXXX\", \"(XXX) XXX-XXXX\", and \"1 (XXX) XXX-XXXX\". It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"isValid\" property will be true if the phone number is valid, and \"errorMsg\" will contain the error message if the phone number is invalid, or it will be null if the phone number is valid.": "işlevi, ABD telefon numaralarını doğrulamak için kullanılır. \"XXX-XXX-XXXX\", \"(XXX) XXX-XXXX\" ve \"1 (XXX) XXX-XXXX\" dahil olmak üzere çeşitli formatları destekler. İki özelliğe sahip bir nesne döndürür: \"isValid\" (boolean) ve \"errorMsg\" (string). Telefon numarası geçerliyse \"isValid\" özelliği true olur ve telefon numarası geçersizse \"errorMsg\" hata mesajını içerir veya telefon numarası geçerliyse null olur.",
        "The function expects the credit card number to be passed as a string. It uses the first digits of the card number to identify the card flag and returns the corresponding flag name as a string. If the card flag cannot be identified or the input is not a string, it returns 'Unknown'.": "İşlev, kredi kartı numarasının bir dize olarak geçirilmesini bekler. Kart bayrağını tanımlamak için kart numarasının ilk rakamlarını kullanır ve karşılık gelen bayrak adını bir dize olarak döndürür. Kart bayrağı tanımlanamıyorsa veya giriş bir dize değilse, 'Bilinmiyor' döndürür.",
        "function with the image path as an argument. The function will return": "işlevi, bağımsız değişken olarak görüntü yolu ile. İşlev geri dönecektir",
        "Whether the password requires at least one letter. Default value: false.": "Parolanın en az bir harf gerektirip gerektirmediği. Varsayılan değer: false.",
        "function checks if the input string or number represents a valid decimal number. It returns": "işlevi, giriş dizesinin veya sayının geçerli bir ondalık sayıyı temsil edip etmediğini denetler. Geri döner",
        "'regular' - Password between 9 and 12 characters": "'regular' - 9 ila 12 karakter arasında şifre",
        "if the value matches the postal code format for any of the supported countries, and": "Değer, desteklenen ülkelerden herhangi birinin posta kodu biçimiyle eşleşiyorsa ve",
        "The function can be imported using ES6 syntax from the \"validateBRPhoneNumber\" package:": "İşlev, \"validateBRPhoneNumber\" paketinden ES6 sözdizimi kullanılarak içe aktarılabilir:",
        "How to use the isValidTxt function": "isValidTxt işlevi nasıl kullanılır?",
        "set to": "olarak ayarlayın",
        "if the MAC address is valid and follows the supported formats, and": "MAC adresi geçerliyse ve desteklenen formatları takip ediyorsa ve",
        "'weak' - Password that repeats the same character more than 3 times in a row and is less than 10 characters long": "'weak' - Aynı karakteri arka arkaya 3 defadan fazla tekrarlayan ve 10 karakterden kısa olan şifre",
        "This function is a text area validation utility that checks the validity of a given textarea string based on certain criteria.": "Bu işlev, belirli ölçütlere göre belirli bir metin alanı dizesinin geçerliliğini kontrol eden bir metin alanı doğrulama yardımcı programıdır.",
        "The minimum length of the surname. Default is 1.": "Soyadının minimum uzunluğu. Varsayılan değer 1'dir.",
        "if the input value matches any of the supported formats, and": "Giriş değeri desteklenen biçimlerden herhangi biriyle eşleşiyorsa ve",
        "Passing options to the": "Geçiş seçenekleri",
        "The name to be validated.": "Doğrulanacak ad.",
        "function checks if the input string is a valid Brazilian ZIP Code (CEP). It returns": "işlevi, giriş dizesinin geçerli bir Brezilya Posta Kodu (CEP) olup olmadığını kontrol eder. Geri döner",
        "The function takes one parameter, which must be a string representing the password to be evaluated.": "İşlev, değerlendirilecek parolayı temsil eden bir dize olması gereken bir parametre alır.",
        "function is used to validate passwords. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"isValid\" property will be true if the password meets the specified criteria, and \"errorMsg\" will contain the error message if the password is invalid, or it will be null if the password is valid.": "işlevi parolaları doğrulamak için kullanılır. İki özelliğe sahip bir nesne döndürür: \"isValid\" (boolean) ve \"errorMsg\" (string). Parola belirtilen ölçütleri karşılıyorsa \"isValid\" özelliği true olur ve parola geçersizse \"errorMsg\" hata iletisini içerir veya parola geçerliyse null olur.",
        "France: 2 uppercase letters followed by 7 digits (e.g., 'AB1234567')": "Fransa: 2 büyük harf ve ardından 7 rakam (ör. 'AB1234567')",
        "Example": "Örnek",
        "[optional]": "[isteğe bağlı]",
        "the function will use a default list of valid domains. If set to": "İşlev, geçerli etki alanlarının varsayılan bir listesini kullanır. Olarak ayarlanırsa",
        "Default list of valid domains": "Geçerli etki alanlarının varsayılan listesi",
        "The input string representing the MD5 hash to validate. The MD5 hash should be a 32-character string consisting of hexadecimal digits (0-9, A-F, a-f).": "Doğrulanacak MD5 karmasını temsil eden giriş dizesi. MD5 karması, onaltılık basamaklardan (0-9, A-F, a-f) oluşan 32 karakterlik bir dize olmalıdır.",
        "if the email address is valid and follows the supported format, and": "E-posta adresi geçerliyse ve desteklenen biçime uyuyorsa ve",
        "properties, indicating whether the CPF is valid and, in case of an error, the corresponding error message.": "CPF'nin geçerli olup olmadığını ve bir hata durumunda ilgili hata mesajını gösteren özellikler.",
        "function checks if the input string is empty or contains only whitespace characters. It returns": "işlevi, giriş dizesinin boş olup olmadığını veya yalnızca boşluk karakterleri içerip içermediğini denetler. Geri döner",
        "The maximum length allowed for the password. Default value: Infinity.": "Parola için izin verilen maksimum uzunluk. Varsayılan değer: Sonsuz.",
        "Index 1: \"Can not be empty\"": "Dizin 1: \"Boş olamaz\"",
        "Canada": "Kanada",
        "(optional boolean) - If set to": "(isteğe bağlı boolean) - Olarak ayarlanırsa",
        "The input string representing the date": "Tarihi temsil eden giriş dizesi",
        "[optional] The maximum length allowed for the name. Default value: 20.": "[isteğe bağlı] Ad için izin verilen maksimum uzunluk. Varsayılan değer: 20.",
        "The credit card number for which to identify the flag based on the first digits.": "Bayrağın ilk basamaklarına göre tanımlanacağı kredi kartı numarası.",
        "The phone number to be validated.": "Doğrulanacak telefon numarası.",
        "The maximum allowed length for the textarea.": "Metin alanı için izin verilen maksimum uzunluk.",
        "if the value is a valid decimal number and follows one of the supported formats, and": "Değer geçerli bir ondalık sayıysa ve desteklenen biçimlerden birini izliyorsa ve",
        "South Africa": "Güney Afrika",
        "The minimum length allowed for the password. Default value: 1.": "Parola için izin verilen minimum uzunluk. Varsayılan değer: 1.",
        "Examples": "Örnekler",
        "Germany": "Almanya",
        "How to use the isValidImage function": "isValidImage işlevi nasıl kullanılır?",
        "Function Signature": "İşlev İmzası",
        "An array of error messages to customize the response. If not provided, the function will use default error messages.": "Yanıtı özelleştirmek için bir dizi hata iletisi. Sağlanmazsa, işlev varsayılan hata mesajlarını kullanır.",
        "The value to be checked if it represents a valid number.": "Geçerli bir sayıyı temsil edip etmediği kontrol edilecek değer.",
        "The function takes one parameter, which must be a string representing the time to be checked.": "İşlev, denetlenecek zamanı temsil eden bir dize olması gereken bir parametre alır.",
        "function checks if the input string represents a valid credit card number using the Luhn algorithm. It returns": "işlevi, giriş dizesinin Luhn algoritmasını kullanarak geçerli bir kredi kartı numarasını temsil edip etmediğini kontrol eder. Geri döner",
        "if the string is a valid Base64, and": "dize geçerli bir Base64 ise ve",
        "The username to be validated.": "Doğrulanacak kullanıcı adı.",
        "'weak' - Password between 5 and 8 characters, consisting only of numbers": "'weak' - Yalnızca sayılardan oluşan 5 ila 8 karakterden oluşan şifre",
        "China: 1 uppercase letter followed by 8 digits (e.g., 'A12345678')": "Çin: 1 büyük harf ve ardından 8 rakam (ör. \"A12345678\")",
        "Whether the password requires at least one uppercase letter. Default value: false.": "Parolanın en az bir büyük harf gerektirip gerektirmediği. Varsayılan değer: false.",
        "Function Documentation": "İşlev Belgeleri",
        "The function expects the input value to be passed as a string. If the input is not a string, the function throws a TypeError. It removes any leading and trailing whitespace from the input string using the.": "İşlev, giriş değerinin bir dize olarak geçirilmesini bekler. Giriş bir dize değilse, işlev bir TypeError oluşturur. kullanarak giriş dizesinin başındaki ve sonundaki boşlukları kaldırır.",
        "The function uses regular expressions to check the input postal code against supported 'countries' postal code formats. It returns": "İşlev, giriş posta kodunu desteklenen 'ülkelerin' posta kodu biçimlerine göre kontrol etmek için normal ifadeler kullanır. Geri döner",
        "'strong' - Password with 8 or more characters, containing at least one uppercase letter, one number and one lowercase letter": "'strong' - En az bir büyük harf, bir rakam ve bir küçük harf içeren, 8 veya daha fazla karakterden oluşan parola",
        "function is used to validate a Brazilian CNPJ (National Registry of Legal Entities) number. It returns an object containing the": "işlevi, Brezilya CNPJ (Ulusal Tüzel Kişiler Sicili) numarasını doğrulamak için kullanılır. İçeren bir nesne döndürür.",
        "The value to be checked if it represents a valid port number.": "Geçerli bir bağlantı noktası numarasını temsil edip etmediği kontrol edilecek değer.",
        "United Kingdom": "Birleşik Krallık",
        "isEmail just does simple validations like checking if the string has the formatting of an email like several validators out there,": "isEmail, dizenin birkaç doğrulayıcı gibi bir e-postanın biçimlendirmesine sahip olup olmadığını kontrol etmek gibi basit doğrulamalar yapar,",
        "Switzerland": "İsviçre",
        "if the value is a valid number, and": "Değer geçerli bir sayıysa ve",
        "Spain": "İspanya",
        "The input string representing the email address to validate.": "Doğrulanacak e-posta adresini temsil eden giriş dizesi.",
        "The function checks the length of the password and applies certain criteria to classify the password strength. The returned strength type is based on the following criteria:": "İşlev, parolanın uzunluğunu kontrol eder ve parolanın gücünü sınıflandırmak için belirli kriterler uygular. İade edilen güç türü aşağıdaki ölçütlere göre belirlenir:",
        "What is the difference between": "Arasındaki fark nedir",
        "The input string representing the MAC address to validate. The MAC address can be in the following formats: \"001A2B3C4D5E\", \"00:1A:2B:3C:4D:5E\", or \"00-1A-2B-3C-4D-5E\".": "Doğrulanacak MAC adresini temsil eden giriş dizesi. MAC adresi şu biçimlerde olabilir: \"001A2B3C4D5E\", \"00:1A:2B:3C:4D:5E\" veya \"00-1A-2B-3C-4D-5E\".",
        "function checks if the input value represents a valid time in the format \"hh:mm\" or \"hh:mm AM/PM\" or \"hh:mm:ss\" or \"hh:mm:ss AM/PM\". It returns": "işlevi, giriş değerinin \"ss:dd\" veya \"ss:dd/PM\" veya \"ss:dd:ss\" veya \"ss:dd:ss/PM\" biçiminde geçerli bir zamanı temsil edip etmediğini kontrol eder. Geri döner",
        "Index 0: \"This textarea is too big\"": "Dizin 0: \"Bu metin alanı çok büyük\"",
        "The function uses a regular expression to check if the input time string matches any of the supported time formats. It returns": "İşlev, giriş zaman dizesinin desteklenen saat biçimlerinden herhangi biriyle eşleşip eşleşmediğini kontrol etmek için normal bir ifade kullanır. Geri döner",
        "[optional] - This parameter determines whether to check for specific valid email domains or not. If set to": "[isteğe bağlı] - Bu parametre, belirli geçerli e-posta etki alanlarının kontrol edilip edilmeyeceğini belirler. Olarak ayarlanırsa",
        "it will clean after default domains. If set to an array of strings, it will clean after the specified custom domains.": "Varsayılan etki alanlarından sonra temizleyecektir. Bir dize dizisine ayarlanırsa, belirtilen özel etki alanlarından sonra temizlenir.",
        "The time to be checked for validity. It must be in one of the supported formats: \"hh:mm\", \"hh:mm AM/PM\", \"hh:mm:ss\", or \"hh:mm:ss AM/PM\".": "Geçerliliği kontrol edilecek süre. Desteklenen biçimlerden birinde olmalıdır: \"ss:dd\", \"ss:dd/PM\", \"ss:dd:ss\" veya \"ss:dd:ss/PM\".",
        "Supported Countries": "Desteklenen Ülkeler",
        "no domain check will be performed. Alternatively, you can pass an array of custom valid domains to perform the check against a specific list.": "Etki alanı kontrolü yapılmayacaktır. Alternatif olarak, belirli bir listede denetimi gerçekleştirmek için bir dizi özel geçerli etki alanı geçirebilirsiniz.",
        "it returns an array with all the email addresses found. Otherwise, it returns only the first email address found as a string.": "Bulunan tüm e-posta adreslerini içeren bir dizi döndürür. Aksi takdirde, yalnızca dize olarak bulunan ilk e-posta adresini döndürür.",
        "The function takes one parameter that can be either a string or a number: ": "İşlev, dize veya sayı olabilen bir parametre alır: ",
        "The default error messages are as follows:": "Varsayılan hata iletileri aşağıdaki gibidir:",
        "How to use the isValidPdf function": "isValidPdf işlevi nasıl kullanılır?",
        "function is used to validate usernames. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"isValid\" property will be true if the username meets the specified criteria, and \"errorMsg\" will contain the error message if the username is invalid, or it will be null if the username is valid.": "işlevi, kullanıcı adlarını doğrulamak için kullanılır. İki özelliğe sahip bir nesne döndürür: \"isValid\" (boolean) ve \"errorMsg\" (string). Kullanıcı adı belirtilen ölçütleri karşılıyorsa \"isValid\" özelliği true olur ve kullanıcı adı geçersizse \"errorMsg\" hata iletisini içerir veya kullanıcı adı geçerliyse null olur.",
        "if the string is composed of ASCII characters, and": "dize ASCII karakterlerinden oluşuyorsa ve",
        "In this example it only allocates 4 bytes for performance reasons, but you can pass the entire file.": "Bu örnekte, performans nedenleriyle yalnızca 4 bayt ayırır, ancak dosyanın tamamını geçirebilirsiniz.",
        "The Brazilian phone number to be validated.": "Doğrulanacak Brezilya telefon numarası.",
        "'weak' - Password with less than 6 characters, consisting of numbers and letters": "'weak' - Rakamlardan ve harflerden oluşan, 6 karakterden az şifre",
        "Japan": "Japonya",
        "function checks if the input string is a valid Base64 string. It returns": "işlevi, giriş dizesinin geçerli bir Base64 dizesi olup olmadığını denetler. Geri döner",
        "A flag to determine if the textarea is required.": "Metin alanının gerekli olup olmadığını belirlemek için bir bayrak.",
        "'strong' - Password between 13 and 16 characters": "'strong' - 13 ila 16 karakter arasında şifre",
        "(optional boolean | string[]) - Either a boolean value indicating whether to clean after default domains or an array of custom domains to clean after. Default is": "(isteğe bağlı boolean | string[]) - Varsayılan etki alanlarından sonra temizlenip temizlenmeyeceğini belirten bir boole değeri veya daha sonra temizlenecek bir dizi özel etki alanı. Varsayılan değer",
        "true": "doğru",
        "The function takes one parameter, which must be a string representing the postal code to be checked.": "İşlev, denetlenecek posta kodunu temsil eden bir dize olması gereken bir parametre alır.",
        "function checks if the input value represents a valid port number. It returns": "işlevi, giriş değerinin geçerli bir bağlantı noktası numarasını temsil edip etmediğini kontrol eder. Geri döner",
        "function is used to validate a Brazilian CPF (Individual Taxpayer Identification) number. It returns an object containing the": "işlevi, Brezilya CPF (Bireysel Vergi Mükellefi Kimliği) numarasını doğrulamak için kullanılır. İçeren bir nesne döndürür.",
        "The function expects the input MD5 hash to be passed as a string. If the input is not a string, the function throws a TypeError. It removes leading and trailing whitespace from the input string and checks if the resulting string has a valid length (exactly 32 characters). Then, it uses a regular expression to verify if the cleaned MD5 hash consists only of hexadecimal digits. Additionally, the function checks if the MD5 hash is not a known weak hash, such as \"d41d8cd98f00b204e9800998ecf8427e\". If any of the checks fail, the function returns false; otherwise, it returns true, indicating that the input string is a valid MD5 hash.": "İşlev, giriş MD5 karmasının bir dize olarak geçirilmesini bekler. Giriş bir dize değilse, işlev bir TypeError oluşturur. Giriş dizesinden baştaki ve sondaki boşlukları kaldırır ve elde edilen dizenin geçerli bir uzunluğa (tam olarak 32 karakter) sahip olup olmadığını kontrol eder. Ardından, temizlenen MD5 karmasının yalnızca onaltılık basamaklardan oluşup oluşmadığını doğrulamak için normal bir ifade kullanır. Ayrıca işlev, MD5 karmasının \"d41d8cd98f00b204e9800998ecf8427e\" gibi bilinen zayıf bir karma olup olmadığını denetler. Denetimlerden herhangi biri başarısız olursa, işlev false döndürür; aksi takdirde, giriş dizesinin geçerli bir MD5 karması olduğunu belirten true değerini döndürür.",
        "if the value matches any of these formats, and": "Değer bu biçimlerden herhangi biriyle eşleşiyorsa ve",
        "The function takes one parameter:": "İşlev bir parametre alır:",
        "The function expects the input MAC address to be passed as a string. If the input is not a string, the function throws a TypeError. It removes all non-alphanumeric characters from the input string using a regular expression and checks if the resulting string has a valid length (exactly 12 characters). Then, it uses another regular expression to verify if the cleaned MAC address matches the supported pattern. The supported pattern is a 12-character string consisting of hexadecimal digits (0-9, A-F, a-f), with optional separators (\":\", \"-\") between pairs of hexadecimal digits.": "İşlev, giriş MAC adresinin bir dize olarak iletilmesini bekler. Giriş bir dize değilse, işlev bir TypeError oluşturur. Normal bir ifade kullanarak giriş dizesinden alfasayısal olmayan tüm karakterleri kaldırır ve elde edilen dizenin geçerli bir uzunluğa (tam olarak 12 karakter) sahip olup olmadığını kontrol eder. Ardından, temizlenen MAC adresinin desteklenen desenle eşleşip eşleşmediğini doğrulamak için başka bir normal ifade kullanır. Desteklenen desen, onaltılık basamaklardan (0-9, A-F, a-f) oluşan ve onaltılık basamak çiftleri arasında isteğe bağlı ayırıcılar (\":\", \"-\") bulunan 12 karakterlik bir dizedir.",
        "function to convert the value to a floating-point number. If the conversion results in a valid number and the value is finite (not infinity or NaN), the function returns true, indicating that the input value is a valid number. Otherwise, it returns false.": "Değeri kayan noktalı sayıya dönüştürme işlevi. Dönüştürme geçerli bir sayıyla sonuçlanırsa ve değer sonluysa (sonsuz veya NaN değilse), işlev true değerini döndürerek giriş değerinin geçerli bir sayı olduğunu gösterir. Aksi takdirde, false döndürür.",
        "United States of America": "Amerika Birleşik Devletleri",
        "Function is used to validate names. It returns an object with two properties: 'isValid' (boolean) and 'errorMsg' (string). The 'errorMsg' property will contain the error message if the name is invalid, or it will be null if the name is valid.": "İşlev, adları doğrulamak için kullanılır. İki özelliğe sahip bir nesne döndürür: 'isValid' (boolean) ve 'errorMsg' (dize). 'errorMsg' özelliği, ad geçersizse hata iletisini içerir veya ad geçerliyse null olur.",
        "The function expects the input email to be passed as a string. If the input is not a string, it will throw an error. If the email passed is an invalid email, it will return.": "İşlev, giriş e-postasının bir dize olarak iletilmesini bekler. Giriş bir dize değilse, bir hata verir. İletilen e-posta geçersiz bir e-postaysa, geri dönecektir.",
        "The function checks if the input value is not null, undefined, or a boolean type. If any of these conditions are met, the function returns false since these values cannot represent valid numbers. For all other types, the function uses the.": "İşlev, giriş değerinin null, tanımsız veya boole türünde olup olmadığını denetler. Bu koşullardan herhangi biri karşılanırsa, bu değerler geçerli sayıları temsil edemediğinden işlev false döndürür. Diğer tüm türler için, işlev kullanır.",
        "function is used to check whether an txt file is valid or not. It accepts a Buffer as an argument.": "işlevi, bir txt dosyasının geçerli olup olmadığını kontrol etmek için kullanılır. Bağımsız değişken olarak bir Buffer kabul eder.",
        "The password to be evaluated for strength.": "Güç açısından değerlendirilecek parola.",
        "Indicates if the textarea is valid based on the given criteria.": "Metin alanının verilen ölçütlere göre geçerli olup olmadığını belirtir.",
        "if the CEP is valid, and": "CEP geçerliyse ve",
        "function is used to check whether an audio file is valid or not. It accepts a Buffer as an argument.": "işlevi, bir ses dosyasının geçerli olup olmadığını kontrol etmek için kullanılır. Bağımsız değişken olarak bir Buffer kabul eder.",
        "and": "ve",
        "does not, it does complex validations and better than that, you can customize the validations passing the information in the parameters.": "yapmaz, karmaşık doğrulamalar yapar ve bundan daha iyisi, parametrelerdeki bilgileri ileten doğrulamaları özelleştirebilirsiniz.",
        "If the function is called with an invalid value for the": "İşlev geçersiz bir değerle çağrılırsa",
        "function is used to check whether an video file is valid or not. It accepts a Buffer as an argument.": "işlevi, bir video dosyasının geçerli olup olmadığını kontrol etmek için kullanılır. Bağımsız değişken olarak bir Buffer kabul eder.",
        "France": "Fransa",
        "parameter is set to": "parametresi olarak ayarlanır",
        "There are two ways to import the function:": "İşlevi içe aktarmanın iki yolu vardır:",
        "An array of custom error messages for different validation conditions. The array should contain three elements corresponding to different error scenarios. If not provided, default error messages will be used. Default Error Messages:": "Farklı doğrulama koşulları için bir dizi özel hata iletisi. Dizi, farklı hata senaryolarına karşılık gelen üç öğe içermelidir. Sağlanmazsa, varsayılan hata mesajları kullanılır. Varsayılan Hata Mesajları:",
        "Italy: 1 uppercase letter followed by 7 digits (e.g., 'A1234567')": "İtalya: 1 büyük harf ve ardından 7 rakam (ör. 'A1234567')",
        "The function can be imported using ES6 syntax from the \"password-strength-tester\" package:": "İşlev, \"password-strength-tester\" paketinden ES6 sözdizimi kullanılarak içe aktarılabilir:",
        "Types that are validated": "Doğrulanan türler",
        "A list of custom error messages. If not provided, it uses a default list of error messages.": "Özel hata mesajlarının listesi. Sağlanmazsa, varsayılan bir hata mesajları listesi kullanır.",
        "The CNPJ number to be validate.": "Doğrulanacak CNPJ numarası.",
        "Example Usage with Nestjs and Multer": "Nestjs ve Multer ile Örnek Kullanım",
        "properties, indicating whether the CNPJ is valid and, in case of an error, the corresponding error message.": "özellikleri, CNPJ'nin geçerli olup olmadığını ve bir hata durumunda ilgili hata mesajını gösterir.",
        "The function supports postal codes for the following countries:": "İşlev, aşağıdaki ülkeler için posta kodlarını destekler:",
        "function is used to check whether an pdf file is valid or not. It accepts a Buffer as an argument.": "işlevi, bir PDF dosyasının geçerli olup olmadığını kontrol etmek için kullanılır. Bağımsız değişken olarak bir Buffer kabul eder."
    },
    "Header": {
        "header_docs": "Belge",
        "header_already_here": "Zaten buradasınız (:",
        "header_title": "Çok Biçimli Doğrulayıcı",
        "header_buy_coffee": "Bana bir kahve ısmarla?",
        "header_github": "Benim github",
        "header_home": "Ev",
        "header_go_home": "Eve Gidin",
        "header_info": "Bilgi"
    },
    "Footer": {
        "Services": "Hizmetleri",
        "Terms": "Terim",
        "Privacy Policy": "Gizlilik Politikası",
        "CopyRightMsg": "Çok biçimli doğrulayıcı © 2023 - Gabriel Logan",
        "Home": "Ev",
        "About": "Hakkında"
    },
    "SidebarWrapperJs": {
        "Documentation": "Belge",
        "Home": "Ev"
    },
    "DocumentationPython": {
        "Back to home": "Eve geri dön",
        "Installation": "Kurma",
        "Install the package using pip: ": "Paketi pip kullanarak yükleyin: ",
        "Functions signature": "İşlev imzası",
        "All params with default values are optional.": "Varsayılan değerlere sahip tüm parametreler isteğe bağlıdır.",
        "Methods": "Yöntemler"
    },
    "NotFound": {
        "Msg": "Bu sayfa bulunamadı.",
        "Status": "404"
    },
    "News": {
        "News Ad Page": "Haber Reklam Sayfası",
        "News Ad Page for the Multiform Validator library.": "Çok Biçimli Doğrulayıcı kitaplığı için Haber Reklamı Sayfası."
    }
}