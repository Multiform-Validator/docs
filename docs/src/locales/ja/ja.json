{
  "HomeLayout": {
    "Support me on Buy me a coffee": "コーヒーを買ってきてください!",
    "Description": "電子メール、電話、パスワード、cpf、cnpj、クレジットカード、画像のMIMETYPE検証用のマジックナンバーなど、さまざまなフォームフィールドを検証するために作成された多言語ライブラリ。",
    "Technology": "テクノロジー",
    "Opengraph description": "検証用に作成された多言語ライブラリ、電子メール、画像、cpf、cnpj、クレジットカード、マジックナンバーなどのさまざまなフォームフィールド。",
    "Classification": "バリデーションライブラリ",
    "Title": "マルチフォームバリデーター",
    "Opengraph title": "Multiform Validator - 多言語バリデーションライブラリ"
  },
  "DocumentationJs": {
    "By - Gabriel Logan": "著者 - ガブリエル・ローガン",
    "Installation": "取り付け",
    "This package contains various modules for validating different types of data. Below are the available validation modules:": "このパッケージには、さまざまなタイプのデータを検証するためのさまざまなモジュールが含まれています。以下は、使用可能な検証モジュールです。",
    "INFO: ": "情報：",
    "Welcome Introduction Text": "Multiform Validatorのメインページへようこそ!ここでは、データ検証に便利なJavaScriptライブラリであるMultiform Validatorが提供するさまざまな関数の詳細なドキュメントを見つけることができます。各関数は、さまざまな種類のデータの検証を支援するように設計されており、コードの堅牢性と安全性が向上します。Multiform Validator は、電子メール、パスワード、名前、姓、パスポート番号、電話番号など、さまざまなデータ型を検証できる一連の特殊な関数で構成されています。各関数には構成可能なパラメーターがあり、プロジェクトのニーズに合わせてカスタマイズ可能なエラー メッセージが表示されます。各ドキュメントページには、その目的、受け入れられるパラメータ、使用例など、関数の包括的な説明があります。さらに、デフォルトのエラーメッセージの詳細と、アプリケーションに合わせてそれらをカスタマイズする方法にアクセスできます。Multiform Validator を使用すると、フォームへのユーザー入力が正しく、確立されたルールに準拠していることを確認できます。この検証は、無効なエントリ、破損したデータ、セキュリティの脆弱性などの問題を防ぐために不可欠です。私たちは、Multiform Validator を新機能と改善で強化および拡張し、検証のニーズに対応するさらに強力で柔軟なツールにするために継続的に取り組んでいます。これらのドキュメントがお役に立ち、プロジェクトでのMultiform Validatorの使用を簡素化することを願っています。利用可能なさまざまな機能を自由に探索し、質問や提案がある場合は遠慮なくお問い合わせください。データ検証ツールとしてMultiform Validatorをお選びいただきありがとうございます。マルチフォームバリデーターチーム",
    "if you prefer, you can use importing as:": "必要に応じて、次のようにインポートを使用できます。",
    "Official documentation": "公式ドキュメント",
    "Example of use with CDN": "CDNでの利用例",
    "Data Validator": "データバリデーター",
    "FirstInfoText": "\"validate\" という名前のすべての関数は、2 つのプロパティ isValid: true |false と errorMsg: 'エラーのある文字列'",
    "Feel free to find bugs Text Msg": "気軽にバグを見つけて私に報告してください。あなたのフィードバックは大歓迎です。ガブリエル・ローガンからのハグ!",
    "Back to home page": "トップページへ戻る",
    "If you want to help me, you can buy me a coffee (:": "私を手伝いたいなら、コーヒーを買ってきてください(:",
    "SecondInfoText": "残りのものはtrue|false|string|arrayを返すことができ、それぞれのドキュメントを見てください",
    "Available Validation Modules": "利用可能な検証モジュール",
    "Feel free to explore msg": "さまざまな関数を自由に調べ、さまざまな入力を試して、それらの動作を理解してください。問題が発生した場合や提案がある場合は、遠慮なくご連絡ください。あなたのフィードバックは貴重であり、パッケージの改善に役立ちます。ハッピーコーディング!",
    "This npm package provides JavaScript functions to validate various forms fields.": "この npm パッケージは、さまざまなフォームフィールドを検証するための JavaScript 関数を提供します。"
  },
  "DocumentationLayout": {
    "Documentation": "ドキュメンテーション",
    "Documentation for the Multiform Validator library.": "Multiform Validator ライブラリのドキュメント。"
  },
  "Terms": {
    "Terms and Conditions": "規約と条件",
    "Unauthorized use of this website is strictly prohibited.": "このウェブサイトの無断使用は固く禁じられています。",
    "Terms and Conditions of Multiform Validator library": "Multiform Validator ライブラリの利用規約",
    "Welcome to Gabriel Logan Web Services. By using this website, you agree to the following terms and conditions:": "Gabriel Logan Web Services へようこそ。このウェブサイトを使用することにより、以下の条件に同意したことになります。",
    "We do not collect any personal data through this website, and your privacy is important to us.": "このウェブサイトを通じて個人データを収集することはなく、お客様のプライバシーは私たちにとって重要です。",
    "Your use of this website and any disputes arising are subject to the laws of [Your Country/Region].": "このWebサイトの使用および発生する紛争は、[あなたの国/地域]の法律の対象となります。",
    "The content provided on this website is for general information purposes only, and we make no warranties or representations regarding its accuracy or completeness.": "このウェブサイトで提供されるコンテンツは、一般的な情報提供のみを目的としており、その正確性または完全性についていかなる保証または表明も行いません。",
    "We use the \"multiform-validator\" library, licensed under the MIT License, to enhance form field validation. However, we are not responsible for its usage or any consequences resulting from third-party use of the library.": "MITライセンスの下でライセンスされた「multiform-validator」ライブラリを使用して、フォームフィールドの検証を強化します。ただし、その使用、および第三者によるライブラリの使用に起因する結果については責任を負いません。",
    "Thank you for visiting our website and using our services. If you have any questions or concerns, please don\u2019t hesitate to contact us.": "当社のウェブサイトを訪問し、当社のサービスをご利用いただきありがとうございます。ご不明な点やご不明な点がございましたら、お気軽にお問い合わせください。"
  },
  "PrivacyPolices": {
    "privacy_questions": "当社のプライバシーポリシーや「multiform-validator」ライブラリの使用についてご質問やご不明な点がございましたら、お気軽にお問い合わせください。私たちはどんな問い合わせにも対処し、あなたの心の安らぎを確保するためにここにいます。",
    "privacy_intro": "Gabriel Logan Web Servicesでは、お客様のプライバシーを真摯に受け止めています。当社は、当社のウェブサイト上でいかなるデータも収集せず、「multiform-validator」ライブラリを通じていかなるデータも使用しないことを保証したいと思います。あなたの情報は完全に機密のままであり、あなたのプライバシーは私たちにとって最優先事項です。",
    "Privacy Policy": "プライバシーポリシー",
    "validator_local": "「multiform-validator」ライブラリは、外部サーバーにアクセスしたり、外部サーバーにデータを送信したりすることなく、Webアプリケーション上のフォームフィールドを検証するように設計されています。すべての検証はブラウザ内でローカルに行われるため、機密情報がデバイスから離れることはありません。",
    "privacy_thanks": "Gabriel Logan Web Servicesをお選びいただきありがとうございます。私たちは、あらゆる段階でプライバシーを保護しながら、優れたソリューションを提供することを楽しみにしています。",
    "privacy_title": "プライバシーポリシー - お客様のデータは安全です",
    "validator_secure": "私たちはデータセキュリティの重要性を理解しており、100%安全になるように細心の注意を払って「マルチフォームバリデーター」ライブラリを開発しました。あなたのデータはあなたの管理下にあり、私たちは図書館によって処理された情報にアクセスすることはできません。",
    "privacy_no_personal_data": "当社のウェブサイトにアクセスすると、名前、電子メールアドレス、連絡先情報などの個人データが収集または保存されることはありませんのでご安心ください。私たちは、安全で匿名のブラウジング体験を提供することを信じています。",
    "privacy_trust": "あなたの信頼は私たちにとって貴重であり、私たちのサービスと「multiform-validator」ライブラリを自信を持って使用していただきたいと考えています。お客様のプライバシーに対する当社のコミットメントは揺るぎなく、当社の業務のあらゆる側面において、お客様のデータのセキュリティと保護を優先し続けます。"
  },
  "Info": {
    "info_intro": "Gabriel Loganによって開発された強力なMulti Libraryであるmultiform-validatorを紹介します。この汎用性の高いライブラリは、電子メールアドレス、電話番号、パスワード、CPF(ブラジルの個人納税者登録番号)、クレジットカード番号など、多数のフォームフィールドを検証するように設計されています。",
    "info_conclusion": "したがって、フォームフィールド検証のための包括的なソリューションを探している場合は、multiform-validator以外に探す必要はありません。このライブラリの力を活用すれば、データ収集プロセスが合理化され、正確で、安全になりますのでご安心ください。",
    "info_title": "multiform-validator - フォームフィールドバリデーション用のマルチライブラリ",
    "info_performance": "Gabriel Loganは、パフォーマンス、効率、信頼性に重点を置いたマルチフォームバリデーターライブラリの開発に誇りを持っています。ライブラリはさまざまなブラウザ用に最適化されており、多様なオーディエンスにシームレスな互換性を保証します。",
    "info_prebuilt_rules": "multiform-validator ライブラリには、事前に構築されたバリデーションルールとカスタマイズ可能なオプションの広範なセットが付属しています。Webアプリケーションに簡単に統合し、クライアント側の検証の利点を享受して、無効なフォーム送信の数を減らし、全体的なユーザーエクスペリエンスを向上させることができます。",
    "info_flexibility": "multi-form-validatorを際立たせているのは、その柔軟性と使いやすさです。数行のJavaScriptコードを追加するだけで、さまざまなフォームフィールドにバリデーションルールを簡単に適用できます。さらに、このライブラリは有益なエラーメッセージを提供し、入力を修正する方法をユーザーに案内することで、フラストレーションとフォーム放棄率を低減します。",
    "Info_Page": "情報ページ",
    "info_backend": "multiform-validatorを使用してバックエンドで検証を行うこともできますが、javascript、pythonを使用するあらゆるタイプのフォーム検証または関数で機能しますので、自由に使用してください",
    "info_ensure": "multiform-validator を使用すると、フォームから送信されたデータが正確かつ安全であることを確認できます。登録フォーム、チェックアウトプロセス、またはデータ入力システムを構築する場合でも、このライブラリはあなたをカバーします。"
  },
  "Manifest": {
    "Description": "電子メール、電話、パスワード、cpf、cnpj、クレジットカード、画像のMIMETYPE検証用のマジックナンバーなど、さまざまなフォームフィールドを検証するために作成された多言語ライブラリ。",
    "ShortName": "マルチフォームバリデーター",
    "Name": "Multiform Validator - 多言語バリデーションライブラリ"
  },
  "DocumentationPage": {
    "doc_java_title": "ジャワ",
    "doc_py_text": "ここでは、Python 言語のドキュメントを見つけることができます。",
    "doc_title": "[ドキュメント] ページ",
    "doc_subtitle": "サポートされているすべての言語は次のとおりです",
    "doc_java_text": "ここには、Java言語のドキュメントがあります。",
    "doc_py_title": "ニシキヘビ",
    "doc_js_title": "JavaScriptについて",
    "doc_intro": "ドキュメントページへようこそ。ここでは、サポートされているすべての言語と、それぞれのドキュメントを見つけることができます。",
    "doc_js_text": "ここでは、JavaScript 言語のドキュメントを見つけることができます。",
    "doc_java_coming": "来て..."
  },
  "About": {
    "about_backend": "しかし、私のスキルはそれだけにとどまりません。バックエンド開発にも精通しており、Python、Java、JavaScript(Node.js)などの言語の専門知識があります。堅牢で安全なWebアプリケーションの構築は、サーバー側のロジックの複雑さを理解しているため、私の強みです。私のソリューションは、効率性、信頼性、スケーラビリティを重視しており、ピーク時でもアプリケーションがスムーズなユーザーエクスペリエンスを提供できるようにしています。",
    "about_frontend": "フロントエンド開発者として、私はユーザーエクスペリエンスとインターフェースデザインに鋭い目を持っています。私は、React と Nextjs と typescript を使用して、クリエイティブなコンセプトを視覚的に魅力的でインタラクティブな Web アプリケーションに変換するのが大好きです。シームレスなナビゲーションからスムーズなアニメーションまで、フロントエンドプロジェクトがエレガンスと機能性を醸し出すように、細部にまで注意を払っています。",
    "About_Page": "[概要] ページ",
    "about_achievement": "私の最も誇りに思っている成果の 1 つは、フォームの検証を簡素化し、高速化する画期的な Web ページの作成です。この独創的なソリューションは、人々や企業がフォーム検証プロセスを合理化できるように設計されています。Web開発に関する幅広い知識を活用し、最先端のテクノロジーを組み込むことで、私のページはフォームを検証するための超高速で超効率的な方法を提供します。そのユーザーフレンドリーなインターフェースと直感的な機能により、データ収集の生産性と精度を向上させようとしている専門家にとって不可欠なツールとなっています。",
    "about_title": "こんにちは、ガブリエル・ローガンです",
    "about_inspiration": "私がコードに夢中になっていないときは、私の周りの世界にインスピレーションを求めていることに気づくかもしれません。アウトドアを探検したり、芸術や文化に没頭したり、示唆に富む議論に参加したりするなど、さまざまな経験から、プログラミングへのアプローチや同僚やクライアントとの交流を形作っています。",
    "About_Page_Description": "multiform-validator ライブラリの作成者である Gabriel Logan について知り、Web 開発、革新的なソリューション、ユーザー エクスペリエンスへの献身に対する彼の情熱について学びましょう。",
    "about_creative": "技術的なスキルとは別に、私は創造的な問題解決者として活躍しています。私は革新的な考え方で課題に取り組むのが大好きで、ユーザーエクスペリエンスを向上させる方法を常に探しています。既成概念にとらわれず、独創的なソリューションを提供する私の能力は、Web開発の分野における真のリーダーとして私を際立たせています。",
    "about_conclusion": "結論として、私はガブリエル・ローガンであり、フロントエンドとバックエンドのスキルをシームレスに織り交ぜて優れたWebエクスペリエンスを作成する情熱的なプログラマーです。私の革新的な考え方、細部へのこだわり、効率への献身により、フォーム検証の世界に大きな影響を与えると信じている画期的なページを開発することができました。デジタル環境が進化し続ける中、私は最前線に立ち、新しい課題を受け入れ、Web開発における卓越した仕事を通じて変化をもたらす準備ができています。",
    "about_intro": "私は自分自身を、フロントエンドとバックエンドの両方の開発に情熱を注ぐ多才なプログラマーだと考えています。優れたウェブ体験を生み出すことが私の原動力であり、自分が生み出す仕事に大きな誇りを持っています。"
  },
  "HomePage": {
    "HelpMsg": "また、以下のリンクでコーヒーを買うことでプログラマーを助けることもできます。",
    "SeeThePypiPage": "pypi のページを参照してください",
    "Intro": "私のライブラリを使用すると、多くの行のコードを非常に少ない行に変換でき、その結果、よりクリーンで、より強力で、より安全なコードが得られ、いくつかのフォーム検証を行ういくつかのツールと関数があります",
    "Hello": "こんにちは",
    "Documentation": "ドキュメンテーション",
    "FollowThe": "フォローする",
    "Welcome": "multiform-validator の Web サイトへようこそ",
    "SeeTheGithubSourceCode": "githubのソースを参照してください",
    "ForMoreInfo": "詳細情報",
    "SeeTheNpmPage": "npm のページを参照してください"
  },
  "DocumentationJsFunctions": {
    "Alternatively, you can import the function using CommonJS syntax with": "または、CommonJS 構文を使用して関数をインポートすることもできます。",
    "if the input value matches any of the supported postal code formats, and": "入力値がサポートされている郵便番号形式のいずれかと一致する場合、および",
    "The function takes two parameters:": "この関数は 2 つのパラメーターを取ります。",
    "containing the default error message 'Unknown error'.": "デフォルトのエラーメッセージ「不明なエラー」が含まれています。",
    "If the conversion is successful (resulting in a valid integer), the function checks if the integer is within the valid port range (1 to 65535). If the value is within this range and it is an integer, the function returns true, indicating that the input value represents a valid port number. Otherwise, it returns false.": "変換が成功した場合 (有効な整数の場合)、関数は整数が有効なポート範囲 (1 から 65535) 内にあるかどうかを確認します。値がこの範囲内にあり、整数の場合、関数は true を返し、入力値が有効なポート番号を表していることを示します。それ以外の場合は、false を返します。",
    "The function can be imported using ES6 syntax from the \"multiform-validator\" package:": "この関数は、ES6 構文を使用して \"multiform-validator\" パッケージからインポートできます。",
    "Brazil: 9 digits (e.g., '123456789')": "ブラジル: 9 桁 (例: '123456789')",
    "The US phone number to be validated.": "検証する米国の電話番号。",
    "if the input string is a valid MD5 hash and follows the supported format, and": "入力文字列が有効な MD5 ハッシュであり、サポートされている形式に従っている場合、および",
    "parameter (non-array), or if an error occurs during the validation process, the function will return an object with": "パラメータ(非配列)であったり、バリデーション処理中にエラーが発生した場合、関数は",
    "Note:": "手記：",
    "function checks if the input string is a valid MAC address. It returns": "関数は、入力文字列が有効なMACアドレスであるかどうかをチェックします。これは、",
    "[optional] - The maximum length allowed for the email address. If not provided, the default value is 400.": "[オプション] - メールアドレスに許可される最大長。指定しない場合、デフォルト値は 400 です。",
    "Parameters": "パラメーター",
    "The password to be validated.": "検証するパスワード。",
    "This function just checks the syntax of the email to see if it's valid or not, if you need a stronger validation, use: ": "この関数は、電子メールの構文をチェックして有効かどうかを確認するだけですが、より強力な検証が必要な場合は、以下を使用します。",
    "function is used to validate Brazilian phone numbers. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"errorMsg\" property will contain the error message if the phone number is invalid, or it will be null if the phone number is valid.": "関数は、ブラジルの電話番号を検証するために使用されます。\"isValid\" (ブール値) と \"errorMsg\" (文字列) の 2 つのプロパティを持つオブジェクトを返します。\"errorMsg\" プロパティには、電話番号が無効な場合はエラー メッセージが含まれ、電話番号が有効な場合は null になります。",
    "if the input string is empty or consists of only whitespace characters, and": "入力文字列が空であるか、空白文字のみで構成されている場合、および",
    "The CPF number to be validated.": "検証する CPF 番号。",
    "The function first checks if the input value is either a string or a number. If the value is a string, it is converted to an integer using": "この関数は、まず、入力値が文字列か数値かをチェックします。値が文字列の場合は、",
    "Supported Passport Formats": "サポートされているパスポート形式",
    "Default Error Messages": "デフォルトのエラーメッセージ",
    "optional array": "省略可能な配列",
    "Whether the password requires at least one number. Default value: false.": "パスワードに少なくとも 1 つの数字が必要かどうか。デフォルト値: false。",
    "The function is a text area validation utility that checks the validity of a given textarea string based on certain criteria.": "この関数は、特定の基準に基づいて特定のテキストエリア文字列の有効性をチェックするテキストエリア検証ユーティリティです。",
    "The input string to check if it is a valid Brazilian ZIP Code (CEP).": "有効なブラジルの郵便番号 (CEP) かどうかを確認するための入力文字列。",
    "The input text from which emails will be extracted.": "電子メールの抽出元となる入力テキスト。",
    "function is used to validate passport numbers. It returns an object with two properties: 'isValid' (boolean) and 'country' (string). The 'isValid' property will be true if the passport number matches the supported formats, and 'country' property will indicate the country associated with the passport number. If the passport number does not match any supported format, 'isValid' will be false, and 'country' will be null.": "関数は、パスポート番号を検証するために使用されます。これは、'isValid' (ブール値) と 'country' (文字列) の 2 つのプロパティを持つオブジェクトを返します。パスポート番号がサポートされている形式と一致する場合、'isValid' プロパティは true になり、'country' プロパティはパスポート番号に関連付けられた国を示します。パスポート番号がサポートされている形式と一致しない場合、'isValid' は false になり、'country' は null になります。",
    "How to use the isValidVideo function": "isValidVideo 関数の使用方法",
    "function is used to validate surnames. It returns an object with two properties: 'isValid' (boolean) and 'errorMsg' (string). The 'isValid' property will be true if the surname meets the specified criteria, and 'errorMsg' will contain the error message if the surname is invalid, or it will be null if the surname is valid.": "関数は姓を検証するために使用されます。これは、'isValid' (ブール値) と 'errorMsg' (文字列) の 2 つのプロパティを持つオブジェクトを返します。姓が指定された基準を満たしている場合は 'isValid' プロパティが true になり、姓が無効な場合は 'errorMsg' にエラー メッセージが含まれ、姓が有効な場合は null になります。",
    "The surname to be validated.": "検証する姓。",
    "Contains the corresponding error message, if any, based on the validation result.": "検証結果に基づいて、対応するエラー メッセージ (存在する場合) が含まれます。",
    "You can also pass an options object as a second argument to exclude a specific type.": "また、options オブジェクトを 2 番目の引数として渡して、特定の型を除外することもできます。",
    "Australia: 1 uppercase letter followed by 7 digits (e.g., 'A1234567')": "オーストラリア: 大文字 1 文字の後に 7 桁の数字が続く (例: 'A1234567')",
    "United States: 9 digits (e.g., '123456789')": "米国: 9 桁 (例: '123456789')",
    "function is used to validate email addresses. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"errorMsg\" property will contain the error message if the email address is invalid, or it will be null if the email address is valid.": "関数は、電子メール アドレスを検証するために使用されます。\"isValid\" (ブール値) と \"errorMsg\" (文字列) の 2 つのプロパティを持つオブジェクトを返します。\"errorMsg\" プロパティには、電子メール アドレスが無効な場合はエラー メッセージが含まれ、電子メール アドレスが有効な場合は null が含まれます。",
    "The": "ザ",
    "The function expects the input value to be passed as a string. It checks each character of the string, and if any character has a character code greater than 127 (non-ASCII), the function returns": "この関数は、入力値が文字列として渡されることを想定しています。文字列の各文字をチェックし、文字コードが 127 (非 ASCII) を超える場合、関数は",
    "The input string to check if it is a valid Base64 string.": "有効な Base64 文字列であるかどうかを確認するための入力文字列。",
    "The maximum length of the surname. Default is 25.": "姓の最大長。既定値は 25 です。",
    "[optional] - The minimum length of the username. Default is 1.": "[オプション] - ユーザー名の最小長。既定値は 1 です。",
    "If the input is not a string or an empty string, it throws an error.": "入力が文字列でも空の文字列でもない場合は、エラーがスローされます。",
    "The function expects the input value to be passed as a string. It checks if the string is a valid Base64 string using a regular expression. If the input is not a string or an empty string, it throws an error.": "この関数は、入力値が文字列として渡されることを想定しています。正規表現を使用して、文字列が有効な Base64 文字列であるかどうかをチェックします。入力が文字列でも空の文字列でもない場合は、エラーがスローされます。",
    "'veryWeak' - Password with less than 6 characters, consisting only of numbers": "'veryWeak' - 数字のみで構成される 6 文字未満のパスワード",
    "if the credit card number is valid, and": "クレジットカード番号が有効な場合、",
    "The function expects the input value to be passed as a string representing a credit card number. It removes any non-digit characters and applies the Luhn algorithm to validate the credit card number. If the input is not a string, the function throws an error.": "この関数は、入力値がクレジット カード番号を表す文字列として渡されることを想定しています。数字以外の文字をすべて削除し、Luhn アルゴリズムを適用してクレジット カード番号を検証します。入力が文字列でない場合、関数はエラーをスローします。",
    "function from 'multiform-validator'. Then, define the path to the image you want to check. Call the": "関数を 'multiform-validator' から呼び出します。次に、確認する画像へのパスを定義します。を呼び出します。",
    "function checks if the input string is a valid date.": "関数は、入力文字列が有効な日付であるかどうかをチェックします。",
    "The input string to check if it is empty or contains only whitespace characters.": "空か空白文字のみが含まれているかをチェックする入力文字列。",
    "function checks if the input string is a valid email address. It returns": "関数は、入力文字列が有効な電子メールアドレスであるかどうかをチェックします。これは、",
    "Whether the password requires at least one special character": "パスワードに少なくとも 1 つの特殊文字が必要かどうか",
    "The passport number to be validated.": "検証するパスポート番号。",
    "The function returns an object with two properties:": "この関数は、次の 2 つのプロパティを持つオブジェクトを返します。",
    "The function expects the input to be passed as a string.": "この関数は、入力が文字列として渡されることを想定しています。",
    "if the value is a valid port number (within the range 1 to 65535), and": "値が有効なポート番号 (1 から 65535 の範囲) の場合、および",
    "The email address to be validated.": "検証するメールアドレス。",
    "'regular' - Password greater than 10 and has characters that are repeated more than 5 times in sequence": "'regular' - パスワードが 10 より大きく、連続して 5 回以上繰り返される文字を含むパスワード",
    "function evaluates the strength of a given password and returns the type of password strength as a string. The possible strength types are: \"veryWeak\", \"weak\", \"regular\", \"strong\", or \"veryStrong\", based on specific criteria.": "関数は、指定されたパスワードの強度を評価し、パスワードの強度のタイプを文字列として返します。特定の基準に基づいて、可能な強度の種類は、\"veryWeak\"、\"weak\"、\"regular\"、\"strong\"、または \"veryStrong\" です。",
    "which means it won't clean the email addresses after default domains ['.br', '.io', '.pt', '.us', '.org', '.com'];. If set to": "つまり、デフォルトドメイン['.br'、'.io'、'.pt'、'.us'、'.org'、'.com'];の後のメールアドレスはクリーンアップされません。に設定されている場合、",
    "Using": "使用",
    "postalCode": "郵便番号",
    "The postal code to be checked for validity.": "有効性をチェックする郵便番号。",
    "or not provided, it will return only the first email address found as a string.": "または指定しない場合は、見つかった最初のメールアドレスのみが文字列として返されます。",
    "Function is used to validate phone numbers. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"isValid\" property will be true if the phone number meets the specified criteria, and \"errorMsg\" will contain the error message if the phone number is invalid, or it will be null if the phone number is valid.": "電話番号を検証するために使用されます。\"isValid\" (ブール値) と \"errorMsg\" (文字列) の 2 つのプロパティを持つオブジェクトを返します。電話番号が指定された条件を満たしている場合は \"isValid\" プロパティが true になり、電話番号が無効な場合は \"errorMsg\" にエラー メッセージが含まれ、電話番号が有効な場合は null になります。",
    "otherwise.": "然も無くば。",
    "[optional] - An object with the following optional properties:": "[optional] - 次の省略可能なプロパティを持つオブジェクト。",
    "If no email address is found in the input text, the function will return the string 'No email found'.": "入力テキストにメールアドレスが見つからない場合、関数は文字列「メールアドレスが見つかりません」を返します。",
    "function extracts email addresses from a given text. If the optional": "関数は、指定されたテキストから電子メールアドレスを抽出します。オプションの",
    "Brazil": "ブラジル",
    "The input value to check if it represents a valid decimal number.": "有効な 10 進数を表しているかどうかを確認する入力値。",
    "Usage Examples": "使用例",
    "Index 2: \"Unknown error\"": "インデックス 2: 「不明なエラー」",
    "The function expects the input value to be passed as a string.": "この関数は、入力値が文字列として渡されることを想定しています。",
    "the function will return an array with all the email addresses found. If set to": "この関数は、見つかったすべてのメールアドレスを含む配列を返します。に設定されている場合、",
    "The input string to check for ASCII characters.": "ASCII文字をチェックする入力文字列。",
    "function checks if the input value represents a valid postal code for supported countries. It returns": "関数は、入力値がサポートされている国の有効な郵便番号を表しているかどうかをチェックします。これは、",
    "The input string representing the credit card number to validate.": "検証するクレジット カード番号を表す入力文字列。",
    "method and checks if the resulting string is empty (i.e., has a length of 0). If the input string consists of only whitespace characters, the function also returns.": "メソッドを呼び出し、結果の文字列が空である(つまり、長さが0である)かどうかをチェックします。入力文字列が空白文字のみで構成されている場合、関数は戻ります。",
    "function is used to check whether an image file is valid or not. It accepts a Buffer as an argument.": "関数は、画像ファイルが有効かどうかをチェックするために使用されます。引数として Buffer を受け入れます。",
    "The function expects the input value to be passed as a string or a number representing a decimal number. If the input is not a string or number, or an empty string, the function throws an error. It uses a regular expression to validate decimal numbers, supports both dot (.) and comma (,) as decimal separators, and checks for multiple decimal separators. Additionally, it performs checks for the negative sign to ensure it is only at the beginning of the value.": "この関数は、入力値が文字列または 10 進数を表す数値として渡されることを想定しています。入力が文字列でも数値でも、空の文字列でもない場合、関数はエラーをスローします。正規表現を使用して 10 進数を検証し、ドット (.) とコンマ (,) の両方を小数点記号としてサポートし、複数の小数点記号をチェックします。さらに、負の符号が値の先頭にのみあることを確認するために、負の符号のチェックを実行します。",
    "Italy": "イタリア",
    "function checks if the input string contains only ASCII characters. It returns": "関数は、入力文字列にASCII文字のみが含まれているかどうかをチェックします。これは、",
    "[optional] - The country code to check if the email ends with it. If not provided, no country code check will be performed.": "[オプション] - メールがそれで終わるかどうかを確認する国コード。指定しない場合、国コードチェックは実行されません。",
    "India: 1 uppercase letter followed by 7 digits (e.g., 'A1234567')": "インド: 大文字 1 文字の後に 7 桁の数字が続く (例: 'A1234567')",
    "function checks if the input value is a valid number. It returns": "関数は、入力値が有効な数値であるかどうかをチェックします。これは、",
    "[optional] - An array of error messages to customize the response. If not provided, the function will use default error messages.": "[オプション] - 応答をカスタマイズするためのエラー メッセージの配列。指定しない場合、関数は既定のエラー メッセージを使用します。",
    "'veryStrong' - Password longer than 16 characters": "'veryStrong' - パスワードが 16 文字を超えています",
    "function is used to identify the credit card flag based on the first digits of the card number. It returns the name of the card flag as a string.": "関数は、カード番号の最初の桁に基づいてクレジットカードフラグを識別するために使用されます。カードフラグの名前を文字列として返します。",
    "United Kingdom: 2 uppercase letters followed by 6 digits (e.g., 'AB123456')": "イギリス: 大文字 2 文字の後に 6 桁の数字が続く (例: 'AB123456')",
    "How to use the isValidAudio function": "isValidAudio 関数の使用方法",
    "First, import the": "まず、",
    "if the image is valid and": "画像が有効で、かつ",
    "[optional] The minimum length allowed for the name. Default value: 1.": "[オプション]名前に許容される最小長。デフォルト値: 1。",
    "the function will remove duplicate emails from the output list. If set to": "この関数は、出力リストから重複する電子メールを削除します。に設定されている場合、",
    "as it considers such strings to be empty.": "そのような文字列は空であると見なすためです。",
    "Netherlands": "オランダ",
    "or not provided, it will keep the duplicate emails in the output list.": "または指定しない場合、重複するメールが出力リストに保持されます。",
    "[optional] - The maximum length of the username. Default is Infinity.": "[オプション] - ユーザー名の最大長。既定値は Infinity です。",
    "Germany: 2 uppercase letters followed by 8 digits (e.g., 'AB12345678')": "ドイツ: 大文字 2 文字の後に 8 桁の数字が続く (例: 'AB12345678')",
    "'regular' - Password greater than or equal to 6 and less than 8 characters, containing at least one number and one letter": "'regular' - 6 文字以上 8 文字未満で、少なくとも 1 つの数字と 1 つの文字を含むパスワード",
    "'veryStrong' - Password with 8 or more characters, containing at least one uppercase letter, one number, one special character and one lowercase letter": "'veryStrong' - 少なくとも 1 つの大文字、1 つの数字、1 つの特殊文字、および 1 つの小文字を含む 8 文字以上のパスワード",
    "Default value: false.": "デフォルト値: false。",
    "The input textarea string to be validated.": "検証する入力テキストエリア文字列。",
    "function checks if the input string is a valid MD5 hash. It returns": "関数は、入力文字列が有効な MD5 ハッシュであるかどうかをチェックします。これは、",
    "if it is not.": "そうでない場合は。",
    "Notes": "筆記",
    "Return Value": "戻り値",
    "false": "偽",
    "The examples provided demonstrate how to use the function with different parameters and show the expected return values.": "提供される例は、さまざまなパラメーターで関数を使用する方法を示し、予想される戻り値を示します。",
    "Canada: 1 uppercase letter followed by 7 digits (e.g., 'A1234567')": "カナダ: 大文字 1 文字の後に 7 桁の数字が続く (例: 'A1234567')",
    "function is used to validate US phone numbers. It supports various formats, including \"XXX-XXX-XXXX\", \"(XXX) XXX-XXXX\", and \"1 (XXX) XXX-XXXX\". It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"isValid\" property will be true if the phone number is valid, and \"errorMsg\" will contain the error message if the phone number is invalid, or it will be null if the phone number is valid.": "関数は、米国の電話番号を検証するために使用されます。「XXX-XXX-XXXX」、「(XXX)XXX-XXXX」、「1(XXX)XXX-XXXX」など、さまざまな形式をサポートしています。\"isValid\" (ブール値) と \"errorMsg\" (文字列) の 2 つのプロパティを持つオブジェクトを返します。電話番号が有効な場合は \"isValid\" プロパティが true になり、電話番号が無効な場合は \"errorMsg\" にエラー メッセージが含まれ、電話番号が有効な場合は null になります。",
    "The function expects the credit card number to be passed as a string. It uses the first digits of the card number to identify the card flag and returns the corresponding flag name as a string. If the card flag cannot be identified or the input is not a string, it returns 'Unknown'.": "この関数は、クレジット カード番号が文字列として渡されることを想定しています。カード番号の最初の桁を使用してカード フラグを識別し、対応するフラグ名を文字列として返します。カード フラグを識別できない場合、または入力が文字列でない場合は、'Unknown' を返します。",
    "function with the image path as an argument. The function will return": "関数を引数として画像パスを使用します。関数は",
    "Whether the password requires at least one letter. Default value: false.": "パスワードに少なくとも 1 文字が必要かどうか。デフォルト値: false。",
    "function checks if the input string or number represents a valid decimal number. It returns": "関数は、入力文字列または数値が有効な 10 進数を表しているかどうかをチェックします。これは、",
    "'regular' - Password between 9 and 12 characters": "'regular' - 9 文字から 12 文字のパスワード",
    "if the value matches the postal code format for any of the supported countries, and": "値がサポートされている国の郵便番号形式と一致する場合、および",
    "The function can be imported using ES6 syntax from the \"validateBRPhoneNumber\" package:": "この関数は、ES6 構文を使用して \"validateBRPhoneNumber\" パッケージからインポートできます。",
    "How to use the isValidTxt function": "isValidTxt 関数の使用方法",
    "set to": "に設定",
    "if the MAC address is valid and follows the supported formats, and": "MACアドレスが有効で、サポートされている形式に従っている場合、および",
    "'weak' - Password that repeats the same character more than 3 times in a row and is less than 10 characters long": "'weak' - 同じ文字を 3 回以上連続して繰り返す、長さが 10 文字未満のパスワード",
    "This function is a text area validation utility that checks the validity of a given textarea string based on certain criteria.": "この関数は、特定の基準に基づいて特定のテキストエリア文字列の有効性をチェックするテキストエリア検証ユーティリティです。",
    "The minimum length of the surname. Default is 1.": "姓の最小長。既定値は 1 です。",
    "if the input value matches any of the supported formats, and": "入力値がサポートされている形式のいずれかと一致する場合、および",
    "Passing options to the": "オプションを",
    "The name to be validated.": "検証する名前。",
    "function checks if the input string is a valid Brazilian ZIP Code (CEP). It returns": "関数は、入力文字列が有効なブラジルの郵便番号 (CEP) であるかどうかをチェックします。これは、",
    "The function takes one parameter, which must be a string representing the password to be evaluated.": "この関数は 1 つのパラメーターを取り、このパラメーターは評価されるパスワードを表す文字列でなければなりません。",
    "function is used to validate passwords. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"isValid\" property will be true if the password meets the specified criteria, and \"errorMsg\" will contain the error message if the password is invalid, or it will be null if the password is valid.": "関数は、パスワードの検証に使用されます。\"isValid\" (ブール値) と \"errorMsg\" (文字列) の 2 つのプロパティを持つオブジェクトを返します。\"isValid\" プロパティは、パスワードが指定された条件を満たしている場合は true になり、パスワードが無効な場合は \"errorMsg\" にエラー メッセージが含まれ、パスワードが有効な場合は null になります。",
    "France: 2 uppercase letters followed by 7 digits (e.g., 'AB1234567')": "フランス: 大文字 2 文字の後に 7 桁の数字が続く (例: 'AB1234567')",
    "Example": "例",
    "[optional]": "[オプション]",
    "the function will use a default list of valid domains. If set to": "この関数は、有効なドメインの既定のリストを使用します。に設定されている場合、",
    "Default list of valid domains": "有効なドメインのデフォルトリスト",
    "The input string representing the MD5 hash to validate. The MD5 hash should be a 32-character string consisting of hexadecimal digits (0-9, A-F, a-f).": "検証する MD5 ハッシュを表す入力文字列。MD5 ハッシュは、16 進数 (0-9、A-F、a-f) で構成される 32 文字の文字列である必要があります。",
    "if the email address is valid and follows the supported format, and": "メールアドレスが有効で、サポートされている形式に従っている場合、および",
    "properties, indicating whether the CPF is valid and, in case of an error, the corresponding error message.": "プロパティ、CPF が有効かどうかを示し、エラーの場合は対応するエラーメッセージを示します。",
    "function checks if the input string is empty or contains only whitespace characters. It returns": "関数は、入力文字列が空であるか、空白文字のみを含んでいるかをチェックします。これは、",
    "The maximum length allowed for the password. Default value: Infinity.": "パスワードに許可される最大長。デフォルト値: 無限大。",
    "Index 1: \"Can not be empty\"": "インデックス1:「空にすることはできません」",
    "Canada": "カナダ",
    "(optional boolean) - If set to": "(オプションのブール値) - に設定されている場合",
    "The input string representing the date": "日付を表す入力文字列",
    "[optional] The maximum length allowed for the name. Default value: 20.": "[オプション]名前に許可される最大長。デフォルト値: 20。",
    "The credit card number for which to identify the flag based on the first digits.": "最初の桁に基づいてフラグを識別するクレジット カード番号。",
    "The phone number to be validated.": "検証する電話番号。",
    "The maximum allowed length for the textarea.": "テキストエリアに許容される最大長。",
    "if the value is a valid decimal number and follows one of the supported formats, and": "値が有効な 10 進数であり、サポートされている形式のいずれかに従っている場合、および",
    "South Africa": "南アフリカ",
    "The minimum length allowed for the password. Default value: 1.": "パスワードに許容される最小文字数。デフォルト値: 1。",
    "Examples": "例",
    "Germany": "ドイツ",
    "How to use the isValidImage function": "isValidImage 関数の使用方法",
    "Function Signature": "関数シグネチャ",
    "An array of error messages to customize the response. If not provided, the function will use default error messages.": "応答をカスタマイズするためのエラーメッセージの配列。指定しない場合、関数は既定のエラー メッセージを使用します。",
    "The value to be checked if it represents a valid number.": "有効な数値を表しているかどうかをチェックする値。",
    "The function takes one parameter, which must be a string representing the time to be checked.": "この関数は 1 つのパラメーターを取り、チェックする時間を表す文字列である必要があります。",
    "function checks if the input string represents a valid credit card number using the Luhn algorithm. It returns": "関数は、Luhn アルゴリズムを使用して、入力文字列が有効なクレジット カード番号を表しているかどうかをチェックします。これは、",
    "if the string is a valid Base64, and": "文字列が有効な Base64 の場合、および",
    "The username to be validated.": "検証するユーザー名。",
    "'weak' - Password between 5 and 8 characters, consisting only of numbers": "'weak' - 5 文字から 8 文字までのパスワードで、数字のみで構成されます。",
    "China: 1 uppercase letter followed by 8 digits (e.g., 'A12345678')": "中国: 大文字 1 文字の後に 8 桁の数字が続く (例: 'A12345678')",
    "Whether the password requires at least one uppercase letter. Default value: false.": "パスワードに少なくとも 1 つの大文字が必要かどうか。デフォルト値: false。",
    "Function Documentation": "関数のドキュメント",
    "The function expects the input value to be passed as a string. If the input is not a string, the function throws a TypeError. It removes any leading and trailing whitespace from the input string using the.": "この関数は、入力値が文字列として渡されることを想定しています。入力が文字列でない場合、関数は TypeError をスローします。を使用して、入力文字列の先頭と末尾の空白を削除します。",
    "The function uses regular expressions to check the input postal code against supported 'countries' postal code formats. It returns": "この関数は正規表現を使用して、入力された郵便番号をサポートされている「国」の郵便番号形式と照合します。これは、",
    "'strong' - Password with 8 or more characters, containing at least one uppercase letter, one number and one lowercase letter": "'strong' - 8文字以上のパスワードで、少なくとも1つの大文字、1つの数字、1つの小文字が含まれています。",
    "function is used to validate a Brazilian CNPJ (National Registry of Legal Entities) number. It returns an object containing the": "関数は、ブラジルのCNPJ(National Registry of Legal Entities)番号を検証するために使用されます。これは、",
    "The value to be checked if it represents a valid port number.": "有効なポート番号を表しているかどうかをチェックする値。",
    "United Kingdom": "英国",
    "isEmail just does simple validations like checking if the string has the formatting of an email like several validators out there,": "isEmailは、文字列がそこにあるいくつかのバリデーターのように電子メールのフォーマットを持っているかどうかをチェックするような単純な検証を行うだけです。",
    "Switzerland": "スイス",
    "if the value is a valid number, and": "値が有効な数値の場合、",
    "Spain": "スペイン",
    "The input string representing the email address to validate.": "検証するメールアドレスを表す入力文字列。",
    "The function checks the length of the password and applies certain criteria to classify the password strength. The returned strength type is based on the following criteria:": "この関数は、パスワードの長さをチェックし、特定の基準を適用してパスワードの強度を分類します。返される強度タイプは、次の基準に基づいています。",
    "What is the difference between": "の違いは何ですか",
    "The input string representing the MAC address to validate. The MAC address can be in the following formats: \"001A2B3C4D5E\", \"00:1A:2B:3C:4D:5E\", or \"00-1A-2B-3C-4D-5E\".": "検証する MAC アドレスを表す入力文字列。MAC アドレスの形式は、「001A2B3C4D5E」、「00:1A:2B:3C:4D:5E」、または「00-1A-2B-3C-4D-5E」です。",
    "function checks if the input value represents a valid time in the format \"hh:mm\" or \"hh:mm AM/PM\" or \"hh:mm:ss\" or \"hh:mm:ss AM/PM\". It returns": "関数は、入力値が \"hh:mm\" または \"hh:mm AM/PM\" または \"hh:mm:ss\" または \"hh:mm:ss AM/PM\" の形式で有効な時刻を表しているかどうかをチェックします。これは、",
    "Index 0: \"This textarea is too big\"": "インデックス 0: 「このテキストエリアは大きすぎます」",
    "The function uses a regular expression to check if the input time string matches any of the supported time formats. It returns": "この関数は、正規表現を使用して、入力された時刻文字列がサポートされている時刻形式のいずれかと一致するかどうかを確認します。これは、",
    "[optional] - This parameter determines whether to check for specific valid email domains or not. If set to": "[オプション] - このパラメータは、特定の有効な電子メールドメインをチェックするかどうかを決定します。に設定されている場合、",
    "it will clean after default domains. If set to an array of strings, it will clean after the specified custom domains.": "デフォルトのドメインの後にクリーンアップされます。文字列の配列に設定すると、指定されたカスタムドメインの後にクリーンアップされます。",
    "The time to be checked for validity. It must be in one of the supported formats: \"hh:mm\", \"hh:mm AM/PM\", \"hh:mm:ss\", or \"hh:mm:ss AM/PM\".": "妥当性を検査する時間。サポートされている形式 \"hh:mm\"、\"hh:mm AM/PM\"、\"hh:mm:ss\"、または \"hh:mm:ss AM/PM\" のいずれかである必要があります。",
    "Supported Countries": "サポートされている国",
    "no domain check will be performed. Alternatively, you can pass an array of custom valid domains to perform the check against a specific list.": "ドメインチェックは実行されません。または、カスタムの有効なドメインの配列を渡して、特定のリストに対してチェックを実行することもできます。",
    "it returns an array with all the email addresses found. Otherwise, it returns only the first email address found as a string.": "見つかったすべてのメールアドレスを含む配列を返します。それ以外の場合は、見つかった最初のメールアドレスのみを文字列として返します。",
    "The function takes one parameter that can be either a string or a number: ": "この関数は、文字列または数値のいずれかのパラメーターを 1 つ受け取ります。",
    "The default error messages are as follows:": "デフォルトのエラーメッセージは次のとおりです。",
    "How to use the isValidPdf function": "isValidPdf 関数の使用方法",
    "function is used to validate usernames. It returns an object with two properties: \"isValid\" (boolean) and \"errorMsg\" (string). The \"isValid\" property will be true if the username meets the specified criteria, and \"errorMsg\" will contain the error message if the username is invalid, or it will be null if the username is valid.": "関数は、ユーザー名を検証するために使用されます。\"isValid\" (ブール値) と \"errorMsg\" (文字列) の 2 つのプロパティを持つオブジェクトを返します。ユーザー名が指定された条件を満たしている場合は \"isValid\" プロパティが true になり、ユーザー名が無効な場合は \"errorMsg\" にエラー メッセージが含まれ、ユーザー名が有効な場合は null になります。",
    "if the string is composed of ASCII characters, and": "文字列がASCII文字で構成されている場合、および",
    "In this example it only allocates 4 bytes for performance reasons, but you can pass the entire file.": "この例では、パフォーマンス上の理由から 4 バイトしか割り当てられませんが、ファイル全体を渡すことができます。",
    "The Brazilian phone number to be validated.": "検証するブラジルの電話番号。",
    "'weak' - Password with less than 6 characters, consisting of numbers and letters": "'weak' - 数字と文字で構成される 6 文字未満のパスワード",
    "Japan": "日本",
    "function checks if the input string is a valid Base64 string. It returns": "関数は、入力文字列が有効な Base64 文字列であるかどうかをチェックします。これは、",
    "A flag to determine if the textarea is required.": "テキストエリアが必要かどうかを判断するフラグ。",
    "'strong' - Password between 13 and 16 characters": "'strong' - 13 文字から 16 文字のパスワード",
    "(optional boolean | string[]) - Either a boolean value indicating whether to clean after default domains or an array of custom domains to clean after. Default is": "(optional boolean | string[]) - デフォルトドメインの後にクリーンアップするか、後でクリーンアップするカスタムドメインの配列かを示すブール値。既定値は",
    "true": "真",
    "The function takes one parameter, which must be a string representing the postal code to be checked.": "この関数は 1 つのパラメーターを取りますが、このパラメーターはチェックする郵便番号を表す文字列である必要があります。",
    "function checks if the input value represents a valid port number. It returns": "関数は、入力値が有効なポート番号を表しているかどうかをチェックします。これは、",
    "function is used to validate a Brazilian CPF (Individual Taxpayer Identification) number. It returns an object containing the": "関数は、ブラジルのCPF(個人納税者識別番号)を検証するために使用されます。これは、",
    "The function expects the input MD5 hash to be passed as a string. If the input is not a string, the function throws a TypeError. It removes leading and trailing whitespace from the input string and checks if the resulting string has a valid length (exactly 32 characters). Then, it uses a regular expression to verify if the cleaned MD5 hash consists only of hexadecimal digits. Additionally, the function checks if the MD5 hash is not a known weak hash, such as \"d41d8cd98f00b204e9800998ecf8427e\". If any of the checks fail, the function returns false; otherwise, it returns true, indicating that the input string is a valid MD5 hash.": "この関数は、入力 MD5 ハッシュが文字列として渡されることを想定しています。入力が文字列でない場合、関数は TypeError をスローします。入力文字列から先頭と末尾の空白を削除し、結果の文字列の長さが有効な (正確に 32 文字) かどうかをチェックします。次に、正規表現を使用して、クリーンアップされた MD5 ハッシュが 16 進数のみで構成されているかどうかを確認します。さらに、この関数は、MD5 ハッシュが \"d41d8cd98f00b204e9800998ecf8427e\" などの既知の弱いハッシュではないかどうかを確認します。いずれかのチェックが失敗した場合、関数は false を返します。それ以外の場合は、入力文字列が有効な MD5 ハッシュであることを示す true を返します。",
    "if the value matches any of these formats, and": "値がこれらの形式のいずれかと一致する場合、および",
    "The function takes one parameter:": "この関数は 1 つのパラメーターを取ります。",
    "The function expects the input MAC address to be passed as a string. If the input is not a string, the function throws a TypeError. It removes all non-alphanumeric characters from the input string using a regular expression and checks if the resulting string has a valid length (exactly 12 characters). Then, it uses another regular expression to verify if the cleaned MAC address matches the supported pattern. The supported pattern is a 12-character string consisting of hexadecimal digits (0-9, A-F, a-f), with optional separators (\":\", \"-\") between pairs of hexadecimal digits.": "この関数は、入力 MAC アドレスが文字列として渡されることを想定しています。入力が文字列でない場合、関数は TypeError をスローします。正規表現を使用して入力文字列から英数字以外の文字をすべて削除し、結果の文字列が有効な長さ (正確に 12 文字) であるかどうかを確認します。次に、別の正規表現を使用して、クリーンアップされた MAC アドレスがサポートされているパターンと一致するかどうかを確認します。サポートされているパターンは、16 進数 (0-9、A-F、a - f) で構成される 12 文字の文字列で、16 進数のペアの間にオプションの区切り文字 (\":\"、\"-\") があります。",
    "function to convert the value to a floating-point number. If the conversion results in a valid number and the value is finite (not infinity or NaN), the function returns true, indicating that the input value is a valid number. Otherwise, it returns false.": "関数を使用して値を浮動小数点数に変換します。変換の結果が有効な数値で、値が有限 (無限大でも NaN でもない) の場合、関数は true を返し、入力値が有効な数値であることを示します。それ以外の場合は、false を返します。",
    "United States of America": "アメリカ合衆国",
    "Function is used to validate names. It returns an object with two properties: 'isValid' (boolean) and 'errorMsg' (string). The 'errorMsg' property will contain the error message if the name is invalid, or it will be null if the name is valid.": "関数は、名前を検証するために使用されます。これは、'isValid' (ブール値) と 'errorMsg' (文字列) の 2 つのプロパティを持つオブジェクトを返します。'errorMsg' プロパティには、名前が無効な場合はエラー メッセージが含まれ、名前が有効な場合は null になります。",
    "The function expects the input email to be passed as a string. If the input is not a string, it will throw an error. If the email passed is an invalid email, it will return.": "この関数は、入力メールが文字列として渡されることを想定しています。入力が文字列でない場合は、エラーがスローされます。渡されたメールが無効なメールの場合は、返されます。",
    "The function checks if the input value is not null, undefined, or a boolean type. If any of these conditions are met, the function returns false since these values cannot represent valid numbers. For all other types, the function uses the.": "この関数は、入力値が null、undefined、またはブール型でないかどうかを確認します。これらの条件のいずれかが満たされた場合、これらの値は有効な数値を表すことができないため、関数は false を返します。他のすべての型では、関数は the.",
    "function is used to check whether an txt file is valid or not. It accepts a Buffer as an argument.": "関数は、TXTファイルが有効かどうかを確認するために使用されます。引数として Buffer を受け入れます。",
    "The password to be evaluated for strength.": "強度を評価するパスワード。",
    "Indicates if the textarea is valid based on the given criteria.": "指定された基準に基づいてテキストエリアが有効かどうかを示します。",
    "if the CEP is valid, and": "CEP が有効な場合、および",
    "function is used to check whether an audio file is valid or not. It accepts a Buffer as an argument.": "機能は、オーディオファイルが有効かどうかを確認するために使用されます。引数として Buffer を受け入れます。",
    "and": "そして",
    "does not, it does complex validations and better than that, you can customize the validations passing the information in the parameters.": "そうではなく、複雑な検証を行い、それよりも優れたのは、パラメーターに情報を渡す検証をカスタマイズできることです。",
    "If the function is called with an invalid value for the": "関数が無効な値で呼び出された場合、",
    "function is used to check whether an video file is valid or not. It accepts a Buffer as an argument.": "機能は、ビデオファイルが有効かどうかを確認するために使用されます。引数として Buffer を受け入れます。",
    "France": "フランス",
    "parameter is set to": "パラメーターが",
    "There are two ways to import the function:": "関数をインポートするには、次の 2 つの方法があります。",
    "An array of custom error messages for different validation conditions. The array should contain three elements corresponding to different error scenarios. If not provided, default error messages will be used. Default Error Messages:": "さまざまな検証条件のカスタムエラーメッセージの配列。配列には、異なるエラーシナリオに対応する 3 つの要素が含まれている必要があります。指定しない場合は、デフォルトのエラーメッセージが使用されます。デフォルトのエラーメッセージ:",
    "Italy: 1 uppercase letter followed by 7 digits (e.g., 'A1234567')": "イタリア: 大文字 1 文字の後に 7 桁の数字が続く (例: 'A1234567')",
    "The function can be imported using ES6 syntax from the \"password-strength-tester\" package:": "この関数は、ES6 構文を使用して \"password-strength-tester\" パッケージからインポートできます。",
    "Types that are validated": "検証される型",
    "A list of custom error messages. If not provided, it uses a default list of error messages.": "カスタムエラーメッセージのリスト。指定しない場合は、エラーメッセージのデフォルトリストが使用されます。",
    "The CNPJ number to be validate.": "検証する CNPJ 番号。",
    "Example Usage with Nestjs and Multer": "NestjsとMulterでの使用例",
    "properties, indicating whether the CNPJ is valid and, in case of an error, the corresponding error message.": "プロパティーは、CNPJ が有効かどうかを示し、エラーの場合は対応するエラー・メッセージを示します。",
    "The function supports postal codes for the following countries:": "この関数は、次の国の郵便番号をサポートしています。",
    "function is used to check whether an pdf file is valid or not. It accepts a Buffer as an argument.": "関数は、PDFファイルが有効かどうかを確認するために使用されます。引数として Buffer を受け入れます。"
  },
  "Header": {
    "header_docs": "ドキュメンテーション",
    "header_already_here": "あなたはすでにここにいます(:",
    "header_title": "マルチフォームバリデーター",
    "header_buy_coffee": "コーヒーを買ってきてくれないか?",
    "header_github": "私のgithub",
    "header_home": "家",
    "header_go_home": "家へ帰ってください",
    "header_info": "情報"
  },
  "Footer": {
    "Services": "サービス",
    "Terms": "条件",
    "Privacy Policy": "プライバシーポリシー",
    "CopyRightMsg": "マルチフォームバリデーター2023 © - Gabriel Logan",
    "Home": "家",
    "About": "に関しては"
  },
  "SidebarWrapperJs": {
    "Documentation": "ドキュメンテーション",
    "Home": "家"
  },
  "DocumentationPython": {
    "Back to home": "ホームへ戻る",
    "Installation": "取り付け",
    "Install the package using pip: ": "pip を使用してパッケージをインストールします。",
    "Functions signature": "関数シグネチャ",
    "All params with default values are optional.": "デフォルト値を持つすべてのパラメータはオプションです。",
    "Methods": "メソッド"
  },
  "NotFound": {
    "Msg": "このページが見つかりませんでした。",
    "Status": "404"
  }
}